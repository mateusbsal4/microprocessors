

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Jun 13 21:07:10 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	dabs	1,0x7E,2
    50     0000                     
    51                           ; Version 2.40
    52                           ; Generated 17/11/2021 GMT
    53                           ; 
    54                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F886 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86     0000                     	;# 
    87     0001                     	;# 
    88     0002                     	;# 
    89     0003                     	;# 
    90     0004                     	;# 
    91     0005                     	;# 
    92     0006                     	;# 
    93     0007                     	;# 
    94     0009                     	;# 
    95     000A                     	;# 
    96     000B                     	;# 
    97     000C                     	;# 
    98     000D                     	;# 
    99     000E                     	;# 
   100     000E                     	;# 
   101     000F                     	;# 
   102     0010                     	;# 
   103     0011                     	;# 
   104     0012                     	;# 
   105     0013                     	;# 
   106     0014                     	;# 
   107     0015                     	;# 
   108     0015                     	;# 
   109     0016                     	;# 
   110     0017                     	;# 
   111     0018                     	;# 
   112     0019                     	;# 
   113     001A                     	;# 
   114     001B                     	;# 
   115     001B                     	;# 
   116     001C                     	;# 
   117     001D                     	;# 
   118     001E                     	;# 
   119     001F                     	;# 
   120     0081                     	;# 
   121     0085                     	;# 
   122     0086                     	;# 
   123     0087                     	;# 
   124     0089                     	;# 
   125     008C                     	;# 
   126     008D                     	;# 
   127     008E                     	;# 
   128     008F                     	;# 
   129     0090                     	;# 
   130     0091                     	;# 
   131     0092                     	;# 
   132     0093                     	;# 
   133     0093                     	;# 
   134     0093                     	;# 
   135     0094                     	;# 
   136     0095                     	;# 
   137     0096                     	;# 
   138     0097                     	;# 
   139     0098                     	;# 
   140     0099                     	;# 
   141     009A                     	;# 
   142     009B                     	;# 
   143     009C                     	;# 
   144     009D                     	;# 
   145     009E                     	;# 
   146     009F                     	;# 
   147     0105                     	;# 
   148     0107                     	;# 
   149     0108                     	;# 
   150     0109                     	;# 
   151     010C                     	;# 
   152     010C                     	;# 
   153     010D                     	;# 
   154     010E                     	;# 
   155     010F                     	;# 
   156     0185                     	;# 
   157     0187                     	;# 
   158     0188                     	;# 
   159     0189                     	;# 
   160     018C                     	;# 
   161     018D                     	;# 
   162     0000                     	;# 
   163     0001                     	;# 
   164     0002                     	;# 
   165     0003                     	;# 
   166     0004                     	;# 
   167     0005                     	;# 
   168     0006                     	;# 
   169     0007                     	;# 
   170     0009                     	;# 
   171     000A                     	;# 
   172     000B                     	;# 
   173     000C                     	;# 
   174     000D                     	;# 
   175     000E                     	;# 
   176     000E                     	;# 
   177     000F                     	;# 
   178     0010                     	;# 
   179     0011                     	;# 
   180     0012                     	;# 
   181     0013                     	;# 
   182     0014                     	;# 
   183     0015                     	;# 
   184     0015                     	;# 
   185     0016                     	;# 
   186     0017                     	;# 
   187     0018                     	;# 
   188     0019                     	;# 
   189     001A                     	;# 
   190     001B                     	;# 
   191     001B                     	;# 
   192     001C                     	;# 
   193     001D                     	;# 
   194     001E                     	;# 
   195     001F                     	;# 
   196     0081                     	;# 
   197     0085                     	;# 
   198     0086                     	;# 
   199     0087                     	;# 
   200     0089                     	;# 
   201     008C                     	;# 
   202     008D                     	;# 
   203     008E                     	;# 
   204     008F                     	;# 
   205     0090                     	;# 
   206     0091                     	;# 
   207     0092                     	;# 
   208     0093                     	;# 
   209     0093                     	;# 
   210     0093                     	;# 
   211     0094                     	;# 
   212     0095                     	;# 
   213     0096                     	;# 
   214     0097                     	;# 
   215     0098                     	;# 
   216     0099                     	;# 
   217     009A                     	;# 
   218     009B                     	;# 
   219     009C                     	;# 
   220     009D                     	;# 
   221     009E                     	;# 
   222     009F                     	;# 
   223     0105                     	;# 
   224     0107                     	;# 
   225     0108                     	;# 
   226     0109                     	;# 
   227     010C                     	;# 
   228     010C                     	;# 
   229     010D                     	;# 
   230     010E                     	;# 
   231     010F                     	;# 
   232     0185                     	;# 
   233     0187                     	;# 
   234     0188                     	;# 
   235     0189                     	;# 
   236     018C                     	;# 
   237     018D                     	;# 
   238     0000                     	;# 
   239     0001                     	;# 
   240     0002                     	;# 
   241     0003                     	;# 
   242     0004                     	;# 
   243     0005                     	;# 
   244     0006                     	;# 
   245     0007                     	;# 
   246     0009                     	;# 
   247     000A                     	;# 
   248     000B                     	;# 
   249     000C                     	;# 
   250     000D                     	;# 
   251     000E                     	;# 
   252     000E                     	;# 
   253     000F                     	;# 
   254     0010                     	;# 
   255     0011                     	;# 
   256     0012                     	;# 
   257     0013                     	;# 
   258     0014                     	;# 
   259     0015                     	;# 
   260     0015                     	;# 
   261     0016                     	;# 
   262     0017                     	;# 
   263     0018                     	;# 
   264     0019                     	;# 
   265     001A                     	;# 
   266     001B                     	;# 
   267     001B                     	;# 
   268     001C                     	;# 
   269     001D                     	;# 
   270     001E                     	;# 
   271     001F                     	;# 
   272     0081                     	;# 
   273     0085                     	;# 
   274     0086                     	;# 
   275     0087                     	;# 
   276     0089                     	;# 
   277     008C                     	;# 
   278     008D                     	;# 
   279     008E                     	;# 
   280     008F                     	;# 
   281     0090                     	;# 
   282     0091                     	;# 
   283     0092                     	;# 
   284     0093                     	;# 
   285     0093                     	;# 
   286     0093                     	;# 
   287     0094                     	;# 
   288     0095                     	;# 
   289     0096                     	;# 
   290     0097                     	;# 
   291     0098                     	;# 
   292     0099                     	;# 
   293     009A                     	;# 
   294     009B                     	;# 
   295     009C                     	;# 
   296     009D                     	;# 
   297     009E                     	;# 
   298     009F                     	;# 
   299     0105                     	;# 
   300     0107                     	;# 
   301     0108                     	;# 
   302     0109                     	;# 
   303     010C                     	;# 
   304     010C                     	;# 
   305     010D                     	;# 
   306     010E                     	;# 
   307     010F                     	;# 
   308     0185                     	;# 
   309     0187                     	;# 
   310     0188                     	;# 
   311     0189                     	;# 
   312     018C                     	;# 
   313     018D                     	;# 
   314     0000                     	;# 
   315     0001                     	;# 
   316     0002                     	;# 
   317     0003                     	;# 
   318     0004                     	;# 
   319     0005                     	;# 
   320     0006                     	;# 
   321     0007                     	;# 
   322     0009                     	;# 
   323     000A                     	;# 
   324     000B                     	;# 
   325     000C                     	;# 
   326     000D                     	;# 
   327     000E                     	;# 
   328     000E                     	;# 
   329     000F                     	;# 
   330     0010                     	;# 
   331     0011                     	;# 
   332     0012                     	;# 
   333     0013                     	;# 
   334     0014                     	;# 
   335     0015                     	;# 
   336     0015                     	;# 
   337     0016                     	;# 
   338     0017                     	;# 
   339     0018                     	;# 
   340     0019                     	;# 
   341     001A                     	;# 
   342     001B                     	;# 
   343     001B                     	;# 
   344     001C                     	;# 
   345     001D                     	;# 
   346     001E                     	;# 
   347     001F                     	;# 
   348     0081                     	;# 
   349     0085                     	;# 
   350     0086                     	;# 
   351     0087                     	;# 
   352     0089                     	;# 
   353     008C                     	;# 
   354     008D                     	;# 
   355     008E                     	;# 
   356     008F                     	;# 
   357     0090                     	;# 
   358     0091                     	;# 
   359     0092                     	;# 
   360     0093                     	;# 
   361     0093                     	;# 
   362     0093                     	;# 
   363     0094                     	;# 
   364     0095                     	;# 
   365     0096                     	;# 
   366     0097                     	;# 
   367     0098                     	;# 
   368     0099                     	;# 
   369     009A                     	;# 
   370     009B                     	;# 
   371     009C                     	;# 
   372     009D                     	;# 
   373     009E                     	;# 
   374     009F                     	;# 
   375     0105                     	;# 
   376     0107                     	;# 
   377     0108                     	;# 
   378     0109                     	;# 
   379     010C                     	;# 
   380     010C                     	;# 
   381     010D                     	;# 
   382     010E                     	;# 
   383     010F                     	;# 
   384     0185                     	;# 
   385     0187                     	;# 
   386     0188                     	;# 
   387     0189                     	;# 
   388     018C                     	;# 
   389     018D                     	;# 
   390     0000                     	;# 
   391     0001                     	;# 
   392     0002                     	;# 
   393     0003                     	;# 
   394     0004                     	;# 
   395     0005                     	;# 
   396     0006                     	;# 
   397     0007                     	;# 
   398     0009                     	;# 
   399     000A                     	;# 
   400     000B                     	;# 
   401     000C                     	;# 
   402     000D                     	;# 
   403     000E                     	;# 
   404     000E                     	;# 
   405     000F                     	;# 
   406     0010                     	;# 
   407     0011                     	;# 
   408     0012                     	;# 
   409     0013                     	;# 
   410     0014                     	;# 
   411     0015                     	;# 
   412     0015                     	;# 
   413     0016                     	;# 
   414     0017                     	;# 
   415     0018                     	;# 
   416     0019                     	;# 
   417     001A                     	;# 
   418     001B                     	;# 
   419     001B                     	;# 
   420     001C                     	;# 
   421     001D                     	;# 
   422     001E                     	;# 
   423     001F                     	;# 
   424     0081                     	;# 
   425     0085                     	;# 
   426     0086                     	;# 
   427     0087                     	;# 
   428     0089                     	;# 
   429     008C                     	;# 
   430     008D                     	;# 
   431     008E                     	;# 
   432     008F                     	;# 
   433     0090                     	;# 
   434     0091                     	;# 
   435     0092                     	;# 
   436     0093                     	;# 
   437     0093                     	;# 
   438     0093                     	;# 
   439     0094                     	;# 
   440     0095                     	;# 
   441     0096                     	;# 
   442     0097                     	;# 
   443     0098                     	;# 
   444     0099                     	;# 
   445     009A                     	;# 
   446     009B                     	;# 
   447     009C                     	;# 
   448     009D                     	;# 
   449     009E                     	;# 
   450     009F                     	;# 
   451     0105                     	;# 
   452     0107                     	;# 
   453     0108                     	;# 
   454     0109                     	;# 
   455     010C                     	;# 
   456     010C                     	;# 
   457     010D                     	;# 
   458     010E                     	;# 
   459     010F                     	;# 
   460     0185                     	;# 
   461     0187                     	;# 
   462     0188                     	;# 
   463     0189                     	;# 
   464     018C                     	;# 
   465     018D                     	;# 
   466     0000                     	;# 
   467     0001                     	;# 
   468     0002                     	;# 
   469     0003                     	;# 
   470     0004                     	;# 
   471     0005                     	;# 
   472     0006                     	;# 
   473     0007                     	;# 
   474     0009                     	;# 
   475     000A                     	;# 
   476     000B                     	;# 
   477     000C                     	;# 
   478     000D                     	;# 
   479     000E                     	;# 
   480     000E                     	;# 
   481     000F                     	;# 
   482     0010                     	;# 
   483     0011                     	;# 
   484     0012                     	;# 
   485     0013                     	;# 
   486     0014                     	;# 
   487     0015                     	;# 
   488     0015                     	;# 
   489     0016                     	;# 
   490     0017                     	;# 
   491     0018                     	;# 
   492     0019                     	;# 
   493     001A                     	;# 
   494     001B                     	;# 
   495     001B                     	;# 
   496     001C                     	;# 
   497     001D                     	;# 
   498     001E                     	;# 
   499     001F                     	;# 
   500     0081                     	;# 
   501     0085                     	;# 
   502     0086                     	;# 
   503     0087                     	;# 
   504     0089                     	;# 
   505     008C                     	;# 
   506     008D                     	;# 
   507     008E                     	;# 
   508     008F                     	;# 
   509     0090                     	;# 
   510     0091                     	;# 
   511     0092                     	;# 
   512     0093                     	;# 
   513     0093                     	;# 
   514     0093                     	;# 
   515     0094                     	;# 
   516     0095                     	;# 
   517     0096                     	;# 
   518     0097                     	;# 
   519     0098                     	;# 
   520     0099                     	;# 
   521     009A                     	;# 
   522     009B                     	;# 
   523     009C                     	;# 
   524     009D                     	;# 
   525     009E                     	;# 
   526     009F                     	;# 
   527     0105                     	;# 
   528     0107                     	;# 
   529     0108                     	;# 
   530     0109                     	;# 
   531     010C                     	;# 
   532     010C                     	;# 
   533     010D                     	;# 
   534     010E                     	;# 
   535     010F                     	;# 
   536     0185                     	;# 
   537     0187                     	;# 
   538     0188                     	;# 
   539     0189                     	;# 
   540     018C                     	;# 
   541     018D                     	;# 
   542     0000                     	;# 
   543     0001                     	;# 
   544     0002                     	;# 
   545     0003                     	;# 
   546     0004                     	;# 
   547     0005                     	;# 
   548     0006                     	;# 
   549     0007                     	;# 
   550     0009                     	;# 
   551     000A                     	;# 
   552     000B                     	;# 
   553     000C                     	;# 
   554     000D                     	;# 
   555     000E                     	;# 
   556     000E                     	;# 
   557     000F                     	;# 
   558     0010                     	;# 
   559     0011                     	;# 
   560     0012                     	;# 
   561     0013                     	;# 
   562     0014                     	;# 
   563     0015                     	;# 
   564     0015                     	;# 
   565     0016                     	;# 
   566     0017                     	;# 
   567     0018                     	;# 
   568     0019                     	;# 
   569     001A                     	;# 
   570     001B                     	;# 
   571     001B                     	;# 
   572     001C                     	;# 
   573     001D                     	;# 
   574     001E                     	;# 
   575     001F                     	;# 
   576     0081                     	;# 
   577     0085                     	;# 
   578     0086                     	;# 
   579     0087                     	;# 
   580     0089                     	;# 
   581     008C                     	;# 
   582     008D                     	;# 
   583     008E                     	;# 
   584     008F                     	;# 
   585     0090                     	;# 
   586     0091                     	;# 
   587     0092                     	;# 
   588     0093                     	;# 
   589     0093                     	;# 
   590     0093                     	;# 
   591     0094                     	;# 
   592     0095                     	;# 
   593     0096                     	;# 
   594     0097                     	;# 
   595     0098                     	;# 
   596     0099                     	;# 
   597     009A                     	;# 
   598     009B                     	;# 
   599     009C                     	;# 
   600     009D                     	;# 
   601     009E                     	;# 
   602     009F                     	;# 
   603     0105                     	;# 
   604     0107                     	;# 
   605     0108                     	;# 
   606     0109                     	;# 
   607     010C                     	;# 
   608     010C                     	;# 
   609     010D                     	;# 
   610     010E                     	;# 
   611     010F                     	;# 
   612     0185                     	;# 
   613     0187                     	;# 
   614     0188                     	;# 
   615     0189                     	;# 
   616     018C                     	;# 
   617     018D                     	;# 
   618     0000                     	;# 
   619     0001                     	;# 
   620     0002                     	;# 
   621     0003                     	;# 
   622     0004                     	;# 
   623     0005                     	;# 
   624     0006                     	;# 
   625     0007                     	;# 
   626     0009                     	;# 
   627     000A                     	;# 
   628     000B                     	;# 
   629     000C                     	;# 
   630     000D                     	;# 
   631     000E                     	;# 
   632     000E                     	;# 
   633     000F                     	;# 
   634     0010                     	;# 
   635     0011                     	;# 
   636     0012                     	;# 
   637     0013                     	;# 
   638     0014                     	;# 
   639     0015                     	;# 
   640     0015                     	;# 
   641     0016                     	;# 
   642     0017                     	;# 
   643     0018                     	;# 
   644     0019                     	;# 
   645     001A                     	;# 
   646     001B                     	;# 
   647     001B                     	;# 
   648     001C                     	;# 
   649     001D                     	;# 
   650     001E                     	;# 
   651     001F                     	;# 
   652     0081                     	;# 
   653     0085                     	;# 
   654     0086                     	;# 
   655     0087                     	;# 
   656     0089                     	;# 
   657     008C                     	;# 
   658     008D                     	;# 
   659     008E                     	;# 
   660     008F                     	;# 
   661     0090                     	;# 
   662     0091                     	;# 
   663     0092                     	;# 
   664     0093                     	;# 
   665     0093                     	;# 
   666     0093                     	;# 
   667     0094                     	;# 
   668     0095                     	;# 
   669     0096                     	;# 
   670     0097                     	;# 
   671     0098                     	;# 
   672     0099                     	;# 
   673     009A                     	;# 
   674     009B                     	;# 
   675     009C                     	;# 
   676     009D                     	;# 
   677     009E                     	;# 
   678     009F                     	;# 
   679     0105                     	;# 
   680     0107                     	;# 
   681     0108                     	;# 
   682     0109                     	;# 
   683     010C                     	;# 
   684     010C                     	;# 
   685     010D                     	;# 
   686     010E                     	;# 
   687     010F                     	;# 
   688     0185                     	;# 
   689     0187                     	;# 
   690     0188                     	;# 
   691     0189                     	;# 
   692     018C                     	;# 
   693     018D                     	;# 
   694     0000                     	;# 
   695     0001                     	;# 
   696     0002                     	;# 
   697     0003                     	;# 
   698     0004                     	;# 
   699     0005                     	;# 
   700     0006                     	;# 
   701     0007                     	;# 
   702     0009                     	;# 
   703     000A                     	;# 
   704     000B                     	;# 
   705     000C                     	;# 
   706     000D                     	;# 
   707     000E                     	;# 
   708     000E                     	;# 
   709     000F                     	;# 
   710     0010                     	;# 
   711     0011                     	;# 
   712     0012                     	;# 
   713     0013                     	;# 
   714     0014                     	;# 
   715     0015                     	;# 
   716     0015                     	;# 
   717     0016                     	;# 
   718     0017                     	;# 
   719     0018                     	;# 
   720     0019                     	;# 
   721     001A                     	;# 
   722     001B                     	;# 
   723     001B                     	;# 
   724     001C                     	;# 
   725     001D                     	;# 
   726     001E                     	;# 
   727     001F                     	;# 
   728     0081                     	;# 
   729     0085                     	;# 
   730     0086                     	;# 
   731     0087                     	;# 
   732     0089                     	;# 
   733     008C                     	;# 
   734     008D                     	;# 
   735     008E                     	;# 
   736     008F                     	;# 
   737     0090                     	;# 
   738     0091                     	;# 
   739     0092                     	;# 
   740     0093                     	;# 
   741     0093                     	;# 
   742     0093                     	;# 
   743     0094                     	;# 
   744     0095                     	;# 
   745     0096                     	;# 
   746     0097                     	;# 
   747     0098                     	;# 
   748     0099                     	;# 
   749     009A                     	;# 
   750     009B                     	;# 
   751     009C                     	;# 
   752     009D                     	;# 
   753     009E                     	;# 
   754     009F                     	;# 
   755     0105                     	;# 
   756     0107                     	;# 
   757     0108                     	;# 
   758     0109                     	;# 
   759     010C                     	;# 
   760     010C                     	;# 
   761     010D                     	;# 
   762     010E                     	;# 
   763     010F                     	;# 
   764     0185                     	;# 
   765     0187                     	;# 
   766     0188                     	;# 
   767     0189                     	;# 
   768     018C                     	;# 
   769     018D                     	;# 
   770     0000                     	;# 
   771     0001                     	;# 
   772     0002                     	;# 
   773     0003                     	;# 
   774     0004                     	;# 
   775     0005                     	;# 
   776     0006                     	;# 
   777     0007                     	;# 
   778     0009                     	;# 
   779     000A                     	;# 
   780     000B                     	;# 
   781     000C                     	;# 
   782     000D                     	;# 
   783     000E                     	;# 
   784     000E                     	;# 
   785     000F                     	;# 
   786     0010                     	;# 
   787     0011                     	;# 
   788     0012                     	;# 
   789     0013                     	;# 
   790     0014                     	;# 
   791     0015                     	;# 
   792     0015                     	;# 
   793     0016                     	;# 
   794     0017                     	;# 
   795     0018                     	;# 
   796     0019                     	;# 
   797     001A                     	;# 
   798     001B                     	;# 
   799     001B                     	;# 
   800     001C                     	;# 
   801     001D                     	;# 
   802     001E                     	;# 
   803     001F                     	;# 
   804     0081                     	;# 
   805     0085                     	;# 
   806     0086                     	;# 
   807     0087                     	;# 
   808     0089                     	;# 
   809     008C                     	;# 
   810     008D                     	;# 
   811     008E                     	;# 
   812     008F                     	;# 
   813     0090                     	;# 
   814     0091                     	;# 
   815     0092                     	;# 
   816     0093                     	;# 
   817     0093                     	;# 
   818     0093                     	;# 
   819     0094                     	;# 
   820     0095                     	;# 
   821     0096                     	;# 
   822     0097                     	;# 
   823     0098                     	;# 
   824     0099                     	;# 
   825     009A                     	;# 
   826     009B                     	;# 
   827     009C                     	;# 
   828     009D                     	;# 
   829     009E                     	;# 
   830     009F                     	;# 
   831     0105                     	;# 
   832     0107                     	;# 
   833     0108                     	;# 
   834     0109                     	;# 
   835     010C                     	;# 
   836     010C                     	;# 
   837     010D                     	;# 
   838     010E                     	;# 
   839     010F                     	;# 
   840     0185                     	;# 
   841     0187                     	;# 
   842     0188                     	;# 
   843     0189                     	;# 
   844     018C                     	;# 
   845     018D                     	;# 
   846     0000                     	;# 
   847     0001                     	;# 
   848     0002                     	;# 
   849     0003                     	;# 
   850     0004                     	;# 
   851     0005                     	;# 
   852     0006                     	;# 
   853     0007                     	;# 
   854     0009                     	;# 
   855     000A                     	;# 
   856     000B                     	;# 
   857     000C                     	;# 
   858     000D                     	;# 
   859     000E                     	;# 
   860     000E                     	;# 
   861     000F                     	;# 
   862     0010                     	;# 
   863     0011                     	;# 
   864     0012                     	;# 
   865     0013                     	;# 
   866     0014                     	;# 
   867     0015                     	;# 
   868     0015                     	;# 
   869     0016                     	;# 
   870     0017                     	;# 
   871     0018                     	;# 
   872     0019                     	;# 
   873     001A                     	;# 
   874     001B                     	;# 
   875     001B                     	;# 
   876     001C                     	;# 
   877     001D                     	;# 
   878     001E                     	;# 
   879     001F                     	;# 
   880     0081                     	;# 
   881     0085                     	;# 
   882     0086                     	;# 
   883     0087                     	;# 
   884     0089                     	;# 
   885     008C                     	;# 
   886     008D                     	;# 
   887     008E                     	;# 
   888     008F                     	;# 
   889     0090                     	;# 
   890     0091                     	;# 
   891     0092                     	;# 
   892     0093                     	;# 
   893     0093                     	;# 
   894     0093                     	;# 
   895     0094                     	;# 
   896     0095                     	;# 
   897     0096                     	;# 
   898     0097                     	;# 
   899     0098                     	;# 
   900     0099                     	;# 
   901     009A                     	;# 
   902     009B                     	;# 
   903     009C                     	;# 
   904     009D                     	;# 
   905     009E                     	;# 
   906     009F                     	;# 
   907     0105                     	;# 
   908     0107                     	;# 
   909     0108                     	;# 
   910     0109                     	;# 
   911     010C                     	;# 
   912     010C                     	;# 
   913     010D                     	;# 
   914     010E                     	;# 
   915     010F                     	;# 
   916     0185                     	;# 
   917     0187                     	;# 
   918     0188                     	;# 
   919     0189                     	;# 
   920     018C                     	;# 
   921     018D                     	;# 
   922     0000                     	;# 
   923     0001                     	;# 
   924     0002                     	;# 
   925     0003                     	;# 
   926     0004                     	;# 
   927     0005                     	;# 
   928     0006                     	;# 
   929     0007                     	;# 
   930     0009                     	;# 
   931     000A                     	;# 
   932     000B                     	;# 
   933     000C                     	;# 
   934     000D                     	;# 
   935     000E                     	;# 
   936     000E                     	;# 
   937     000F                     	;# 
   938     0010                     	;# 
   939     0011                     	;# 
   940     0012                     	;# 
   941     0013                     	;# 
   942     0014                     	;# 
   943     0015                     	;# 
   944     0015                     	;# 
   945     0016                     	;# 
   946     0017                     	;# 
   947     0018                     	;# 
   948     0019                     	;# 
   949     001A                     	;# 
   950     001B                     	;# 
   951     001B                     	;# 
   952     001C                     	;# 
   953     001D                     	;# 
   954     001E                     	;# 
   955     001F                     	;# 
   956     0081                     	;# 
   957     0085                     	;# 
   958     0086                     	;# 
   959     0087                     	;# 
   960     0089                     	;# 
   961     008C                     	;# 
   962     008D                     	;# 
   963     008E                     	;# 
   964     008F                     	;# 
   965     0090                     	;# 
   966     0091                     	;# 
   967     0092                     	;# 
   968     0093                     	;# 
   969     0093                     	;# 
   970     0093                     	;# 
   971     0094                     	;# 
   972     0095                     	;# 
   973     0096                     	;# 
   974     0097                     	;# 
   975     0098                     	;# 
   976     0099                     	;# 
   977     009A                     	;# 
   978     009B                     	;# 
   979     009C                     	;# 
   980     009D                     	;# 
   981     009E                     	;# 
   982     009F                     	;# 
   983     0105                     	;# 
   984     0107                     	;# 
   985     0108                     	;# 
   986     0109                     	;# 
   987     010C                     	;# 
   988     010C                     	;# 
   989     010D                     	;# 
   990     010E                     	;# 
   991     010F                     	;# 
   992     0185                     	;# 
   993     0187                     	;# 
   994     0188                     	;# 
   995     0189                     	;# 
   996     018C                     	;# 
   997     018D                     	;# 
   998                           
   999                           	psect	idataBANK0
  1000     05B0                     __pidataBANK0:
  1001                           
  1002                           ;initializer for key_read@key_old
  1003     05B0  3401               	retlw	1
  1004                           
  1005                           	psect	strings
  1006     028D                     __pstrings:
  1007     028D                     stringtab:
  1008     028D                     __stringtab:
  1009                           
  1010                           ;	String table - string pointers are 1 byte each
  1011     028D  1BFF               	btfsc	btemp+1,7
  1012     028E  2A97               	ljmp	stringcode
  1013     028F  1383               	bcf	3,7
  1014     0290  187F               	btfsc	btemp+1,0
  1015     0291  1783               	bsf	3,7
  1016     0292  0800               	movf	0,w
  1017     0293  0A84               	incf	4,f
  1018     0294  1903               	skipnz
  1019     0295  0AFF               	incf	btemp+1,f
  1020     0296  0008               	return
  1021     0297                     stringcode:
  1022     0297                     stringdir:
  1023     0297  3002               	movlw	high stringdir
  1024     0298  008A               	movwf	10
  1025     0299  0804               	movf	4,w
  1026     029A  0A84               	incf	4,f
  1027     029B  0782               	addwf	2,f
  1028     029C                     __stringbase:
  1029     029C  3400               	retlw	0
  1030     029D                     __end_of__stringtab:
  1031     029D                     _dpowers:
  1032     029D  3401               	retlw	1
  1033     029E  3400               	retlw	0
  1034     029F  340A               	retlw	10
  1035     02A0  3400               	retlw	0
  1036     02A1  3464               	retlw	100
  1037     02A2  3400               	retlw	0
  1038     02A3  34E8               	retlw	232
  1039     02A4  3403               	retlw	3
  1040     02A5  3410               	retlw	16
  1041     02A6  3427               	retlw	39
  1042     02A7                     __end_of_dpowers:
  1043     02A7                     atan@coeff_a:
  1044     02A7  3406               	retlw	6
  1045     02A8  343C               	retlw	60
  1046     02A9  3404               	retlw	4
  1047     02AA  3442               	retlw	66
  1048     02AB  347D               	retlw	125
  1049     02AC  349F               	retlw	159
  1050     02AD  346A               	retlw	106
  1051     02AE  3442               	retlw	66
  1052     02AF  345C               	retlw	92
  1053     02B0  3490               	retlw	144
  1054     02B1  3401               	retlw	1
  1055     02B2  3442               	retlw	66
  1056     02B3  3460               	retlw	96
  1057     02B4  344D               	retlw	77
  1058     02B5  34BB               	retlw	187
  1059     02B6  3440               	retlw	64
  1060     02B7  3451               	retlw	81
  1061     02B8  34EC               	retlw	236
  1062     02B9  3447               	retlw	71
  1063     02BA  343E               	retlw	62
  1064     02BB  34DE               	retlw	222
  1065     02BC  348D               	retlw	141
  1066     02BD  341F               	retlw	31
  1067     02BE  34BB               	retlw	187
  1068     02BF                     __end_ofatan@coeff_a:
  1069     02BF                     atan@coeff_b:
  1070     02BF  3406               	retlw	6
  1071     02C0  343C               	retlw	60
  1072     02C1  3404               	retlw	4
  1073     02C2  3442               	retlw	66
  1074     02C3  34C0               	retlw	192
  1075     02C4  3459               	retlw	89
  1076     02C5  348B               	retlw	139
  1077     02C6  3442               	retlw	66
  1078     02C7  3474               	retlw	116
  1079     02C8  3404               	retlw	4
  1080     02C9  3444               	retlw	68
  1081     02CA  3442               	retlw	66
  1082     02CB  34F9               	retlw	249
  1083     02CC  349B               	retlw	155
  1084     02CD  344F               	retlw	79
  1085     02CE  3441               	retlw	65
  1086     02CF  3400               	retlw	0
  1087     02D0  3400               	retlw	0
  1088     02D1  3480               	retlw	128
  1089     02D2  343F               	retlw	63
  1090     02D3                     __end_ofatan@coeff_b:
  1091     0006                     _PORTB	set	6
  1092     0001                     _TMR0	set	1
  1093     0013                     _SSPBUF	set	19
  1094     0014                     _SSPCONbits	set	20
  1095     0019                     _TXREG	set	25
  1096     001A                     _RCREG	set	26
  1097     0005                     _PORTA	set	5
  1098     001E                     _ADRESH	set	30
  1099     001F                     _ADCON0bits	set	31
  1100     005F                     _GIE	set	95
  1101     0035                     _RB5	set	53
  1102     0058                     _RBIF	set	88
  1103     005A                     _TMR0IF	set	90
  1104     0037                     _RB7	set	55
  1105     005D                     _TMR0IE	set	93
  1106     00A7                     _WCOL	set	167
  1107     00A4                     _CKP	set	164
  1108     00A5                     _SSPEN	set	165
  1109     0038                     _RC0	set	56
  1110     0065                     _RCIF	set	101
  1111     0064                     _TXIF	set	100
  1112     00C2                     _FERR	set	194
  1113     00C1                     _OERR	set	193
  1114     00C6                     _RX9	set	198
  1115     00C5                     _SREN	set	197
  1116     00C4                     _CREN	set	196
  1117     00C7                     _SPEN	set	199
  1118     0029                     _RA1	set	41
  1119     0030                     _RB0	set	48
  1120     005B                     _RBIE	set	91
  1121     00F9                     _GO	set	249
  1122     0066                     _ADIF	set	102
  1123     00F8                     _ADON	set	248
  1124     0081                     _OPTION_REGbits	set	129
  1125     0094                     _SSPSTATbits	set	148
  1126     0099                     _SPBRG	set	153
  1127     0085                     _TRISA	set	133
  1128     009E                     _ADRESL	set	158
  1129     009F                     _ADCON1bits	set	159
  1130     0437                     _TRISB7	set	1079
  1131     04A7                     _SMP	set	1191
  1132     04A6                     _CKE	set	1190
  1133     043D                     _TRISC5	set	1085
  1134     043C                     _TRISC4	set	1084
  1135     043B                     _TRISC3	set	1083
  1136     0438                     _TRISC0	set	1080
  1137     04C5                     _TXEN	set	1221
  1138     04C6                     _TX9	set	1222
  1139     0465                     _RCIE	set	1125
  1140     0464                     _TXIE	set	1124
  1141     04C4                     _SYNC	set	1220
  1142     04C2                     _BRGH	set	1218
  1143     04B6                     _IOCB6	set	1206
  1144     04AE                     _WPUB6	set	1198
  1145     0436                     _TRISB6	set	1078
  1146     040F                     _nRBPU	set	1039
  1147     0466                     _ADIE	set	1126
  1148     0435                     _TRISB5	set	1077
  1149     0430                     _TRISB0	set	1072
  1150     0434                     _TRISB4	set	1076
  1151     0431                     _TRISB1	set	1073
  1152     0432                     _TRISB2	set	1074
  1153     042D                     _TRISA5	set	1069
  1154     042B                     _TRISA3	set	1067
  1155     042A                     _TRISA2	set	1066
  1156     0429                     _TRISA1	set	1065
  1157     0428                     _TRISA0	set	1064
  1158     0188                     _ANSEL	set	392
  1159     0C4D                     _ANS13	set	3149
  1160     0C4C                     _ANS12	set	3148
  1161     0C4B                     _ANS11	set	3147
  1162     0C4A                     _ANS10	set	3146
  1163     0C49                     _ANS9	set	3145
  1164     0C48                     _ANS8	set	3144
  1165     0C44                     _ANS4	set	3140
  1166     0C43                     _ANS3	set	3139
  1167     0C42                     _ANS2	set	3138
  1168     0C41                     _ANS1	set	3137
  1169     0C40                     _ANS0	set	3136
  1170     02D3                     STR_1:
  1171     02D3  3441               	retlw	65	;'A'
  1172     02D4  3474               	retlw	116	;'t'
  1173     02D5  3469               	retlw	105	;'i'
  1174     02D6  3476               	retlw	118	;'v'
  1175     02D7  3434               	retlw	52	;'4'
  1176     02D8  3400               	retlw	0
  1177     02D9                     STR_2:
  1178     02D9  3454               	retlw	84	;'T'
  1179     02DA  3436               	retlw	54	;'6'
  1180     02DB  3447               	retlw	71	;'G'
  1181     02DC  3430               	retlw	48	;'0'
  1182     02DD  3438               	retlw	56	;'8'
  1183     02DE  3400               	retlw	0
  1184     02DF                     STR_3:
  1185     02DF  3425               	retlw	37	;'%'
  1186     02E0  3464               	retlw	100	;'d'
  1187     02E1  3400               	retlw	0
  1188                           
  1189                           	psect	cinit
  1190     0011                     start_initialization:	
  1191                           ; #config settings
  1192                           
  1193     0011                     __initialization:
  1194                           
  1195                           ; Initialize objects allocated to BANK0
  1196     0011  120A  118A  25B0  120A  118A  	fcall	__pidataBANK0	;fetch initializer
  1197     0016  00D6               	movwf	__pdataBANK0& (0+127)
  1198                           
  1199                           ; Clear objects allocated to BANK0
  1200     0017  01C8               	clrf	__pbssBANK0& (0+127)
  1201     0018  01C9               	clrf	(__pbssBANK0+1)& (0+127)
  1202     0019  01CA               	clrf	(__pbssBANK0+2)& (0+127)
  1203     001A  01CB               	clrf	(__pbssBANK0+3)& (0+127)
  1204     001B  01CC               	clrf	(__pbssBANK0+4)& (0+127)
  1205     001C  01CD               	clrf	(__pbssBANK0+5)& (0+127)
  1206     001D  01CE               	clrf	(__pbssBANK0+6)& (0+127)
  1207     001E  01CF               	clrf	(__pbssBANK0+7)& (0+127)
  1208     001F  01D0               	clrf	(__pbssBANK0+8)& (0+127)
  1209     0020  01D1               	clrf	(__pbssBANK0+9)& (0+127)
  1210     0021  01D2               	clrf	(__pbssBANK0+10)& (0+127)
  1211     0022  01D3               	clrf	(__pbssBANK0+11)& (0+127)
  1212     0023  01D4               	clrf	(__pbssBANK0+12)& (0+127)
  1213     0024  01D5               	clrf	(__pbssBANK0+13)& (0+127)
  1214                           
  1215                           ; Clear objects allocated to COMMON
  1216     0025  01FD               	clrf	__pbssCOMMON& (0+127)
  1217                           
  1218                           ; Clear objects allocated to BITCOMMON
  1219     0026  01FC               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  1220     0027                     end_of_initialization:	
  1221                           ;End of C runtime variable initialization code
  1222                           
  1223     0027                     __end_of__initialization:
  1224     0027  0183               	clrf	3
  1225     0028  120A  118A  28FF   	ljmp	_main	;jump to C main() function
  1226                           
  1227                           	psect	bitbssCOMMON
  1228     03E0                     __pbitbssCOMMON:
  1229     03E0                     _keyPressed:
  1230     03E0                     	ds	1
  1231                           
  1232                           	psect	bssCOMMON
  1233     007D                     __pbssCOMMON:
  1234     007D                     _debounce:
  1235     007D                     	ds	1
  1236                           
  1237                           	psect	bssBANK0
  1238     0048                     __pbssBANK0:
  1239     0048                     isr@tick:
  1240     0048                     	ds	2
  1241     004A                     _n_read:
  1242     004A                     	ds	2
  1243     004C                     _adc_result:
  1244     004C                     	ds	2
  1245     004E                     _Xcorr:
  1246     004E                     	ds	2
  1247     0050                     _Ycorr:
  1248     0050                     	ds	2
  1249     0052                     _ready_to_display:
  1250     0052                     	ds	1
  1251     0053                     _dummy:
  1252     0053                     	ds	1
  1253     0054                     _keyStateChanged:
  1254     0054                     	ds	1
  1255     0055                     _delayus_variable:
  1256     0055                     	ds	1
  1257                           
  1258                           	psect	dataBANK0
  1259     0056                     __pdataBANK0:
  1260     0056                     key_read@key_old:
  1261     0056                     	ds	1
  1262                           
  1263                           	psect	cstackCOMMON
  1264     0070                     __pcstackCOMMON:
  1265     0070                     ?_delay_ms:
  1266     0070                     ?_spi_exchange:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269     0070                     ?_adc_init:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272     0070                     ?_delay_s:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275     0070                     ?_key_init:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278     0070                     ?_key_debounce:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281     0070                     ?_key_read:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284     0070                     ??_key_read:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287     0070                     ?_key_pressed:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290     0070                     ?_lcd_init:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293     0070                     ?_spi_send_command:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296     0070                     ?_spi_send_data:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299     0070                     ?_lcd_clear:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302     0070                     ?_lcd_goto:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305     0070                     ?_lcd_putchar:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308     0070                     ?_sensor_power:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311     0070                     ?_sensor_init:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314     0070                     ?_serial_init:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317     0070                     ?_spi_init:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320     0070                     ?_t0_init:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323     0070                     ?_buzzer_init:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326     0070                     ?_isr:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329     0070                     ?_beep:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332     0070                     ?_led_init:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335     0070                     ?_welcome_message:	
  1336                           ; 1 bytes @ 0x0
  1337                           
  1338     0070                     ?_main:	
  1339                           ; 1 bytes @ 0x0
  1340                           
  1341     0070                     ?_adc_read:	
  1342                           ; 1 bytes @ 0x0
  1343                           
  1344     0070                     key_debounce@cycles:	
  1345                           ; 2 bytes @ 0x0
  1346                           
  1347                           
  1348                           ; 2 bytes @ 0x0
  1349     0070                     	ds	1
  1350     0071                     key_read@port:
  1351                           
  1352                           ; 1 bytes @ 0x1
  1353     0071                     	ds	1
  1354     0072                     ??_adc_read:
  1355     0072                     ??_key_debounce:	
  1356                           ; 1 bytes @ 0x2
  1357                           
  1358     0072                     key_read@key:	
  1359                           ; 1 bytes @ 0x2
  1360                           
  1361                           
  1362                           ; 1 bytes @ 0x2
  1363     0072                     	ds	1
  1364     0073                     adc_read@adc_result:
  1365                           
  1366                           ; 2 bytes @ 0x3
  1367     0073                     	ds	2
  1368     0075                     adc_read@adc_channel:
  1369                           
  1370                           ; 1 bytes @ 0x5
  1371     0075                     	ds	1
  1372     0076                     ?_sensorNear_read:
  1373                           
  1374                           ; 2 bytes @ 0x6
  1375     0076                     	ds	2
  1376     0078                     ??_sensorNear_read:
  1377     0078                     ??_isr:	
  1378                           ; 1 bytes @ 0x8
  1379                           
  1380                           
  1381                           ; 1 bytes @ 0x8
  1382     0078                     	ds	3
  1383     007B                     isr@portB:
  1384                           
  1385                           ; 1 bytes @ 0xB
  1386     007B                     	ds	1
  1387                           
  1388                           	psect	cstackBANK0
  1389     0020                     __pcstackBANK0:
  1390     0020                     ??_delay_ms:
  1391     0020                     ??_spi_exchange:	
  1392                           ; 1 bytes @ 0x0
  1393                           
  1394     0020                     ??_adc_init:	
  1395                           ; 1 bytes @ 0x0
  1396                           
  1397     0020                     ?_delay_big_ms:	
  1398                           ; 1 bytes @ 0x0
  1399                           
  1400     0020                     ??_key_init:	
  1401                           ; 1 bytes @ 0x0
  1402                           
  1403     0020                     ??_key_pressed:	
  1404                           ; 1 bytes @ 0x0
  1405                           
  1406     0020                     ??_lcd_init:	
  1407                           ; 1 bytes @ 0x0
  1408                           
  1409     0020                     ??_serial_init:	
  1410                           ; 1 bytes @ 0x0
  1411                           
  1412     0020                     ??_spi_init:	
  1413                           ; 1 bytes @ 0x0
  1414                           
  1415     0020                     ??_t0_init:	
  1416                           ; 1 bytes @ 0x0
  1417                           
  1418     0020                     ??_buzzer_init:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421     0020                     ??_led_init:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424     0020                     ?___lwdiv:	
  1425                           ; 1 bytes @ 0x0
  1426                           
  1427     0020                     delay_ms@cnt:	
  1428                           ; 2 bytes @ 0x0
  1429                           
  1430     0020                     key_pressed@state:	
  1431                           ; 1 bytes @ 0x0
  1432                           
  1433     0020                     spi_exchange@data:	
  1434                           ; 1 bytes @ 0x0
  1435                           
  1436     0020                     delay_big_ms@cnt:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439     0020                     ___lwdiv@divisor:	
  1440                           ; 2 bytes @ 0x0
  1441                           
  1442                           
  1443                           ; 2 bytes @ 0x0
  1444     0020                     	ds	1
  1445     0021                     ??_spi_send_command:
  1446     0021                     ??_spi_send_data:	
  1447                           ; 1 bytes @ 0x1
  1448                           
  1449     0021                     adc_init@adc_channel:	
  1450                           ; 1 bytes @ 0x1
  1451                           
  1452     0021                     delay_ms@i:	
  1453                           ; 1 bytes @ 0x1
  1454                           
  1455     0021                     spi_send_data@data:	
  1456                           ; 1 bytes @ 0x1
  1457                           
  1458                           
  1459                           ; 1 bytes @ 0x1
  1460     0021                     	ds	1
  1461     0022                     ??_delay_big_ms:
  1462     0022                     ??_delay_s:	
  1463                           ; 1 bytes @ 0x2
  1464                           
  1465     0022                     ??_sensor_power:	
  1466                           ; 1 bytes @ 0x2
  1467                           
  1468     0022                     ??_sensor_init:	
  1469                           ; 1 bytes @ 0x2
  1470                           
  1471     0022                     delay_big_ms@i:	
  1472                           ; 1 bytes @ 0x2
  1473                           
  1474     0022                     delay_s@cnt:	
  1475                           ; 1 bytes @ 0x2
  1476                           
  1477     0022                     spi_send_command@command:	
  1478                           ; 1 bytes @ 0x2
  1479                           
  1480     0022                     sensor_power@state:	
  1481                           ; 1 bytes @ 0x2
  1482                           
  1483     0022                     ___lwdiv@dividend:	
  1484                           ; 1 bytes @ 0x2
  1485                           
  1486                           
  1487                           ; 2 bytes @ 0x2
  1488     0022                     	ds	1
  1489     0023                     ??_beep:
  1490     0023                     delay_s@i:	
  1491                           ; 1 bytes @ 0x3
  1492                           
  1493     0023                     spi_send_command@command_byte:	
  1494                           ; 1 bytes @ 0x3
  1495                           
  1496                           
  1497                           ; 1 bytes @ 0x3
  1498     0023                     	ds	1
  1499     0024                     ??_lcd_clear:
  1500     0024                     ??_lcd_goto:	
  1501                           ; 1 bytes @ 0x4
  1502                           
  1503     0024                     ?_lcd_show_cursor:	
  1504                           ; 1 bytes @ 0x4
  1505                           
  1506     0024                     ??_lcd_putchar:	
  1507                           ; 1 bytes @ 0x4
  1508                           
  1509     0024                     ??___lwdiv:	
  1510                           ; 1 bytes @ 0x4
  1511                           
  1512     0024                     lcd_goto@pos:	
  1513                           ; 1 bytes @ 0x4
  1514                           
  1515     0024                     lcd_putchar@c:	
  1516                           ; 1 bytes @ 0x4
  1517                           
  1518     0024                     lcd_show_cursor@on:	
  1519                           ; 1 bytes @ 0x4
  1520                           
  1521                           
  1522                           ; 2 bytes @ 0x4
  1523     0024                     	ds	1
  1524     0025                     ?_lcd_puts:
  1525     0025                     lcd_puts@s:	
  1526                           ; 1 bytes @ 0x5
  1527                           
  1528     0025                     ___lwdiv@quotient:	
  1529                           ; 2 bytes @ 0x5
  1530                           
  1531                           
  1532                           ; 2 bytes @ 0x5
  1533     0025                     	ds	1
  1534     0026                     ??_lcd_show_cursor:
  1535                           
  1536                           ; 1 bytes @ 0x6
  1537     0026                     	ds	1
  1538     0027                     ??_lcd_puts:
  1539     0027                     ??_welcome_message:	
  1540                           ; 1 bytes @ 0x7
  1541                           
  1542     0027                     ___lwdiv@counter:	
  1543                           ; 1 bytes @ 0x7
  1544                           
  1545                           
  1546                           ; 1 bytes @ 0x7
  1547     0027                     	ds	1
  1548     0028                     ?___lwmod:
  1549     0028                     ___lwmod@divisor:	
  1550                           ; 2 bytes @ 0x8
  1551                           
  1552                           
  1553                           ; 2 bytes @ 0x8
  1554     0028                     	ds	2
  1555     002A                     ___lwmod@dividend:
  1556                           
  1557                           ; 2 bytes @ 0xA
  1558     002A                     	ds	2
  1559     002C                     ??___lwmod:
  1560                           
  1561                           ; 1 bytes @ 0xC
  1562     002C                     	ds	1
  1563     002D                     ___lwmod@counter:
  1564                           
  1565                           ; 1 bytes @ 0xD
  1566     002D                     	ds	1
  1567     002E                     ?_sprintf:
  1568     002E                     sprintf@f:	
  1569                           ; 2 bytes @ 0xE
  1570                           
  1571                           
  1572                           ; 1 bytes @ 0xE
  1573     002E                     	ds	3
  1574     0031                     ??_sprintf:
  1575                           
  1576                           ; 1 bytes @ 0x11
  1577     0031                     	ds	3
  1578     0034                     sprintf@ap:
  1579                           
  1580                           ; 1 bytes @ 0x14
  1581     0034                     	ds	1
  1582     0035                     sprintf@flag:
  1583                           
  1584                           ; 1 bytes @ 0x15
  1585     0035                     	ds	1
  1586     0036                     sprintf@prec:
  1587                           
  1588                           ; 1 bytes @ 0x16
  1589     0036                     	ds	1
  1590     0037                     sprintf@val:
  1591                           
  1592                           ; 2 bytes @ 0x17
  1593     0037                     	ds	2
  1594     0039                     sprintf@sp:
  1595                           
  1596                           ; 1 bytes @ 0x19
  1597     0039                     	ds	1
  1598     003A                     sprintf@c:
  1599                           
  1600                           ; 1 bytes @ 0x1A
  1601     003A                     	ds	1
  1602     003B                     ??_main:
  1603     003B                     main@result:	
  1604                           ; 1 bytes @ 0x1B
  1605                           
  1606                           
  1607                           ; 10 bytes @ 0x1B
  1608     003B                     	ds	10
  1609     0045                     _main$1506:
  1610                           
  1611                           ; 2 bytes @ 0x25
  1612     0045                     	ds	2
  1613     0047                     main@keyIn:
  1614                           
  1615                           ; 1 bytes @ 0x27
  1616     0047                     	ds	1
  1617                           
  1618                           	psect	maintext
  1619     00FF                     __pmaintext:	
  1620 ;;
  1621 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1622 ;;
  1623 ;; *************** function _main *****************
  1624 ;; Defined at:
  1625 ;;		line 100 in file "main.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;		None
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  result         10   27[BANK0 ] unsigned char [10]
  1630 ;;  keyIn           1   39[BANK0 ] unsigned char 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : B00/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1640 ;;      Params:         0       0       0       0       0
  1641 ;;      Locals:         0      13       0       0       0
  1642 ;;      Temps:          0       0       0       0       0
  1643 ;;      Totals:         0      13       0       0       0
  1644 ;;Total ram usage:       13 bytes
  1645 ;; Hardware stack levels required when called: 8
  1646 ;; This function calls:
  1647 ;;		___lwdiv
  1648 ;;		_beep
  1649 ;;		_buzzer_init
  1650 ;;		_delay_s
  1651 ;;		_key_init
  1652 ;;		_key_pressed
  1653 ;;		_lcd_clear
  1654 ;;		_lcd_init
  1655 ;;		_lcd_puts
  1656 ;;		_lcd_show_cursor
  1657 ;;		_led_init
  1658 ;;		_sensor_init
  1659 ;;		_sensor_power
  1660 ;;		_serial_init
  1661 ;;		_spi_init
  1662 ;;		_sprintf
  1663 ;;		_t0_init
  1664 ;;		_welcome_message
  1665 ;; This function is called by:
  1666 ;;		Startup code after reset
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670     00FF                     _main:	
  1671                           ;psect for function _main
  1672                           
  1673     00FF                     l2751:	
  1674                           ;incstack = 0
  1675                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1676                           
  1677     00FF                     l2753:
  1678                           
  1679                           ;main.c: 103: lcd_init();
  1680     00FF  120A  118A  259B  120A  118A  	fcall	_lcd_init
  1681     0104                     l2755:
  1682                           
  1683                           ;main.c: 104: sensor_init();
  1684     0104  120A  118A  2498  120A  118A  	fcall	_sensor_init
  1685     0109                     l2757:
  1686                           
  1687                           ;main.c: 105: t0_init();
  1688     0109  120A  118A  255C  120A  118A  	fcall	_t0_init
  1689     010E                     l2759:
  1690                           
  1691                           ;main.c: 106: serial_init();
  1692     010E  120A  118A  24B2  120A  118A  	fcall	_serial_init
  1693     0113                     l2761:
  1694                           
  1695                           ;main.c: 107: key_init();
  1696     0113  120A  118A  2593  120A  118A  	fcall	_key_init
  1697     0118                     l2763:
  1698                           
  1699                           ;main.c: 108: spi_init();
  1700     0118  120A  118A  2447  120A  118A  	fcall	_spi_init
  1701     011D                     l2765:
  1702                           
  1703                           ;main.c: 109: buzzer_init();
  1704     011D  120A  118A  25A9  120A  118A  	fcall	_buzzer_init
  1705     0122                     l2767:
  1706                           
  1707                           ;main.c: 110: led_init();
  1708     0122  120A  118A  2589  120A  118A  	fcall	_led_init
  1709     0127                     l2769:
  1710                           
  1711                           ;main.c: 112: GIE = 1;
  1712     0127  178B               	bsf	11,7	;volatile
  1713     0128                     l2771:
  1714                           
  1715                           ;main.c: 114: sensor_power(1);
  1716     0128  3001               	movlw	1
  1717     0129  120A  118A  2518  120A  118A  	fcall	_sensor_power
  1718     012E                     l2773:
  1719                           
  1720                           ;main.c: 117: delay_s(2);
  1721     012E  3002               	movlw	2
  1722     012F  120A  118A  2462  120A  118A  	fcall	_delay_s
  1723     0134                     l2775:
  1724                           
  1725                           ;main.c: 118: lcd_clear();
  1726     0134  120A  118A  25A2  120A  118A  	fcall	_lcd_clear
  1727     0139                     l2777:
  1728                           
  1729                           ;main.c: 119: lcd_show_cursor(0);
  1730     0139  3000               	movlw	0
  1731     013A  1283               	bcf	3,5	;RP0=0, select bank0
  1732     013B  1303               	bcf	3,6	;RP1=0, select bank0
  1733     013C  00A4               	movwf	lcd_show_cursor@on
  1734     013D  00A5               	movwf	lcd_show_cursor@on+1
  1735     013E  120A  118A  24CA  120A  118A  	fcall	_lcd_show_cursor
  1736     0143                     l2779:
  1737                           
  1738                           ;main.c: 122: welcome_message();
  1739     0143  120A  118A  23D6  120A  118A  	fcall	_welcome_message
  1740     0148                     l2781:
  1741                           
  1742                           ;main.c: 123: delay_s(2);
  1743     0148  3002               	movlw	2
  1744     0149  120A  118A  2462  120A  118A  	fcall	_delay_s
  1745     014E                     l2783:
  1746                           
  1747                           ;main.c: 125: keyIn = key_pressed();
  1748     014E  120A  118A  2568  120A  118A  	fcall	_key_pressed
  1749     0153  1283               	bcf	3,5	;RP0=0, select bank0
  1750     0154  1303               	bcf	3,6	;RP1=0, select bank0
  1751     0155  00C7               	movwf	main@keyIn
  1752     0156                     l2785:
  1753                           
  1754                           ;main.c: 126: if(keyIn){
  1755     0156  0847               	movf	main@keyIn,w
  1756     0157  1903               	btfsc	3,2
  1757     0158  295A               	goto	u1611
  1758     0159  295B               	goto	u1610
  1759     015A                     u1611:
  1760     015A  295F               	goto	l2789
  1761     015B                     u1610:
  1762     015B                     l2787:
  1763                           
  1764                           ;main.c: 127: n_read = 0;
  1765     015B  01CA               	clrf	_n_read	;volatile
  1766     015C  01CB               	clrf	_n_read+1	;volatile
  1767                           
  1768                           ;main.c: 128: adc_result = 0;
  1769     015D  01CC               	clrf	_adc_result	;volatile
  1770     015E  01CD               	clrf	_adc_result+1	;volatile
  1771     015F                     l2789:
  1772                           
  1773                           ;main.c: 129: };main.c: 130: if(n_read == 10){
  1774     015F  300A               	movlw	10
  1775     0160  064A               	xorwf	_n_read,w	;volatile
  1776     0161  044B               	iorwf	_n_read+1,w	;volatile
  1777     0162  1D03               	btfss	3,2
  1778     0163  2965               	goto	u1621
  1779     0164  2966               	goto	u1620
  1780     0165                     u1621:
  1781     0165  294E               	goto	l2783
  1782     0166                     u1620:
  1783     0166                     l2791:
  1784                           
  1785                           ;main.c: 132: sprintf(result, "%d", (adc_result/10));
  1786     0166  300A               	movlw	10
  1787     0167  00A0               	movwf	___lwdiv@divisor
  1788     0168  3000               	movlw	0
  1789     0169  00A1               	movwf	___lwdiv@divisor+1
  1790     016A  084D               	movf	_adc_result+1,w	;volatile
  1791     016B  00A3               	movwf	___lwdiv@dividend+1
  1792     016C  084C               	movf	_adc_result,w	;volatile
  1793     016D  00A2               	movwf	___lwdiv@dividend
  1794     016E  120A  118A  22E2  120A  118A  	fcall	___lwdiv
  1795     0173  1283               	bcf	3,5	;RP0=0, select bank0
  1796     0174  1303               	bcf	3,6	;RP1=0, select bank0
  1797     0175  0821               	movf	?___lwdiv+1,w
  1798     0176  00C6               	movwf	_main$1506+1
  1799     0177  0820               	movf	?___lwdiv,w
  1800     0178  00C5               	movwf	_main$1506
  1801     0179                     l2793:
  1802                           
  1803                           ;main.c: 132: sprintf(result, "%d", (adc_result/10));
  1804     0179  3043               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1805     017A  00AE               	movwf	sprintf@f
  1806     017B  0846               	movf	_main$1506+1,w
  1807     017C  00B0               	movwf	?_sprintf+2
  1808     017D  0845               	movf	_main$1506,w
  1809     017E  00AF               	movwf	?_sprintf+1
  1810     017F  303B               	movlw	(low (main@result| 0))& (0+255)
  1811     0180  120A  118A  202B  120A  118A  	fcall	_sprintf
  1812     0185                     l2795:
  1813                           
  1814                           ;main.c: 133: lcd_clear();
  1815     0185  120A  118A  25A2  120A  118A  	fcall	_lcd_clear
  1816                           
  1817                           ;main.c: 134: lcd_puts(result);
  1818     018A  303B               	movlw	(low (main@result| 0))& (0+255)
  1819     018B  1283               	bcf	3,5	;RP0=0, select bank0
  1820     018C  1303               	bcf	3,6	;RP1=0, select bank0
  1821     018D  00A5               	movwf	lcd_puts@s
  1822     018E  3000               	movlw	0
  1823     018F  00A6               	movwf	lcd_puts@s+1
  1824     0190  120A  118A  23FF  120A  118A  	fcall	_lcd_puts
  1825     0195                     l2797:
  1826                           
  1827                           ;main.c: 135: beep();
  1828     0195  120A  118A  254C  120A  118A  	fcall	_beep
  1829     019A                     l2799:
  1830                           
  1831                           ;main.c: 136: RB5 = ~RB5;
  1832     019A  3020               	movlw	32
  1833     019B  1283               	bcf	3,5	;RP0=0, select bank0
  1834     019C  1303               	bcf	3,6	;RP1=0, select bank0
  1835     019D  0686               	xorwf	6,f
  1836     019E  294E               	goto	l2783
  1837     019F  120A  118A  280E   	ljmp	start
  1838     01A2                     __end_of_main:
  1839                           
  1840                           	psect	text1
  1841     03D6                     __ptext1:	
  1842 ;; *************** function _welcome_message *****************
  1843 ;; Defined at:
  1844 ;;		line 91 in file "main.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;		None
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;		None
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1858 ;;      Params:         0       0       0       0       0
  1859 ;;      Locals:         0       0       0       0       0
  1860 ;;      Temps:          0       0       0       0       0
  1861 ;;      Totals:         0       0       0       0       0
  1862 ;;Total ram usage:        0 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; Hardware stack levels required when called: 7
  1865 ;; This function calls:
  1866 ;;		_delay_ms
  1867 ;;		_lcd_goto
  1868 ;;		_lcd_puts
  1869 ;; This function is called by:
  1870 ;;		_main
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874     03D6                     _welcome_message:	
  1875                           ;psect for function _welcome_message
  1876                           
  1877     03D6                     l2375:	
  1878                           ;incstack = 0
  1879                           ; Regs used in _welcome_message: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1880                           
  1881                           
  1882                           ;main.c: 92: lcd_goto(0);
  1883     03D6  3000               	movlw	0
  1884     03D7  120A  118A  2506  120A  118A  	fcall	_lcd_goto
  1885     03DC                     l2377:
  1886                           
  1887                           ;main.c: 93: lcd_puts("Ativ4");
  1888     03DC  3037               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1889     03DD  1283               	bcf	3,5	;RP0=0, select bank0
  1890     03DE  1303               	bcf	3,6	;RP1=0, select bank0
  1891     03DF  00A5               	movwf	lcd_puts@s
  1892     03E0  3080               	movlw	128
  1893     03E1  00A6               	movwf	lcd_puts@s+1
  1894     03E2  120A  118A  23FF  120A  118A  	fcall	_lcd_puts
  1895     03E7                     l2379:
  1896                           
  1897                           ;main.c: 94: delay_ms(1);
  1898     03E7  3001               	movlw	1
  1899     03E8  120A  118A  247D  120A  118A  	fcall	_delay_ms
  1900     03ED                     l2381:
  1901                           
  1902                           ;main.c: 95: lcd_goto(64);
  1903     03ED  3040               	movlw	64
  1904     03EE  120A  118A  2506  120A  118A  	fcall	_lcd_goto
  1905     03F3                     l2383:
  1906                           
  1907                           ;main.c: 96: lcd_puts("T6G08");
  1908     03F3  303D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1909     03F4  1283               	bcf	3,5	;RP0=0, select bank0
  1910     03F5  1303               	bcf	3,6	;RP1=0, select bank0
  1911     03F6  00A5               	movwf	lcd_puts@s
  1912     03F7  3080               	movlw	128
  1913     03F8  00A6               	movwf	lcd_puts@s+1
  1914     03F9  120A  118A  23FF  120A  118A  	fcall	_lcd_puts
  1915     03FE                     l601:
  1916     03FE  0008               	return
  1917     03FF                     __end_of_welcome_message:
  1918                           
  1919                           	psect	text2
  1920     03FF                     __ptext2:	
  1921 ;; *************** function _lcd_puts *****************
  1922 ;; Defined at:
  1923 ;;		line 95 in file "lcd8x2.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  s               2    5[BANK0 ] PTR const unsigned char 
  1926 ;;		 -> main@result(10), STR_2(6), STR_1(6), 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;		None
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1938 ;;      Params:         0       2       0       0       0
  1939 ;;      Locals:         0       0       0       0       0
  1940 ;;      Temps:          0       0       0       0       0
  1941 ;;      Totals:         0       2       0       0       0
  1942 ;;Total ram usage:        2 bytes
  1943 ;; Hardware stack levels used: 1
  1944 ;; Hardware stack levels required when called: 6
  1945 ;; This function calls:
  1946 ;;		_lcd_putchar
  1947 ;; This function is called by:
  1948 ;;		_welcome_message
  1949 ;;		_main
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953     03FF                     _lcd_puts:	
  1954                           ;psect for function _lcd_puts
  1955                           
  1956     03FF                     l2115:	
  1957                           ;incstack = 0
  1958 ;; using string table level
  1959                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1960                           
  1961                           
  1962                           ;lcd8x2.c: 96: while(*s)
  1963     03FF  2C16               	goto	l2121
  1964     0400                     l2117:
  1965                           
  1966                           ;lcd8x2.c: 97: lcd_putchar(*s++);
  1967     0400  0826               	movf	lcd_puts@s+1,w
  1968     0401  00FF               	movwf	btemp+1
  1969     0402  0825               	movf	lcd_puts@s,w
  1970     0403  0084               	movwf	4
  1971     0404  120A  118A  228D  120A  118A  	fcall	stringtab
  1972     0409  120A  118A  24F4  120A  118A  	fcall	_lcd_putchar
  1973     040E                     l2119:
  1974     040E  3001               	movlw	1
  1975     040F  1283               	bcf	3,5	;RP0=0, select bank0
  1976     0410  1303               	bcf	3,6	;RP1=0, select bank0
  1977     0411  07A5               	addwf	lcd_puts@s,f
  1978     0412  1803               	skipnc
  1979     0413  0AA6               	incf	lcd_puts@s+1,f
  1980     0414  3000               	movlw	0
  1981     0415  07A6               	addwf	lcd_puts@s+1,f
  1982     0416                     l2121:
  1983     0416  1283               	bcf	3,5	;RP0=0, select bank0
  1984     0417  1303               	bcf	3,6	;RP1=0, select bank0
  1985     0418  0826               	movf	lcd_puts@s+1,w
  1986     0419  00FF               	movwf	btemp+1
  1987     041A  0825               	movf	lcd_puts@s,w
  1988     041B  0084               	movwf	4
  1989     041C  120A  118A  228D  120A  118A  	fcall	stringtab
  1990     0421  3A00               	xorlw	0
  1991     0422  1D03               	skipz
  1992     0423  2C25               	goto	u931
  1993     0424  2C26               	goto	u930
  1994     0425                     u931:
  1995     0425  2C00               	goto	l2117
  1996     0426                     u930:
  1997     0426                     l282:
  1998     0426  0008               	return
  1999     0427                     __end_of_lcd_puts:
  2000                           
  2001                           	psect	text3
  2002     04F4                     __ptext3:	
  2003 ;; *************** function _lcd_putchar *****************
  2004 ;; Defined at:
  2005 ;;		line 86 in file "lcd8x2.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  c               1    wreg     unsigned char 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  c               1    4[BANK0 ] unsigned char 
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  1    wreg      void 
  2012 ;; Registers used:
  2013 ;;		wreg, status,2, status,0, pclath, cstack
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2019 ;;      Params:         0       0       0       0       0
  2020 ;;      Locals:         0       1       0       0       0
  2021 ;;      Temps:          0       0       0       0       0
  2022 ;;      Totals:         0       1       0       0       0
  2023 ;;Total ram usage:        1 bytes
  2024 ;; Hardware stack levels used: 1
  2025 ;; Hardware stack levels required when called: 5
  2026 ;; This function calls:
  2027 ;;		_spi_send_command
  2028 ;;		_spi_send_data
  2029 ;; This function is called by:
  2030 ;;		_lcd_puts
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034     04F4                     _lcd_putchar:	
  2035                           ;psect for function _lcd_putchar
  2036                           
  2037                           
  2038                           ;incstack = 0
  2039                           ; Regs used in _lcd_putchar: [wreg+status,2+status,0+pclath+cstack]
  2040                           ;lcd_putchar@c stored from wreg
  2041     04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2042     04F5  1303               	bcf	3,6	;RP1=0, select bank0
  2043     04F6  00A4               	movwf	lcd_putchar@c
  2044     04F7                     l2057:
  2045                           
  2046                           ;lcd8x2.c: 87: spi_send_command(18);
  2047     04F7  3012               	movlw	18
  2048     04F8  120A  118A  253C  120A  118A  	fcall	_spi_send_command
  2049                           
  2050                           ;lcd8x2.c: 88: spi_send_data(c);
  2051     04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2052     04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2053     04FF  0824               	movf	lcd_putchar@c,w
  2054     0500  120A  118A  257F  120A  118A  	fcall	_spi_send_data
  2055     0505                     l276:
  2056     0505  0008               	return
  2057     0506                     __end_of_lcd_putchar:
  2058                           
  2059                           	psect	text4
  2060     0506                     __ptext4:	
  2061 ;; *************** function _lcd_goto *****************
  2062 ;; Defined at:
  2063 ;;		line 65 in file "lcd8x2.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  pos             1    wreg     unsigned char 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  pos             1    4[BANK0 ] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0, pclath, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2077 ;;      Params:         0       0       0       0       0
  2078 ;;      Locals:         0       1       0       0       0
  2079 ;;      Temps:          0       0       0       0       0
  2080 ;;      Totals:         0       1       0       0       0
  2081 ;;Total ram usage:        1 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 5
  2084 ;; This function calls:
  2085 ;;		_spi_send_command
  2086 ;;		_spi_send_data
  2087 ;; This function is called by:
  2088 ;;		_welcome_message
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092     0506                     _lcd_goto:	
  2093                           ;psect for function _lcd_goto
  2094                           
  2095                           
  2096                           ;incstack = 0
  2097                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  2098                           ;lcd_goto@pos stored from wreg
  2099     0506  1283               	bcf	3,5	;RP0=0, select bank0
  2100     0507  1303               	bcf	3,6	;RP1=0, select bank0
  2101     0508  00A4               	movwf	lcd_goto@pos
  2102     0509                     l2113:
  2103                           
  2104                           ;lcd8x2.c: 66: spi_send_command(17);
  2105     0509  3011               	movlw	17
  2106     050A  120A  118A  253C  120A  118A  	fcall	_spi_send_command
  2107                           
  2108                           ;lcd8x2.c: 67: spi_send_data(pos);
  2109     050F  1283               	bcf	3,5	;RP0=0, select bank0
  2110     0510  1303               	bcf	3,6	;RP1=0, select bank0
  2111     0511  0824               	movf	lcd_goto@pos,w
  2112     0512  120A  118A  257F  120A  118A  	fcall	_spi_send_data
  2113     0517                     l268:
  2114     0517  0008               	return
  2115     0518                     __end_of_lcd_goto:
  2116                           
  2117                           	psect	text5
  2118     057F                     __ptext5:	
  2119 ;; *************** function _spi_send_data *****************
  2120 ;; Defined at:
  2121 ;;		line 47 in file "lcd8x2.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  data            1    wreg     unsigned char 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  data            1    1[BANK0 ] unsigned char 
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg, status,2, status,0, pclath, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2135 ;;      Params:         0       0       0       0       0
  2136 ;;      Locals:         0       1       0       0       0
  2137 ;;      Temps:          0       0       0       0       0
  2138 ;;      Totals:         0       1       0       0       0
  2139 ;;Total ram usage:        1 bytes
  2140 ;; Hardware stack levels used: 1
  2141 ;; Hardware stack levels required when called: 4
  2142 ;; This function calls:
  2143 ;;		_spi_exchange
  2144 ;; This function is called by:
  2145 ;;		_lcd_goto
  2146 ;;		_lcd_putchar
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150     057F                     _spi_send_data:	
  2151                           ;psect for function _spi_send_data
  2152                           
  2153                           
  2154                           ;incstack = 0
  2155                           ; Regs used in _spi_send_data: [wreg+status,2+status,0+pclath+cstack]
  2156                           ;spi_send_data@data stored from wreg
  2157     057F  1283               	bcf	3,5	;RP0=0, select bank0
  2158     0580  1303               	bcf	3,6	;RP1=0, select bank0
  2159     0581  00A1               	movwf	spi_send_data@data
  2160     0582                     l2055:
  2161                           
  2162                           ;lcd8x2.c: 48: spi_exchange(data);
  2163     0582  0821               	movf	spi_send_data@data,w
  2164     0583  120A  118A  252A  120A  118A  	fcall	_spi_exchange
  2165     0588                     l262:
  2166     0588  0008               	return
  2167     0589                     __end_of_spi_send_data:
  2168                           
  2169                           	psect	text6
  2170     055C                     __ptext6:	
  2171 ;; *************** function _t0_init *****************
  2172 ;; Defined at:
  2173 ;;		line 36 in file "main.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2, status,0
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2187 ;;      Params:         0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0
  2190 ;;      Totals:         0       0       0       0       0
  2191 ;;Total ram usage:        0 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; Hardware stack levels required when called: 3
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_main
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201     055C                     _t0_init:	
  2202                           ;psect for function _t0_init
  2203                           
  2204     055C                     l2357:	
  2205                           ;incstack = 0
  2206                           ; Regs used in _t0_init: [wreg+status,2+status,0]
  2207                           
  2208                           
  2209                           ;main.c: 37: OPTION_REGbits.T0CS = 0;
  2210     055C  1683               	bsf	3,5	;RP0=1, select bank1
  2211     055D  1303               	bcf	3,6	;RP1=0, select bank1
  2212     055E  1281               	bcf	1,5	;volatile
  2213                           
  2214                           ;main.c: 38: OPTION_REGbits.PSA = 0;
  2215     055F  1181               	bcf	1,3	;volatile
  2216     0560                     l2359:
  2217                           
  2218                           ;main.c: 39: OPTION_REGbits.PS = 7;
  2219     0560  3007               	movlw	7
  2220     0561  0481               	iorwf	1,f	;volatile
  2221     0562                     l2361:
  2222                           
  2223                           ;main.c: 40: TMR0 = 0xff - 98;
  2224     0562  309D               	movlw	157
  2225     0563  1283               	bcf	3,5	;RP0=0, select bank0
  2226     0564  1303               	bcf	3,6	;RP1=0, select bank0
  2227     0565  0081               	movwf	1	;volatile
  2228     0566                     l2363:
  2229                           
  2230                           ;main.c: 41: TMR0IE = 1;
  2231     0566  168B               	bsf	11,5	;volatile
  2232     0567                     l579:
  2233     0567  0008               	return
  2234     0568                     __end_of_t0_init:
  2235                           
  2236                           	psect	text7
  2237     002B                     __ptext7:	
  2238 ;; *************** function _sprintf *****************
  2239 ;; Defined at:
  2240 ;;		line 505 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/doprnt.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  sp              1    wreg     PTR unsigned char 
  2243 ;;		 -> main@result(10), 
  2244 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  2245 ;;		 -> STR_3(3), 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  sp              1   25[BANK0 ] PTR unsigned char 
  2248 ;;		 -> main@result(10), 
  2249 ;;  tmpval          4    0        struct .
  2250 ;;  val             2   23[BANK0 ] unsigned int 
  2251 ;;  cp              2    0        PTR const unsigned char 
  2252 ;;  len             2    0        unsigned int 
  2253 ;;  c               1   26[BANK0 ] unsigned char 
  2254 ;;  prec            1   22[BANK0 ] char 
  2255 ;;  flag            1   21[BANK0 ] unsigned char 
  2256 ;;  ap              1   20[BANK0 ] PTR void [1]
  2257 ;;		 -> ?_sprintf(2), 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  2   14[BANK0 ] int 
  2260 ;; Registers used:
  2261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2267 ;;      Params:         0       3       0       0       0
  2268 ;;      Locals:         0       7       0       0       0
  2269 ;;      Temps:          0       3       0       0       0
  2270 ;;      Totals:         0      13       0       0       0
  2271 ;;Total ram usage:       13 bytes
  2272 ;; Hardware stack levels used: 1
  2273 ;; Hardware stack levels required when called: 4
  2274 ;; This function calls:
  2275 ;;		___lwdiv
  2276 ;;		___lwmod
  2277 ;; This function is called by:
  2278 ;;		_main
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282     002B                     _sprintf:	
  2283                           ;psect for function _sprintf
  2284                           
  2285                           
  2286                           ;incstack = 0
  2287                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2288                           ;sprintf@sp stored from wreg
  2289     002B  1283               	bcf	3,5	;RP0=0, select bank0
  2290     002C  1303               	bcf	3,6	;RP1=0, select bank0
  2291     002D  00B9               	movwf	sprintf@sp
  2292     002E                     l2385:
  2293                           
  2294                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  2295     002E  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2296     002F  00B4               	movwf	sprintf@ap
  2297                           
  2298                           ;doprnt.c: 553: while((c = *f++)) {
  2299     0030  28EA               	goto	l2437
  2300     0031                     l2387:
  2301                           
  2302                           ;doprnt.c: 555: if(c != '%')
  2303     0031  3025               	movlw	37
  2304     0032  063A               	xorwf	sprintf@c,w
  2305     0033  1903               	btfsc	3,2
  2306     0034  2836               	goto	u1281
  2307     0035  2837               	goto	u1280
  2308     0036                     u1281:
  2309     0036  2841               	goto	l2393
  2310     0037                     u1280:
  2311     0037                     l2389:
  2312                           
  2313                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  2314     0037  0839               	movf	sprintf@sp,w
  2315     0038  0084               	movwf	4
  2316     0039  083A               	movf	sprintf@c,w
  2317     003A  1383               	bcf	3,7	;select IRP bank0
  2318     003B  0080               	movwf	0
  2319     003C                     l2391:
  2320     003C  3001               	movlw	1
  2321     003D  00B1               	movwf	??_sprintf
  2322     003E  0831               	movf	??_sprintf,w
  2323     003F  07B9               	addwf	sprintf@sp,f
  2324                           
  2325                           ;doprnt.c: 559: continue;
  2326     0040  28EA               	goto	l2437
  2327     0041                     l2393:
  2328                           
  2329                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  2330     0041  01B5               	clrf	sprintf@flag
  2331     0042                     l2397:	
  2332                           ;doprnt.c: 661: switch(c = *f++) {
  2333                           
  2334     0042  3001               	movlw	1
  2335     0043  07AE               	addwf	sprintf@f,f
  2336     0044  30FF               	movlw	-1
  2337     0045  072E               	addwf	sprintf@f,w
  2338     0046  0084               	movwf	4
  2339     0047  120A  118A  2297  120A  118A  	fcall	stringdir
  2340     004C  00BA               	movwf	sprintf@c
  2341                           
  2342                           ; Switch size 1, requested type "simple"
  2343                           ; Number of cases is 3, Range of values is 0 to 105
  2344                           ; switch strategies available:
  2345                           ; Name         Instructions Cycles
  2346                           ; simple_byte           10     6 (average)
  2347                           ; jumptable            260     6 (fixed)
  2348                           ;	Chosen strategy is simple_byte
  2349     004D  3A00               	xorlw	0	; case 0
  2350     004E  1903               	skipnz
  2351     004F  28FA               	goto	l2439
  2352     0050  3A64               	xorlw	100	; case 100
  2353     0051  1903               	skipnz
  2354     0052  2857               	goto	l2399
  2355     0053  3A0D               	xorlw	13	; case 105
  2356     0054  1903               	skipnz
  2357     0055  2857               	goto	l2399
  2358     0056  28EA               	goto	l2437
  2359     0057                     l2399:
  2360                           
  2361                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  2362     0057  0834               	movf	sprintf@ap,w
  2363     0058  0084               	movwf	4
  2364     0059  1383               	bcf	3,7	;select IRP bank0
  2365     005A  0800               	movf	0,w
  2366     005B  00B7               	movwf	sprintf@val
  2367     005C  0A84               	incf	4,f
  2368     005D  0800               	movf	0,w
  2369     005E  00B8               	movwf	sprintf@val+1
  2370     005F                     l2401:
  2371     005F  3002               	movlw	2
  2372     0060  00B1               	movwf	??_sprintf
  2373     0061  0831               	movf	??_sprintf,w
  2374     0062  07B4               	addwf	sprintf@ap,f
  2375     0063                     l2403:
  2376                           
  2377                           ;doprnt.c: 1287: if((int)val < 0) {
  2378     0063  1FB8               	btfss	sprintf@val+1,7
  2379     0064  2866               	goto	u1291
  2380     0065  2867               	goto	u1290
  2381     0066                     u1291:
  2382     0066  2870               	goto	l2409
  2383     0067                     u1290:
  2384     0067                     l2405:
  2385                           
  2386                           ;doprnt.c: 1288: flag |= 0x03;
  2387     0067  3003               	movlw	3
  2388     0068  00B1               	movwf	??_sprintf
  2389     0069  0831               	movf	??_sprintf,w
  2390     006A  04B5               	iorwf	sprintf@flag,f
  2391     006B                     l2407:
  2392                           
  2393                           ;doprnt.c: 1289: val = -val;
  2394     006B  09B7               	comf	sprintf@val,f
  2395     006C  09B8               	comf	sprintf@val+1,f
  2396     006D  0AB7               	incf	sprintf@val,f
  2397     006E  1903               	skipnz
  2398     006F  0AB8               	incf	sprintf@val+1,f
  2399     0070                     l2409:
  2400                           
  2401                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  2402     0070  01BA               	clrf	sprintf@c
  2403     0071  0ABA               	incf	sprintf@c,f
  2404     0072                     l2415:
  2405                           
  2406                           ;doprnt.c: 1332: if(val < dpowers[c])
  2407     0072  083A               	movf	sprintf@c,w
  2408     0073  00B1               	movwf	??_sprintf
  2409     0074  0731               	addwf	??_sprintf,w
  2410     0075  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2411     0076  0084               	movwf	4
  2412     0077  120A  118A  2297  120A  118A  	fcall	stringdir
  2413     007C  00B2               	movwf	??_sprintf+1
  2414     007D  120A  118A  2297  120A  118A  	fcall	stringdir
  2415     0082  00B3               	movwf	??_sprintf+2
  2416     0083  0833               	movf	??_sprintf+2,w
  2417     0084  0238               	subwf	sprintf@val+1,w
  2418     0085  1D03               	skipz
  2419     0086  2889               	goto	u1305
  2420     0087  0832               	movf	??_sprintf+1,w
  2421     0088  0237               	subwf	sprintf@val,w
  2422     0089                     u1305:
  2423     0089  1803               	skipnc
  2424     008A  288C               	goto	u1301
  2425     008B  288D               	goto	u1300
  2426     008C                     u1301:
  2427     008C  288E               	goto	l2419
  2428     008D                     u1300:
  2429     008D  2898               	goto	l2421
  2430     008E                     l2419:
  2431     008E  3001               	movlw	1
  2432     008F  00B1               	movwf	??_sprintf
  2433     0090  0831               	movf	??_sprintf,w
  2434     0091  07BA               	addwf	sprintf@c,f
  2435     0092  3005               	movlw	5
  2436     0093  063A               	xorwf	sprintf@c,w
  2437     0094  1D03               	btfss	3,2
  2438     0095  2897               	goto	u1311
  2439     0096  2898               	goto	u1310
  2440     0097                     u1311:
  2441     0097  2872               	goto	l2415
  2442     0098                     u1310:
  2443     0098                     l2421:
  2444                           
  2445                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  2446     0098  0835               	movf	sprintf@flag,w
  2447     0099  3903               	andlw	3
  2448     009A  1903               	btfsc	3,2
  2449     009B  289D               	goto	u1321
  2450     009C  289E               	goto	u1320
  2451     009D                     u1321:
  2452     009D  28A7               	goto	l2427
  2453     009E                     u1320:
  2454     009E                     l2423:
  2455                           
  2456                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  2457     009E  0839               	movf	sprintf@sp,w
  2458     009F  0084               	movwf	4
  2459     00A0  302D               	movlw	45
  2460     00A1  1383               	bcf	3,7	;select IRP bank0
  2461     00A2  0080               	movwf	0
  2462     00A3                     l2425:
  2463     00A3  3001               	movlw	1
  2464     00A4  00B1               	movwf	??_sprintf
  2465     00A5  0831               	movf	??_sprintf,w
  2466     00A6  07B9               	addwf	sprintf@sp,f
  2467     00A7                     l2427:
  2468                           
  2469                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2470     00A7  083A               	movf	sprintf@c,w
  2471     00A8  00B6               	movwf	sprintf@prec
  2472                           
  2473                           ;doprnt.c: 1500: while(prec--) {
  2474     00A9  28E1               	goto	l2435
  2475     00AA                     l2429:
  2476                           
  2477                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2478     00AA  300A               	movlw	10
  2479     00AB  00A8               	movwf	___lwmod@divisor
  2480     00AC  3000               	movlw	0
  2481     00AD  00A9               	movwf	___lwmod@divisor+1
  2482     00AE  0836               	movf	sprintf@prec,w
  2483     00AF  00B1               	movwf	??_sprintf
  2484     00B0  0731               	addwf	??_sprintf,w
  2485     00B1  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2486     00B2  0084               	movwf	4
  2487     00B3  120A  118A  2297  120A  118A  	fcall	stringdir
  2488     00B8  00A0               	movwf	___lwdiv@divisor
  2489     00B9  120A  118A  2297  120A  118A  	fcall	stringdir
  2490     00BE  00A1               	movwf	___lwdiv@divisor+1
  2491     00BF  0838               	movf	sprintf@val+1,w
  2492     00C0  00A3               	movwf	___lwdiv@dividend+1
  2493     00C1  0837               	movf	sprintf@val,w
  2494     00C2  00A2               	movwf	___lwdiv@dividend
  2495     00C3  120A  118A  22E2  120A  118A  	fcall	___lwdiv
  2496     00C8  1283               	bcf	3,5	;RP0=0, select bank0
  2497     00C9  1303               	bcf	3,6	;RP1=0, select bank0
  2498     00CA  0821               	movf	?___lwdiv+1,w
  2499     00CB  00AB               	movwf	___lwmod@dividend+1
  2500     00CC  0820               	movf	?___lwdiv,w
  2501     00CD  00AA               	movwf	___lwmod@dividend
  2502     00CE  120A  118A  2328  120A  118A  	fcall	___lwmod
  2503     00D3  1283               	bcf	3,5	;RP0=0, select bank0
  2504     00D4  1303               	bcf	3,6	;RP1=0, select bank0
  2505     00D5  0828               	movf	?___lwmod,w
  2506     00D6  3E30               	addlw	48
  2507     00D7  00BA               	movwf	sprintf@c
  2508     00D8                     l2431:
  2509                           
  2510                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  2511     00D8  0839               	movf	sprintf@sp,w
  2512     00D9  0084               	movwf	4
  2513     00DA  083A               	movf	sprintf@c,w
  2514     00DB  1383               	bcf	3,7	;select IRP bank0
  2515     00DC  0080               	movwf	0
  2516     00DD                     l2433:
  2517     00DD  3001               	movlw	1
  2518     00DE  00B1               	movwf	??_sprintf
  2519     00DF  0831               	movf	??_sprintf,w
  2520     00E0  07B9               	addwf	sprintf@sp,f
  2521     00E1                     l2435:
  2522     00E1  30FF               	movlw	255
  2523     00E2  00B1               	movwf	??_sprintf
  2524     00E3  0831               	movf	??_sprintf,w
  2525     00E4  07B6               	addwf	sprintf@prec,f
  2526     00E5  0A36               	incf	sprintf@prec,w
  2527     00E6  1D03               	btfss	3,2
  2528     00E7  28E9               	goto	u1331
  2529     00E8  28EA               	goto	u1330
  2530     00E9                     u1331:
  2531     00E9  28AA               	goto	l2429
  2532     00EA                     u1330:
  2533     00EA                     l2437:
  2534     00EA  3001               	movlw	1
  2535     00EB  07AE               	addwf	sprintf@f,f
  2536     00EC  30FF               	movlw	-1
  2537     00ED  072E               	addwf	sprintf@f,w
  2538     00EE  0084               	movwf	4
  2539     00EF  120A  118A  2297  120A  118A  	fcall	stringdir
  2540     00F4  00BA               	movwf	sprintf@c
  2541     00F5  083A               	movf	sprintf@c,w
  2542     00F6  1D03               	btfss	3,2
  2543     00F7  28F9               	goto	u1341
  2544     00F8  28FA               	goto	u1340
  2545     00F9                     u1341:
  2546     00F9  2831               	goto	l2387
  2547     00FA                     u1340:
  2548     00FA                     l2439:
  2549                           
  2550                           ;doprnt.c: 1564: *sp = 0;
  2551     00FA  0839               	movf	sprintf@sp,w
  2552     00FB  0084               	movwf	4
  2553     00FC  1383               	bcf	3,7	;select IRP bank0
  2554     00FD  0180               	clrf	0
  2555     00FE                     l721:
  2556     00FE  0008               	return
  2557     00FF                     __end_of_sprintf:
  2558                           
  2559                           	psect	text8
  2560     0328                     __ptext8:	
  2561 ;; *************** function ___lwmod *****************
  2562 ;; Defined at:
  2563 ;;		line 5 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lwmod.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  divisor         2    8[BANK0 ] unsigned int 
  2566 ;;  dividend        2   10[BANK0 ] unsigned int 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;  counter         1   13[BANK0 ] unsigned char 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  2    8[BANK0 ] unsigned int 
  2571 ;; Registers used:
  2572 ;;		wreg, status,2, status,0
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2578 ;;      Params:         0       4       0       0       0
  2579 ;;      Locals:         0       1       0       0       0
  2580 ;;      Temps:          0       1       0       0       0
  2581 ;;      Totals:         0       6       0       0       0
  2582 ;;Total ram usage:        6 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; Hardware stack levels required when called: 3
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		_sprintf
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592     0328                     ___lwmod:	
  2593                           ;psect for function ___lwmod
  2594                           
  2595     0328                     l2149:	
  2596                           ;incstack = 0
  2597                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2598                           
  2599     0328  1283               	bcf	3,5	;RP0=0, select bank0
  2600     0329  1303               	bcf	3,6	;RP1=0, select bank0
  2601     032A  0828               	movf	___lwmod@divisor,w
  2602     032B  0429               	iorwf	___lwmod@divisor+1,w
  2603     032C  1903               	btfsc	3,2
  2604     032D  2B2F               	goto	u1011
  2605     032E  2B30               	goto	u1010
  2606     032F                     u1011:
  2607     032F  2B5F               	goto	l2167
  2608     0330                     u1010:
  2609     0330                     l2151:
  2610     0330  01AD               	clrf	___lwmod@counter
  2611     0331  0AAD               	incf	___lwmod@counter,f
  2612     0332  2B3E               	goto	l2157
  2613     0333                     l2153:
  2614     0333  3001               	movlw	1
  2615     0334                     u1025:
  2616     0334  1003               	clrc
  2617     0335  0DA8               	rlf	___lwmod@divisor,f
  2618     0336  0DA9               	rlf	___lwmod@divisor+1,f
  2619     0337  3EFF               	addlw	-1
  2620     0338  1D03               	skipz
  2621     0339  2B34               	goto	u1025
  2622     033A                     l2155:
  2623     033A  3001               	movlw	1
  2624     033B  00AC               	movwf	??___lwmod
  2625     033C  082C               	movf	??___lwmod,w
  2626     033D  07AD               	addwf	___lwmod@counter,f
  2627     033E                     l2157:
  2628     033E  1FA9               	btfss	___lwmod@divisor+1,7
  2629     033F  2B41               	goto	u1031
  2630     0340  2B42               	goto	u1030
  2631     0341                     u1031:
  2632     0341  2B33               	goto	l2153
  2633     0342                     u1030:
  2634     0342                     l2159:
  2635     0342  0829               	movf	___lwmod@divisor+1,w
  2636     0343  022B               	subwf	___lwmod@dividend+1,w
  2637     0344  1D03               	skipz
  2638     0345  2B48               	goto	u1045
  2639     0346  0828               	movf	___lwmod@divisor,w
  2640     0347  022A               	subwf	___lwmod@dividend,w
  2641     0348                     u1045:
  2642     0348  1C03               	skipc
  2643     0349  2B4B               	goto	u1041
  2644     034A  2B4C               	goto	u1040
  2645     034B                     u1041:
  2646     034B  2B52               	goto	l2163
  2647     034C                     u1040:
  2648     034C                     l2161:
  2649     034C  0828               	movf	___lwmod@divisor,w
  2650     034D  02AA               	subwf	___lwmod@dividend,f
  2651     034E  0829               	movf	___lwmod@divisor+1,w
  2652     034F  1C03               	skipc
  2653     0350  03AB               	decf	___lwmod@dividend+1,f
  2654     0351  02AB               	subwf	___lwmod@dividend+1,f
  2655     0352                     l2163:
  2656     0352  3001               	movlw	1
  2657     0353                     u1055:
  2658     0353  1003               	clrc
  2659     0354  0CA9               	rrf	___lwmod@divisor+1,f
  2660     0355  0CA8               	rrf	___lwmod@divisor,f
  2661     0356  3EFF               	addlw	-1
  2662     0357  1D03               	skipz
  2663     0358  2B53               	goto	u1055
  2664     0359                     l2165:
  2665     0359  3001               	movlw	1
  2666     035A  02AD               	subwf	___lwmod@counter,f
  2667     035B  1D03               	btfss	3,2
  2668     035C  2B5E               	goto	u1061
  2669     035D  2B5F               	goto	u1060
  2670     035E                     u1061:
  2671     035E  2B42               	goto	l2159
  2672     035F                     u1060:
  2673     035F                     l2167:
  2674     035F  082B               	movf	___lwmod@dividend+1,w
  2675     0360  00A9               	movwf	?___lwmod+1
  2676     0361  082A               	movf	___lwmod@dividend,w
  2677     0362  00A8               	movwf	?___lwmod
  2678     0363                     l1007:
  2679     0363  0008               	return
  2680     0364                     __end_of___lwmod:
  2681                           
  2682                           	psect	text9
  2683     02E2                     __ptext9:	
  2684 ;; *************** function ___lwdiv *****************
  2685 ;; Defined at:
  2686 ;;		line 5 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lwdiv.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  divisor         2    0[BANK0 ] unsigned int 
  2689 ;;  dividend        2    2[BANK0 ] unsigned int 
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;  quotient        2    5[BANK0 ] unsigned int 
  2692 ;;  counter         1    7[BANK0 ] unsigned char 
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  2    0[BANK0 ] unsigned int 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2702 ;;      Params:         0       4       0       0       0
  2703 ;;      Locals:         0       3       0       0       0
  2704 ;;      Temps:          0       1       0       0       0
  2705 ;;      Totals:         0       8       0       0       0
  2706 ;;Total ram usage:        8 bytes
  2707 ;; Hardware stack levels used: 1
  2708 ;; Hardware stack levels required when called: 3
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_main
  2713 ;;		_sprintf
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717     02E2                     ___lwdiv:	
  2718                           ;psect for function ___lwdiv
  2719                           
  2720     02E2                     l2123:	
  2721                           ;incstack = 0
  2722                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2723                           
  2724     02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2725     02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2726     02E4  01A5               	clrf	___lwdiv@quotient
  2727     02E5  01A6               	clrf	___lwdiv@quotient+1
  2728     02E6                     l2125:
  2729     02E6  0820               	movf	___lwdiv@divisor,w
  2730     02E7  0421               	iorwf	___lwdiv@divisor+1,w
  2731     02E8  1903               	btfsc	3,2
  2732     02E9  2AEB               	goto	u941
  2733     02EA  2AEC               	goto	u940
  2734     02EB                     u941:
  2735     02EB  2B23               	goto	l2145
  2736     02EC                     u940:
  2737     02EC                     l2127:
  2738     02EC  01A7               	clrf	___lwdiv@counter
  2739     02ED  0AA7               	incf	___lwdiv@counter,f
  2740     02EE  2AFA               	goto	l2133
  2741     02EF                     l2129:
  2742     02EF  3001               	movlw	1
  2743     02F0                     u955:
  2744     02F0  1003               	clrc
  2745     02F1  0DA0               	rlf	___lwdiv@divisor,f
  2746     02F2  0DA1               	rlf	___lwdiv@divisor+1,f
  2747     02F3  3EFF               	addlw	-1
  2748     02F4  1D03               	skipz
  2749     02F5  2AF0               	goto	u955
  2750     02F6                     l2131:
  2751     02F6  3001               	movlw	1
  2752     02F7  00A4               	movwf	??___lwdiv
  2753     02F8  0824               	movf	??___lwdiv,w
  2754     02F9  07A7               	addwf	___lwdiv@counter,f
  2755     02FA                     l2133:
  2756     02FA  1FA1               	btfss	___lwdiv@divisor+1,7
  2757     02FB  2AFD               	goto	u961
  2758     02FC  2AFE               	goto	u960
  2759     02FD                     u961:
  2760     02FD  2AEF               	goto	l2129
  2761     02FE                     u960:
  2762     02FE                     l2135:
  2763     02FE  3001               	movlw	1
  2764     02FF                     u975:
  2765     02FF  1003               	clrc
  2766     0300  0DA5               	rlf	___lwdiv@quotient,f
  2767     0301  0DA6               	rlf	___lwdiv@quotient+1,f
  2768     0302  3EFF               	addlw	-1
  2769     0303  1D03               	skipz
  2770     0304  2AFF               	goto	u975
  2771     0305  0821               	movf	___lwdiv@divisor+1,w
  2772     0306  0223               	subwf	___lwdiv@dividend+1,w
  2773     0307  1D03               	skipz
  2774     0308  2B0B               	goto	u985
  2775     0309  0820               	movf	___lwdiv@divisor,w
  2776     030A  0222               	subwf	___lwdiv@dividend,w
  2777     030B                     u985:
  2778     030B  1C03               	skipc
  2779     030C  2B0E               	goto	u981
  2780     030D  2B0F               	goto	u980
  2781     030E                     u981:
  2782     030E  2B16               	goto	l2141
  2783     030F                     u980:
  2784     030F                     l2137:
  2785     030F  0820               	movf	___lwdiv@divisor,w
  2786     0310  02A2               	subwf	___lwdiv@dividend,f
  2787     0311  0821               	movf	___lwdiv@divisor+1,w
  2788     0312  1C03               	skipc
  2789     0313  03A3               	decf	___lwdiv@dividend+1,f
  2790     0314  02A3               	subwf	___lwdiv@dividend+1,f
  2791     0315                     l2139:
  2792     0315  1425               	bsf	___lwdiv@quotient,0
  2793     0316                     l2141:
  2794     0316  3001               	movlw	1
  2795     0317                     u995:
  2796     0317  1003               	clrc
  2797     0318  0CA1               	rrf	___lwdiv@divisor+1,f
  2798     0319  0CA0               	rrf	___lwdiv@divisor,f
  2799     031A  3EFF               	addlw	-1
  2800     031B  1D03               	skipz
  2801     031C  2B17               	goto	u995
  2802     031D                     l2143:
  2803     031D  3001               	movlw	1
  2804     031E  02A7               	subwf	___lwdiv@counter,f
  2805     031F  1D03               	btfss	3,2
  2806     0320  2B22               	goto	u1001
  2807     0321  2B23               	goto	u1000
  2808     0322                     u1001:
  2809     0322  2AFE               	goto	l2135
  2810     0323                     u1000:
  2811     0323                     l2145:
  2812     0323  0826               	movf	___lwdiv@quotient+1,w
  2813     0324  00A1               	movwf	?___lwdiv+1
  2814     0325  0825               	movf	___lwdiv@quotient,w
  2815     0326  00A0               	movwf	?___lwdiv
  2816     0327                     l997:
  2817     0327  0008               	return
  2818     0328                     __end_of___lwdiv:
  2819                           
  2820                           	psect	text10
  2821     0447                     __ptext10:	
  2822 ;; *************** function _spi_init *****************
  2823 ;; Defined at:
  2824 ;;		line 23 in file "spi.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;		None
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;		None
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  1    wreg      void 
  2831 ;; Registers used:
  2832 ;;		wreg, status,2, status,0
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2838 ;;      Params:         0       0       0       0       0
  2839 ;;      Locals:         0       0       0       0       0
  2840 ;;      Temps:          0       0       0       0       0
  2841 ;;      Totals:         0       0       0       0       0
  2842 ;;Total ram usage:        0 bytes
  2843 ;; Hardware stack levels used: 1
  2844 ;; Hardware stack levels required when called: 3
  2845 ;; This function calls:
  2846 ;;		Nothing
  2847 ;; This function is called by:
  2848 ;;		_main
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852     0447                     _spi_init:	
  2853                           ;psect for function _spi_init
  2854                           
  2855     0447                     l2351:	
  2856                           ;incstack = 0
  2857                           ; Regs used in _spi_init: [wreg+status,2+status,0]
  2858                           
  2859                           
  2860                           ;spi.c: 24: ANS12 = 0;
  2861     0447  1683               	bsf	3,5	;RP0=1, select bank3
  2862     0448  1703               	bsf	3,6	;RP1=1, select bank3
  2863     0449  1209               	bcf	9,4	;volatile
  2864                           
  2865                           ;spi.c: 25: TRISB0 = 1;
  2866     044A  1683               	bsf	3,5	;RP0=1, select bank1
  2867     044B  1303               	bcf	3,6	;RP1=0, select bank1
  2868     044C  1406               	bsf	6,0	;volatile
  2869                           
  2870                           ;spi.c: 26: TRISC0 = 0;
  2871     044D  1007               	bcf	7,0	;volatile
  2872                           
  2873                           ;spi.c: 27: TRISC3 = 0;
  2874     044E  1187               	bcf	7,3	;volatile
  2875                           
  2876                           ;spi.c: 28: TRISC4 = 1;
  2877     044F  1607               	bsf	7,4	;volatile
  2878                           
  2879                           ;spi.c: 29: TRISC5 = 0;
  2880     0450  1287               	bcf	7,5	;volatile
  2881                           
  2882                           ;spi.c: 30: RC0 = 1;
  2883     0451  1283               	bcf	3,5	;RP0=0, select bank0
  2884     0452  1303               	bcf	3,6	;RP1=0, select bank0
  2885     0453  1407               	bsf	7,0	;volatile
  2886                           
  2887                           ;spi.c: 31: SSPEN = 0;
  2888     0454  1294               	bcf	20,5	;volatile
  2889                           
  2890                           ;spi.c: 32: CKP = 0;
  2891     0455  1214               	bcf	20,4	;volatile
  2892                           
  2893                           ;spi.c: 33: CKE = 0;
  2894     0456  1683               	bsf	3,5	;RP0=1, select bank1
  2895     0457  1303               	bcf	3,6	;RP1=0, select bank1
  2896     0458  1314               	bcf	20,6	;volatile
  2897                           
  2898                           ;spi.c: 34: SMP = 0;
  2899     0459  1394               	bcf	20,7	;volatile
  2900     045A                     l2353:
  2901                           
  2902                           ;spi.c: 35: SSPCONbits.SSPM = 1;
  2903     045A  1283               	bcf	3,5	;RP0=0, select bank0
  2904     045B  1303               	bcf	3,6	;RP1=0, select bank0
  2905     045C  0814               	movf	20,w	;volatile
  2906     045D  39F0               	andlw	-16
  2907     045E  3801               	iorlw	1
  2908     045F  0094               	movwf	20	;volatile
  2909     0460                     l2355:
  2910                           
  2911                           ;spi.c: 36: SSPEN = 1;
  2912     0460  1694               	bsf	20,5	;volatile
  2913     0461                     l493:
  2914     0461  0008               	return
  2915     0462                     __end_of_spi_init:
  2916                           
  2917                           	psect	text11
  2918     04B2                     __ptext11:	
  2919 ;; *************** function _serial_init *****************
  2920 ;; Defined at:
  2921 ;;		line 29 in file "serial.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;		None
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2935 ;;      Params:         0       0       0       0       0
  2936 ;;      Locals:         0       0       0       0       0
  2937 ;;      Temps:          0       0       0       0       0
  2938 ;;      Totals:         0       0       0       0       0
  2939 ;;Total ram usage:        0 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; Hardware stack levels required when called: 3
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_main
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949     04B2                     _serial_init:	
  2950                           ;psect for function _serial_init
  2951                           
  2952     04B2                     l2289:	
  2953                           ;incstack = 0
  2954                           ; Regs used in _serial_init: [wreg]
  2955                           
  2956                           
  2957                           ;serial.c: 65: SPBRG=((20000000/(16UL * 19200) -1));
  2958     04B2  3040               	movlw	64
  2959     04B3  1683               	bsf	3,5	;RP0=1, select bank1
  2960     04B4  1303               	bcf	3,6	;RP1=0, select bank1
  2961     04B5  0099               	movwf	25	;volatile
  2962     04B6                     l2291:
  2963                           
  2964                           ;serial.c: 66: BRGH=1;
  2965     04B6  1518               	bsf	24,2	;volatile
  2966     04B7                     l2293:
  2967                           
  2968                           ;serial.c: 67: SYNC=0;
  2969     04B7  1218               	bcf	24,4	;volatile
  2970     04B8                     l2295:
  2971                           
  2972                           ;serial.c: 68: SPEN=1;
  2973     04B8  1283               	bcf	3,5	;RP0=0, select bank0
  2974     04B9  1303               	bcf	3,6	;RP1=0, select bank0
  2975     04BA  1798               	bsf	24,7	;volatile
  2976     04BB                     l2297:
  2977                           
  2978                           ;serial.c: 69: CREN=1;
  2979     04BB  1618               	bsf	24,4	;volatile
  2980     04BC                     l2299:
  2981                           
  2982                           ;serial.c: 70: SREN=0;
  2983     04BC  1298               	bcf	24,5	;volatile
  2984     04BD                     l2301:
  2985                           
  2986                           ;serial.c: 71: TXIE=0;
  2987     04BD  1683               	bsf	3,5	;RP0=1, select bank1
  2988     04BE  1303               	bcf	3,6	;RP1=0, select bank1
  2989     04BF  120C               	bcf	12,4	;volatile
  2990     04C0                     l2303:
  2991                           
  2992                           ;serial.c: 72: RCIE=0;
  2993     04C0  128C               	bcf	12,5	;volatile
  2994     04C1                     l2305:
  2995                           
  2996                           ;serial.c: 73: TX9=0;
  2997     04C1  1318               	bcf	24,6	;volatile
  2998     04C2                     l2307:
  2999                           
  3000                           ;serial.c: 74: RX9=0;
  3001     04C2  1283               	bcf	3,5	;RP0=0, select bank0
  3002     04C3  1303               	bcf	3,6	;RP1=0, select bank0
  3003     04C4  1318               	bcf	24,6	;volatile
  3004     04C5                     l2309:
  3005                           
  3006                           ;serial.c: 75: TXEN=0;
  3007     04C5  1683               	bsf	3,5	;RP0=1, select bank1
  3008     04C6  1303               	bcf	3,6	;RP1=0, select bank1
  3009     04C7  1298               	bcf	24,5	;volatile
  3010     04C8                     l2311:
  3011                           
  3012                           ;serial.c: 76: TXEN=1;
  3013     04C8  1698               	bsf	24,5	;volatile
  3014     04C9                     l394:
  3015     04C9  0008               	return
  3016     04CA                     __end_of_serial_init:
  3017                           
  3018                           	psect	text12
  3019     0518                     __ptext12:	
  3020 ;; *************** function _sensor_power *****************
  3021 ;; Defined at:
  3022 ;;		line 25 in file "sensor.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  state           1    wreg     unsigned char 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  state           1    2[BANK0 ] unsigned char 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      void 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0, pclath, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3036 ;;      Params:         0       0       0       0       0
  3037 ;;      Locals:         0       1       0       0       0
  3038 ;;      Temps:          0       0       0       0       0
  3039 ;;      Totals:         0       1       0       0       0
  3040 ;;Total ram usage:        1 bytes
  3041 ;; Hardware stack levels used: 1
  3042 ;; Hardware stack levels required when called: 4
  3043 ;; This function calls:
  3044 ;;		_delay_ms
  3045 ;; This function is called by:
  3046 ;;		_main
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050     0518                     _sensor_power:	
  3051                           ;psect for function _sensor_power
  3052                           
  3053                           
  3054                           ;incstack = 0
  3055                           ; Regs used in _sensor_power: [wreg+status,2+status,0+pclath+cstack]
  3056                           ;sensor_power@state stored from wreg
  3057     0518  1283               	bcf	3,5	;RP0=0, select bank0
  3058     0519  1303               	bcf	3,6	;RP1=0, select bank0
  3059     051A  00A2               	movwf	sensor_power@state
  3060     051B                     l2269:
  3061                           
  3062                           ;sensor.c: 26: if(state == 1) {
  3063     051B  0322               	decf	sensor_power@state,w
  3064     051C  1D03               	btfss	3,2
  3065     051D  2D1F               	goto	u1211
  3066     051E  2D20               	goto	u1210
  3067     051F                     u1211:
  3068     051F  2D28               	goto	l344
  3069     0520                     u1210:
  3070     0520                     l2271:
  3071                           
  3072                           ;sensor.c: 27: RA1 = 1;
  3073     0520  1485               	bsf	5,1	;volatile
  3074     0521                     l2273:
  3075                           
  3076                           ;sensor.c: 28: delay_ms(50);
  3077     0521  3032               	movlw	50
  3078     0522  120A  118A  247D  120A  118A  	fcall	_delay_ms
  3079                           
  3080                           ;sensor.c: 29: } else RA1 = 0;
  3081     0527  2D29               	goto	l346
  3082     0528                     l344:
  3083     0528  1085               	bcf	5,1	;volatile
  3084     0529                     l346:
  3085     0529  0008               	return
  3086     052A                     __end_of_sensor_power:
  3087                           
  3088                           	psect	text13
  3089     0498                     __ptext13:	
  3090 ;; *************** function _sensor_init *****************
  3091 ;; Defined at:
  3092 ;;		line 37 in file "sensor.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;		None
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3106 ;;      Params:         0       0       0       0       0
  3107 ;;      Locals:         0       0       0       0       0
  3108 ;;      Temps:          0       1       0       0       0
  3109 ;;      Totals:         0       1       0       0       0
  3110 ;;Total ram usage:        1 bytes
  3111 ;; Hardware stack levels used: 1
  3112 ;; Hardware stack levels required when called: 4
  3113 ;; This function calls:
  3114 ;;		_adc_init
  3115 ;; This function is called by:
  3116 ;;		_main
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120     0498                     _sensor_init:	
  3121                           ;psect for function _sensor_init
  3122                           
  3123     0498                     l2275:	
  3124                           ;incstack = 0
  3125                           ; Regs used in _sensor_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3126                           
  3127                           
  3128                           ;sensor.c: 40: ANS1 = 0;
  3129     0498  1683               	bsf	3,5	;RP0=1, select bank3
  3130     0499  1703               	bsf	3,6	;RP1=1, select bank3
  3131     049A  1088               	bcf	8,1	;volatile
  3132                           
  3133                           ;sensor.c: 41: TRISA1 = 0;
  3134     049B  1683               	bsf	3,5	;RP0=1, select bank1
  3135     049C  1303               	bcf	3,6	;RP1=0, select bank1
  3136     049D  1085               	bcf	5,1	;volatile
  3137                           
  3138                           ;sensor.c: 42: RA1 = 0;
  3139     049E  1283               	bcf	3,5	;RP0=0, select bank0
  3140     049F  1303               	bcf	3,6	;RP1=0, select bank0
  3141     04A0  1085               	bcf	5,1	;volatile
  3142     04A1                     l2277:
  3143                           
  3144                           ;sensor.c: 45: ANSEL &= 0b11100011;
  3145     04A1  30E3               	movlw	227
  3146     04A2  00A2               	movwf	??_sensor_init
  3147     04A3  0822               	movf	??_sensor_init,w
  3148     04A4  1683               	bsf	3,5	;RP0=1, select bank3
  3149     04A5  1703               	bsf	3,6	;RP1=1, select bank3
  3150     04A6  0588               	andwf	8,f	;volatile
  3151     04A7                     l2279:
  3152                           
  3153                           ;sensor.c: 48: ANS0 = 1;
  3154     04A7  1408               	bsf	8,0	;volatile
  3155     04A8                     l2281:
  3156                           
  3157                           ;sensor.c: 49: TRISA0 = 1;
  3158     04A8  1683               	bsf	3,5	;RP0=1, select bank1
  3159     04A9  1303               	bcf	3,6	;RP1=0, select bank1
  3160     04AA  1405               	bsf	5,0	;volatile
  3161     04AB                     l2283:
  3162                           
  3163                           ;sensor.c: 50: adc_init(0);
  3164     04AB  3000               	movlw	0
  3165     04AC  120A  118A  21A2  120A  118A  	fcall	_adc_init
  3166     04B1                     l349:
  3167     04B1  0008               	return
  3168     04B2                     __end_of_sensor_init:
  3169                           
  3170                           	psect	text14
  3171     01A2                     __ptext14:	
  3172 ;; *************** function _adc_init *****************
  3173 ;; Defined at:
  3174 ;;		line 20 in file "adc.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  adc_channel     1    wreg     unsigned char 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  adc_channel     1    1[BANK0 ] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  1    wreg      void 
  3181 ;; Registers used:
  3182 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3188 ;;      Params:         0       0       0       0       0
  3189 ;;      Locals:         0       1       0       0       0
  3190 ;;      Temps:          0       1       0       0       0
  3191 ;;      Totals:         0       2       0       0       0
  3192 ;;Total ram usage:        2 bytes
  3193 ;; Hardware stack levels used: 1
  3194 ;; Hardware stack levels required when called: 3
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_sensor_init
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202     01A2                     _adc_init:	
  3203                           ;psect for function _adc_init
  3204                           
  3205                           
  3206                           ;incstack = 0
  3207                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0]
  3208                           ;adc_init@adc_channel stored from wreg
  3209     01A2  1283               	bcf	3,5	;RP0=0, select bank0
  3210     01A3  1303               	bcf	3,6	;RP1=0, select bank0
  3211     01A4  00A1               	movwf	adc_init@adc_channel
  3212     01A5                     l2059:
  3213                           
  3214                           ;adc.c: 22: switch (adc_channel) {
  3215     01A5  29F3               	goto	l2063
  3216     01A6                     l62:	
  3217                           ;adc.c: 23: case 0:
  3218                           
  3219                           
  3220                           ;adc.c: 24: TRISA0 = 1;
  3221     01A6  1683               	bsf	3,5	;RP0=1, select bank1
  3222     01A7  1303               	bcf	3,6	;RP1=0, select bank1
  3223     01A8  1405               	bsf	5,0	;volatile
  3224                           
  3225                           ;adc.c: 25: ANS0 = 1;
  3226     01A9  1683               	bsf	3,5	;RP0=1, select bank3
  3227     01AA  1703               	bsf	3,6	;RP1=1, select bank3
  3228     01AB  1408               	bsf	8,0	;volatile
  3229                           
  3230                           ;adc.c: 26: break;
  3231     01AC  2A16               	goto	l2065
  3232     01AD                     l64:	
  3233                           ;adc.c: 27: case 1:
  3234                           
  3235                           
  3236                           ;adc.c: 28: TRISA1 = 1;
  3237     01AD  1683               	bsf	3,5	;RP0=1, select bank1
  3238     01AE  1303               	bcf	3,6	;RP1=0, select bank1
  3239     01AF  1485               	bsf	5,1	;volatile
  3240                           
  3241                           ;adc.c: 29: ANS1 = 1;
  3242     01B0  1683               	bsf	3,5	;RP0=1, select bank3
  3243     01B1  1703               	bsf	3,6	;RP1=1, select bank3
  3244     01B2  1488               	bsf	8,1	;volatile
  3245                           
  3246                           ;adc.c: 30: break;
  3247     01B3  2A16               	goto	l2065
  3248     01B4                     l65:	
  3249                           ;adc.c: 31: case 2:
  3250                           
  3251                           
  3252                           ;adc.c: 32: TRISA2 = 1;
  3253     01B4  1683               	bsf	3,5	;RP0=1, select bank1
  3254     01B5  1303               	bcf	3,6	;RP1=0, select bank1
  3255     01B6  1505               	bsf	5,2	;volatile
  3256                           
  3257                           ;adc.c: 33: ANS2 = 1;
  3258     01B7  1683               	bsf	3,5	;RP0=1, select bank3
  3259     01B8  1703               	bsf	3,6	;RP1=1, select bank3
  3260     01B9  1508               	bsf	8,2	;volatile
  3261                           
  3262                           ;adc.c: 34: break;
  3263     01BA  2A16               	goto	l2065
  3264     01BB                     l66:	
  3265                           ;adc.c: 35: case 3:
  3266                           
  3267                           
  3268                           ;adc.c: 36: TRISA3 = 1;
  3269     01BB  1683               	bsf	3,5	;RP0=1, select bank1
  3270     01BC  1303               	bcf	3,6	;RP1=0, select bank1
  3271     01BD  1585               	bsf	5,3	;volatile
  3272                           
  3273                           ;adc.c: 37: ANS3 = 1;
  3274     01BE  1683               	bsf	3,5	;RP0=1, select bank3
  3275     01BF  1703               	bsf	3,6	;RP1=1, select bank3
  3276     01C0  1588               	bsf	8,3	;volatile
  3277                           
  3278                           ;adc.c: 38: break;
  3279     01C1  2A16               	goto	l2065
  3280     01C2                     l67:	
  3281                           ;adc.c: 39: case 4:
  3282                           
  3283                           
  3284                           ;adc.c: 40: TRISA5 = 1;
  3285     01C2  1683               	bsf	3,5	;RP0=1, select bank1
  3286     01C3  1303               	bcf	3,6	;RP1=0, select bank1
  3287     01C4  1685               	bsf	5,5	;volatile
  3288                           
  3289                           ;adc.c: 41: ANS4 = 1;
  3290     01C5  1683               	bsf	3,5	;RP0=1, select bank3
  3291     01C6  1703               	bsf	3,6	;RP1=1, select bank3
  3292     01C7  1608               	bsf	8,4	;volatile
  3293                           
  3294                           ;adc.c: 42: break;
  3295     01C8  2A16               	goto	l2065
  3296     01C9                     l68:	
  3297                           ;adc.c: 43: case 8:
  3298                           
  3299                           
  3300                           ;adc.c: 44: TRISB2 = 1;
  3301     01C9  1683               	bsf	3,5	;RP0=1, select bank1
  3302     01CA  1303               	bcf	3,6	;RP1=0, select bank1
  3303     01CB  1506               	bsf	6,2	;volatile
  3304                           
  3305                           ;adc.c: 45: ANS8 = 1;
  3306     01CC  1683               	bsf	3,5	;RP0=1, select bank3
  3307     01CD  1703               	bsf	3,6	;RP1=1, select bank3
  3308     01CE  1409               	bsf	9,0	;volatile
  3309                           
  3310                           ;adc.c: 46: break;
  3311     01CF  2A16               	goto	l2065
  3312     01D0                     l69:	
  3313                           ;adc.c: 47: case 9:
  3314                           
  3315                           
  3316                           ;adc.c: 48: TRISB2 = 1;
  3317     01D0  1683               	bsf	3,5	;RP0=1, select bank1
  3318     01D1  1303               	bcf	3,6	;RP1=0, select bank1
  3319     01D2  1506               	bsf	6,2	;volatile
  3320                           
  3321                           ;adc.c: 49: ANS9 = 1;
  3322     01D3  1683               	bsf	3,5	;RP0=1, select bank3
  3323     01D4  1703               	bsf	3,6	;RP1=1, select bank3
  3324     01D5  1489               	bsf	9,1	;volatile
  3325                           
  3326                           ;adc.c: 50: break;
  3327     01D6  2A16               	goto	l2065
  3328     01D7                     l70:	
  3329                           ;adc.c: 51: case 10:
  3330                           
  3331                           
  3332                           ;adc.c: 52: TRISB1 = 1;
  3333     01D7  1683               	bsf	3,5	;RP0=1, select bank1
  3334     01D8  1303               	bcf	3,6	;RP1=0, select bank1
  3335     01D9  1486               	bsf	6,1	;volatile
  3336                           
  3337                           ;adc.c: 53: ANS10 = 1;
  3338     01DA  1683               	bsf	3,5	;RP0=1, select bank3
  3339     01DB  1703               	bsf	3,6	;RP1=1, select bank3
  3340     01DC  1509               	bsf	9,2	;volatile
  3341                           
  3342                           ;adc.c: 54: break;
  3343     01DD  2A16               	goto	l2065
  3344     01DE                     l71:	
  3345                           ;adc.c: 55: case 11:
  3346                           
  3347                           
  3348                           ;adc.c: 56: TRISB4 = 1;
  3349     01DE  1683               	bsf	3,5	;RP0=1, select bank1
  3350     01DF  1303               	bcf	3,6	;RP1=0, select bank1
  3351     01E0  1606               	bsf	6,4	;volatile
  3352                           
  3353                           ;adc.c: 57: ANS11 = 1;
  3354     01E1  1683               	bsf	3,5	;RP0=1, select bank3
  3355     01E2  1703               	bsf	3,6	;RP1=1, select bank3
  3356     01E3  1589               	bsf	9,3	;volatile
  3357                           
  3358                           ;adc.c: 58: break;
  3359     01E4  2A16               	goto	l2065
  3360     01E5                     l72:	
  3361                           ;adc.c: 59: case 12:
  3362                           
  3363                           
  3364                           ;adc.c: 60: TRISB0 = 1;
  3365     01E5  1683               	bsf	3,5	;RP0=1, select bank1
  3366     01E6  1303               	bcf	3,6	;RP1=0, select bank1
  3367     01E7  1406               	bsf	6,0	;volatile
  3368                           
  3369                           ;adc.c: 61: ANS12 = 1;
  3370     01E8  1683               	bsf	3,5	;RP0=1, select bank3
  3371     01E9  1703               	bsf	3,6	;RP1=1, select bank3
  3372     01EA  1609               	bsf	9,4	;volatile
  3373                           
  3374                           ;adc.c: 62: break;
  3375     01EB  2A16               	goto	l2065
  3376     01EC                     l73:	
  3377                           ;adc.c: 63: case 13:
  3378                           
  3379                           
  3380                           ;adc.c: 64: TRISB5 = 1;
  3381     01EC  1683               	bsf	3,5	;RP0=1, select bank1
  3382     01ED  1303               	bcf	3,6	;RP1=0, select bank1
  3383     01EE  1686               	bsf	6,5	;volatile
  3384                           
  3385                           ;adc.c: 65: ANS13 = 1;
  3386     01EF  1683               	bsf	3,5	;RP0=1, select bank3
  3387     01F0  1703               	bsf	3,6	;RP1=1, select bank3
  3388     01F1  1689               	bsf	9,5	;volatile
  3389                           
  3390                           ;adc.c: 66: break;
  3391     01F2  2A16               	goto	l2065
  3392     01F3                     l2063:
  3393     01F3  0821               	movf	adc_init@adc_channel,w
  3394                           
  3395                           ; Switch size 1, requested type "simple"
  3396                           ; Number of cases is 11, Range of values is 0 to 13
  3397                           ; switch strategies available:
  3398                           ; Name         Instructions Cycles
  3399                           ; simple_byte           34    18 (average)
  3400                           ; direct_byte           50     8 (fixed)
  3401                           ; jumptable            260     6 (fixed)
  3402                           ;	Chosen strategy is simple_byte
  3403     01F4  3A00               	xorlw	0	; case 0
  3404     01F5  1903               	skipnz
  3405     01F6  29A6               	goto	l62
  3406     01F7  3A01               	xorlw	1	; case 1
  3407     01F8  1903               	skipnz
  3408     01F9  29AD               	goto	l64
  3409     01FA  3A03               	xorlw	3	; case 2
  3410     01FB  1903               	skipnz
  3411     01FC  29B4               	goto	l65
  3412     01FD  3A01               	xorlw	1	; case 3
  3413     01FE  1903               	skipnz
  3414     01FF  29BB               	goto	l66
  3415     0200  3A07               	xorlw	7	; case 4
  3416     0201  1903               	skipnz
  3417     0202  29C2               	goto	l67
  3418     0203  3A0C               	xorlw	12	; case 8
  3419     0204  1903               	skipnz
  3420     0205  29C9               	goto	l68
  3421     0206  3A01               	xorlw	1	; case 9
  3422     0207  1903               	skipnz
  3423     0208  29D0               	goto	l69
  3424     0209  3A03               	xorlw	3	; case 10
  3425     020A  1903               	skipnz
  3426     020B  29D7               	goto	l70
  3427     020C  3A01               	xorlw	1	; case 11
  3428     020D  1903               	skipnz
  3429     020E  29DE               	goto	l71
  3430     020F  3A07               	xorlw	7	; case 12
  3431     0210  1903               	skipnz
  3432     0211  29E5               	goto	l72
  3433     0212  3A01               	xorlw	1	; case 13
  3434     0213  1903               	skipnz
  3435     0214  29EC               	goto	l73
  3436     0215  2A2E               	goto	l75
  3437     0216                     l2065:
  3438                           
  3439                           ;adc.c: 70: ADCON0bits.ADCS = 2;
  3440     0216  1283               	bcf	3,5	;RP0=0, select bank0
  3441     0217  1303               	bcf	3,6	;RP1=0, select bank0
  3442     0218  081F               	movf	31,w	;volatile
  3443     0219  393F               	andlw	-193
  3444     021A  3880               	iorlw	128
  3445     021B  009F               	movwf	31	;volatile
  3446                           
  3447                           ;adc.c: 72: ADCON0bits.CHS = adc_channel;
  3448     021C  0821               	movf	adc_init@adc_channel,w
  3449     021D  00A0               	movwf	??_adc_init
  3450     021E  0DA0               	rlf	??_adc_init,f
  3451     021F  0DA0               	rlf	??_adc_init,f
  3452     0220  081F               	movf	31,w	;volatile
  3453     0221  0620               	xorwf	??_adc_init,w
  3454     0222  39C3               	andlw	-61
  3455     0223  0620               	xorwf	??_adc_init,w
  3456     0224  009F               	movwf	31	;volatile
  3457     0225                     l2067:
  3458                           
  3459                           ;adc.c: 73: ADCON1bits.ADFM = 1;
  3460     0225  1683               	bsf	3,5	;RP0=1, select bank1
  3461     0226  1303               	bcf	3,6	;RP1=0, select bank1
  3462     0227  179F               	bsf	31,7	;volatile
  3463     0228                     l2069:
  3464                           
  3465                           ;adc.c: 74: ADON = 0;
  3466     0228  1283               	bcf	3,5	;RP0=0, select bank0
  3467     0229  1303               	bcf	3,6	;RP1=0, select bank0
  3468     022A  101F               	bcf	31,0	;volatile
  3469     022B                     l2071:
  3470                           
  3471                           ;adc.c: 75: ADIE = 0;
  3472     022B  1683               	bsf	3,5	;RP0=1, select bank1
  3473     022C  1303               	bcf	3,6	;RP1=0, select bank1
  3474     022D  130C               	bcf	12,6	;volatile
  3475     022E                     l75:
  3476     022E  0008               	return
  3477     022F                     __end_of_adc_init:
  3478                           
  3479                           	psect	text15
  3480     0589                     __ptext15:	
  3481 ;; *************** function _led_init *****************
  3482 ;; Defined at:
  3483 ;;		line 85 in file "main.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		None
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3497 ;;      Params:         0       0       0       0       0
  3498 ;;      Locals:         0       0       0       0       0
  3499 ;;      Temps:          0       0       0       0       0
  3500 ;;      Totals:         0       0       0       0       0
  3501 ;;Total ram usage:        0 bytes
  3502 ;; Hardware stack levels used: 1
  3503 ;; Hardware stack levels required when called: 3
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_main
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511     0589                     _led_init:	
  3512                           ;psect for function _led_init
  3513                           
  3514     0589                     l2373:	
  3515                           ;incstack = 0
  3516                           ; Regs used in _led_init: []
  3517                           
  3518                           
  3519                           ;main.c: 86: TRISB5 = 0;
  3520     0589  1683               	bsf	3,5	;RP0=1, select bank1
  3521     058A  1303               	bcf	3,6	;RP1=0, select bank1
  3522     058B  1286               	bcf	6,5	;volatile
  3523                           
  3524                           ;main.c: 87: ANS13 = 0;
  3525     058C  1683               	bsf	3,5	;RP0=1, select bank3
  3526     058D  1703               	bsf	3,6	;RP1=1, select bank3
  3527     058E  1289               	bcf	9,5	;volatile
  3528                           
  3529                           ;main.c: 88: RB5 = 0;
  3530     058F  1283               	bcf	3,5	;RP0=0, select bank0
  3531     0590  1303               	bcf	3,6	;RP1=0, select bank0
  3532     0591  1286               	bcf	6,5	;volatile
  3533     0592                     l598:
  3534     0592  0008               	return
  3535     0593                     __end_of_led_init:
  3536                           
  3537                           	psect	text16
  3538     04CA                     __ptext16:	
  3539 ;; *************** function _lcd_show_cursor *****************
  3540 ;; Defined at:
  3541 ;;		line 74 in file "lcd8x2.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;  on              2    4[BANK0 ] int 
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;		None
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      void 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2, status,0, pclath, cstack
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3555 ;;      Params:         0       2       0       0       0
  3556 ;;      Locals:         0       0       0       0       0
  3557 ;;      Temps:          0       0       0       0       0
  3558 ;;      Totals:         0       2       0       0       0
  3559 ;;Total ram usage:        2 bytes
  3560 ;; Hardware stack levels used: 1
  3561 ;; Hardware stack levels required when called: 5
  3562 ;; This function calls:
  3563 ;;		_spi_send_command
  3564 ;; This function is called by:
  3565 ;;		_main
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569     04CA                     _lcd_show_cursor:	
  3570                           ;psect for function _lcd_show_cursor
  3571                           
  3572     04CA                     l2263:	
  3573                           ;incstack = 0
  3574                           ; Regs used in _lcd_show_cursor: [wreg+status,2+status,0+pclath+cstack]
  3575                           
  3576                           
  3577                           ;lcd8x2.c: 75: if (on) {
  3578     04CA  1283               	bcf	3,5	;RP0=0, select bank0
  3579     04CB  1303               	bcf	3,6	;RP1=0, select bank0
  3580     04CC  0824               	movf	lcd_show_cursor@on,w
  3581     04CD  0425               	iorwf	lcd_show_cursor@on+1,w
  3582     04CE  1903               	btfsc	3,2
  3583     04CF  2CD1               	goto	u1201
  3584     04D0  2CD2               	goto	u1200
  3585     04D1                     u1201:
  3586     04D1  2CD9               	goto	l2267
  3587     04D2                     u1200:
  3588     04D2                     l2265:
  3589                           
  3590                           ;lcd8x2.c: 76: spi_send_command(5);
  3591     04D2  3005               	movlw	5
  3592     04D3  120A  118A  253C  120A  118A  	fcall	_spi_send_command
  3593                           
  3594                           ;lcd8x2.c: 77: } else {
  3595     04D8  2CDF               	goto	l273
  3596     04D9                     l2267:
  3597                           
  3598                           ;lcd8x2.c: 78: spi_send_command(6);
  3599     04D9  3006               	movlw	6
  3600     04DA  120A  118A  253C  120A  118A  	fcall	_spi_send_command
  3601     04DF                     l273:
  3602     04DF  0008               	return
  3603     04E0                     __end_of_lcd_show_cursor:
  3604                           
  3605                           	psect	text17
  3606     059B                     __ptext17:	
  3607 ;; *************** function _lcd_init *****************
  3608 ;; Defined at:
  3609 ;;		line 24 in file "lcd8x2.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;		None
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;		None
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  1    wreg      void 
  3616 ;; Registers used:
  3617 ;;		None
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3623 ;;      Params:         0       0       0       0       0
  3624 ;;      Locals:         0       0       0       0       0
  3625 ;;      Temps:          0       0       0       0       0
  3626 ;;      Totals:         0       0       0       0       0
  3627 ;;Total ram usage:        0 bytes
  3628 ;; Hardware stack levels used: 1
  3629 ;; Hardware stack levels required when called: 3
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_main
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637     059B                     _lcd_init:	
  3638                           ;psect for function _lcd_init
  3639                           
  3640     059B                     l2259:	
  3641                           ;incstack = 0
  3642                           ; Regs used in _lcd_init: []
  3643                           
  3644                           
  3645                           ;lcd8x2.c: 25: TRISB0 = 1;
  3646     059B  1683               	bsf	3,5	;RP0=1, select bank1
  3647     059C  1303               	bcf	3,6	;RP1=0, select bank1
  3648     059D  1406               	bsf	6,0	;volatile
  3649                           
  3650                           ;lcd8x2.c: 26: ANS12 = 0;
  3651     059E  1683               	bsf	3,5	;RP0=1, select bank3
  3652     059F  1703               	bsf	3,6	;RP1=1, select bank3
  3653     05A0  1209               	bcf	9,4	;volatile
  3654     05A1                     l256:
  3655     05A1  0008               	return
  3656     05A2                     __end_of_lcd_init:
  3657                           
  3658                           	psect	text18
  3659     05A2                     __ptext18:	
  3660 ;; *************** function _lcd_clear *****************
  3661 ;; Defined at:
  3662 ;;		line 54 in file "lcd8x2.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;		None
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;		None
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      void 
  3669 ;; Registers used:
  3670 ;;		wreg, status,2, status,0, pclath, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3676 ;;      Params:         0       0       0       0       0
  3677 ;;      Locals:         0       0       0       0       0
  3678 ;;      Temps:          0       0       0       0       0
  3679 ;;      Totals:         0       0       0       0       0
  3680 ;;Total ram usage:        0 bytes
  3681 ;; Hardware stack levels used: 1
  3682 ;; Hardware stack levels required when called: 5
  3683 ;; This function calls:
  3684 ;;		_spi_send_command
  3685 ;; This function is called by:
  3686 ;;		_main
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690     05A2                     _lcd_clear:	
  3691                           ;psect for function _lcd_clear
  3692                           
  3693     05A2                     l2261:	
  3694                           ;incstack = 0
  3695                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  3696                           
  3697                           
  3698                           ;lcd8x2.c: 55: spi_send_command(2);
  3699     05A2  3002               	movlw	2
  3700     05A3  120A  118A  253C  120A  118A  	fcall	_spi_send_command
  3701     05A8                     l265:
  3702     05A8  0008               	return
  3703     05A9                     __end_of_lcd_clear:
  3704                           
  3705                           	psect	text19
  3706     053C                     __ptext19:	
  3707 ;; *************** function _spi_send_command *****************
  3708 ;; Defined at:
  3709 ;;		line 36 in file "lcd8x2.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  command         1    wreg     unsigned char 
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;  command         1    2[BANK0 ] unsigned char 
  3714 ;;  command_byte    1    3[BANK0 ] unsigned char 
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      void 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0, pclath, cstack
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3724 ;;      Params:         0       0       0       0       0
  3725 ;;      Locals:         0       2       0       0       0
  3726 ;;      Temps:          0       1       0       0       0
  3727 ;;      Totals:         0       3       0       0       0
  3728 ;;Total ram usage:        3 bytes
  3729 ;; Hardware stack levels used: 1
  3730 ;; Hardware stack levels required when called: 4
  3731 ;; This function calls:
  3732 ;;		_spi_exchange
  3733 ;; This function is called by:
  3734 ;;		_lcd_clear
  3735 ;;		_lcd_goto
  3736 ;;		_lcd_show_cursor
  3737 ;;		_lcd_putchar
  3738 ;;		_lcd_set_display_movement
  3739 ;;		_lcd_set_cursor_movement
  3740 ;;		_lcd_get_cursor_position
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744     053C                     _spi_send_command:	
  3745                           ;psect for function _spi_send_command
  3746                           
  3747                           
  3748                           ;incstack = 0
  3749                           ; Regs used in _spi_send_command: [wreg+status,2+status,0+pclath+cstack]
  3750                           ;spi_send_command@command stored from wreg
  3751     053C  1283               	bcf	3,5	;RP0=0, select bank0
  3752     053D  1303               	bcf	3,6	;RP1=0, select bank0
  3753     053E  00A2               	movwf	spi_send_command@command
  3754     053F                     l2049:
  3755                           
  3756                           ;lcd8x2.c: 37: uint8_t command_byte;;lcd8x2.c: 38: command_byte = 2 << 5;
  3757     053F  3040               	movlw	64
  3758     0540  00A3               	movwf	spi_send_command@command_byte
  3759     0541                     l2051:
  3760                           
  3761                           ;lcd8x2.c: 39: command_byte |= command;
  3762     0541  0822               	movf	spi_send_command@command,w
  3763     0542  00A1               	movwf	??_spi_send_command
  3764     0543  0821               	movf	??_spi_send_command,w
  3765     0544  04A3               	iorwf	spi_send_command@command_byte,f
  3766     0545                     l2053:
  3767                           
  3768                           ;lcd8x2.c: 40: spi_exchange(command_byte);
  3769     0545  0823               	movf	spi_send_command@command_byte,w
  3770     0546  120A  118A  252A  120A  118A  	fcall	_spi_exchange
  3771     054B                     l259:
  3772     054B  0008               	return
  3773     054C                     __end_of_spi_send_command:
  3774                           
  3775                           	psect	text20
  3776     052A                     __ptext20:	
  3777 ;; *************** function _spi_exchange *****************
  3778 ;; Defined at:
  3779 ;;		line 44 in file "spi.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  data            1    wreg     unsigned char 
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;  data            1    0[BANK0 ] unsigned char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      unsigned char 
  3786 ;; Registers used:
  3787 ;;		wreg
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3793 ;;      Params:         0       0       0       0       0
  3794 ;;      Locals:         0       1       0       0       0
  3795 ;;      Temps:          0       0       0       0       0
  3796 ;;      Totals:         0       1       0       0       0
  3797 ;;Total ram usage:        1 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 3
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_spi_send_command
  3804 ;;		_spi_send_data
  3805 ;;		_lcd_get_cursor_position
  3806 ;;		_led_rgb_set_color
  3807 ;;		_led_rgb_set_red_level
  3808 ;;		_led_rgb_set_green_level
  3809 ;;		_led_rgb_set_blue_level
  3810 ;;		_spi_read
  3811 ;;		_spi_write
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815     052A                     _spi_exchange:	
  3816                           ;psect for function _spi_exchange
  3817                           
  3818                           
  3819                           ;incstack = 0
  3820                           ; Regs used in _spi_exchange: [wreg]
  3821                           ;spi_exchange@data stored from wreg
  3822     052A  1283               	bcf	3,5	;RP0=0, select bank0
  3823     052B  1303               	bcf	3,6	;RP1=0, select bank0
  3824     052C  00A0               	movwf	spi_exchange@data
  3825     052D                     l2041:
  3826                           
  3827                           ;spi.c: 45: WCOL = 0;
  3828     052D  1394               	bcf	20,7	;volatile
  3829                           
  3830                           ;spi.c: 46: RC0 = 0;
  3831     052E  1007               	bcf	7,0	;volatile
  3832     052F                     l2043:
  3833                           
  3834                           ;spi.c: 47: SSPBUF = data;
  3835     052F  0820               	movf	spi_exchange@data,w
  3836     0530  0093               	movwf	19	;volatile
  3837     0531                     l496:	
  3838                           ;spi.c: 48: while(SSPSTATbits.BF == 0);
  3839                           
  3840     0531  1683               	bsf	3,5	;RP0=1, select bank1
  3841     0532  1303               	bcf	3,6	;RP1=0, select bank1
  3842     0533  1C14               	btfss	20,0	;volatile
  3843     0534  2D36               	goto	u841
  3844     0535  2D37               	goto	u840
  3845     0536                     u841:
  3846     0536  2D31               	goto	l496
  3847     0537                     u840:
  3848     0537                     l498:
  3849                           
  3850                           ;spi.c: 49: RC0 = 1;
  3851     0537  1283               	bcf	3,5	;RP0=0, select bank0
  3852     0538  1303               	bcf	3,6	;RP1=0, select bank0
  3853     0539  1407               	bsf	7,0	;volatile
  3854     053A                     l2045:
  3855                           
  3856                           ;spi.c: 50: return SSPBUF;
  3857     053A  0813               	movf	19,w	;volatile
  3858     053B                     l499:
  3859     053B  0008               	return
  3860     053C                     __end_of_spi_exchange:
  3861                           
  3862                           	psect	text21
  3863     0568                     __ptext21:	
  3864 ;; *************** function _key_pressed *****************
  3865 ;; Defined at:
  3866 ;;		line 86 in file "key.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;		None
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  state           1    0[BANK0 ] unsigned char 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      unsigned char 
  3873 ;; Registers used:
  3874 ;;		wreg, status,2
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3880 ;;      Params:         0       0       0       0       0
  3881 ;;      Locals:         0       1       0       0       0
  3882 ;;      Temps:          0       0       0       0       0
  3883 ;;      Totals:         0       1       0       0       0
  3884 ;;Total ram usage:        1 bytes
  3885 ;; Hardware stack levels used: 1
  3886 ;; Hardware stack levels required when called: 3
  3887 ;; This function calls:
  3888 ;;		Nothing
  3889 ;; This function is called by:
  3890 ;;		_main
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894     0568                     _key_pressed:	
  3895                           ;psect for function _key_pressed
  3896                           
  3897     0568                     l2249:	
  3898                           ;incstack = 0
  3899                           ; Regs used in _key_pressed: [wreg+status,2]
  3900                           
  3901                           
  3902                           ;key.c: 87: char state = 0;
  3903     0568  1283               	bcf	3,5	;RP0=0, select bank0
  3904     0569  1303               	bcf	3,6	;RP1=0, select bank0
  3905     056A  01A0               	clrf	key_pressed@state
  3906     056B                     l2251:
  3907                           
  3908                           ;key.c: 88: if (keyPressed == 1) {
  3909     056B  1C7C               	btfss	_keyPressed/(0+8),_keyPressed& (0+7)	;volatile
  3910     056C  2D6E               	goto	u1191
  3911     056D  2D6F               	goto	u1190
  3912     056E                     u1191:
  3913     056E  2D72               	goto	l2255
  3914     056F                     u1190:
  3915     056F                     l2253:
  3916                           
  3917                           ;key.c: 89: keyPressed = 0;
  3918     056F  107C               	bcf	_keyPressed/(0+8),_keyPressed& (0+7)	;volatile
  3919                           
  3920                           ;key.c: 90: state = 1;
  3921     0570  01A0               	clrf	key_pressed@state
  3922     0571  0AA0               	incf	key_pressed@state,f
  3923     0572                     l2255:
  3924                           
  3925                           ;key.c: 91: };key.c: 92: return state;
  3926     0572  0820               	movf	key_pressed@state,w
  3927     0573                     l245:
  3928     0573  0008               	return
  3929     0574                     __end_of_key_pressed:
  3930                           
  3931                           	psect	text22
  3932     0593                     __ptext22:	
  3933 ;; *************** function _key_init *****************
  3934 ;; Defined at:
  3935 ;;		line 26 in file "key.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;		None
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;		None
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  1    wreg      void 
  3942 ;; Registers used:
  3943 ;;		None
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3949 ;;      Params:         0       0       0       0       0
  3950 ;;      Locals:         0       0       0       0       0
  3951 ;;      Temps:          0       0       0       0       0
  3952 ;;      Totals:         0       0       0       0       0
  3953 ;;Total ram usage:        0 bytes
  3954 ;; Hardware stack levels used: 1
  3955 ;; Hardware stack levels required when called: 3
  3956 ;; This function calls:
  3957 ;;		Nothing
  3958 ;; This function is called by:
  3959 ;;		_main
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963     0593                     _key_init:	
  3964                           ;psect for function _key_init
  3965                           
  3966     0593                     l2217:	
  3967                           ;incstack = 0
  3968                           ; Regs used in _key_init: []
  3969                           
  3970                           
  3971                           ;key.c: 27: nRBPU = 0;
  3972     0593  1683               	bsf	3,5	;RP0=1, select bank1
  3973     0594  1303               	bcf	3,6	;RP1=0, select bank1
  3974     0595  1381               	bcf	1,7	;volatile
  3975                           
  3976                           ;key.c: 28: TRISB6 = 1;
  3977     0596  1706               	bsf	6,6	;volatile
  3978                           
  3979                           ;key.c: 30: WPUB6 = 1;
  3980     0597  1715               	bsf	21,6	;volatile
  3981                           
  3982                           ;key.c: 31: IOCB6 = 1;
  3983     0598  1716               	bsf	22,6	;volatile
  3984                           
  3985                           ;key.c: 32: RBIE = 1;
  3986     0599  158B               	bsf	11,3	;volatile
  3987     059A                     l229:
  3988     059A  0008               	return
  3989     059B                     __end_of_key_init:
  3990                           
  3991                           	psect	text23
  3992     0462                     __ptext23:	
  3993 ;; *************** function _delay_s *****************
  3994 ;; Defined at:
  3995 ;;		line 70 in file "delay.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  cnt             1    wreg     unsigned char 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  cnt             1    2[BANK0 ] unsigned char 
  4000 ;;  i               1    3[BANK0 ] unsigned char 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      void 
  4003 ;; Registers used:
  4004 ;;		wreg, status,2, status,0, pclath, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4010 ;;      Params:         0       0       0       0       0
  4011 ;;      Locals:         0       2       0       0       0
  4012 ;;      Temps:          0       0       0       0       0
  4013 ;;      Totals:         0       2       0       0       0
  4014 ;;Total ram usage:        2 bytes
  4015 ;; Hardware stack levels used: 1
  4016 ;; Hardware stack levels required when called: 4
  4017 ;; This function calls:
  4018 ;;		_delay_ms
  4019 ;; This function is called by:
  4020 ;;		_main
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024     0462                     _delay_s:	
  4025                           ;psect for function _delay_s
  4026                           
  4027                           
  4028                           ;incstack = 0
  4029                           ; Regs used in _delay_s: [wreg+status,2+status,0+pclath+cstack]
  4030                           ;delay_s@cnt stored from wreg
  4031     0462  1283               	bcf	3,5	;RP0=0, select bank0
  4032     0463  1303               	bcf	3,6	;RP1=0, select bank0
  4033     0464  00A2               	movwf	delay_s@cnt
  4034     0465                     l206:	
  4035                           ;delay.c: 71: unsigned char i;;delay.c: 72: do {
  4036                           
  4037     0465                     l2209:
  4038                           
  4039                           ;delay.c: 73: i = 4;
  4040     0465  3004               	movlw	4
  4041     0466  00A3               	movwf	delay_s@i
  4042     0467                     l2211:
  4043                           
  4044                           ;delay.c: 75: delay_ms(250);
  4045     0467  30FA               	movlw	250
  4046     0468  120A  118A  247D  120A  118A  	fcall	_delay_ms
  4047     046D  0064               	clrwdt	;# 
  4048     046E                     l2213:
  4049                           
  4050                           ;delay.c: 77: } while(--i);
  4051     046E  3001               	movlw	1
  4052     046F  1283               	bcf	3,5	;RP0=0, select bank0
  4053     0470  1303               	bcf	3,6	;RP1=0, select bank0
  4054     0471  02A3               	subwf	delay_s@i,f
  4055     0472  1D03               	btfss	3,2
  4056     0473  2C75               	goto	u1101
  4057     0474  2C76               	goto	u1100
  4058     0475                     u1101:
  4059     0475  2C67               	goto	l2211
  4060     0476                     u1100:
  4061     0476                     l2215:
  4062                           
  4063                           ;delay.c: 78: } while(--cnt);
  4064     0476  3001               	movlw	1
  4065     0477  02A2               	subwf	delay_s@cnt,f
  4066     0478  1D03               	btfss	3,2
  4067     0479  2C7B               	goto	u1111
  4068     047A  2C7C               	goto	u1110
  4069     047B                     u1111:
  4070     047B  2C65               	goto	l206
  4071     047C                     u1110:
  4072     047C                     l210:
  4073     047C  0008               	return
  4074     047D                     __end_of_delay_s:
  4075                           
  4076                           	psect	text24
  4077     047D                     __ptext24:	
  4078 ;; *************** function _delay_ms *****************
  4079 ;; Defined at:
  4080 ;;		line 37 in file "delay.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  cnt             1    wreg     unsigned char 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  cnt             1    0[BANK0 ] unsigned char 
  4085 ;;  i               1    1[BANK0 ] unsigned char 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		wreg, status,2, status,0
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4095 ;;      Params:         0       0       0       0       0
  4096 ;;      Locals:         0       2       0       0       0
  4097 ;;      Temps:          0       0       0       0       0
  4098 ;;      Totals:         0       2       0       0       0
  4099 ;;Total ram usage:        2 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; Hardware stack levels required when called: 3
  4102 ;; This function calls:
  4103 ;;		Nothing
  4104 ;; This function is called by:
  4105 ;;		_delay_s
  4106 ;;		_sensor_power
  4107 ;;		_welcome_message
  4108 ;;		_compass_get_heading
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112     047D                     _delay_ms:	
  4113                           ;psect for function _delay_ms
  4114                           
  4115                           
  4116                           ;incstack = 0
  4117                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
  4118                           ;delay_ms@cnt stored from wreg
  4119     047D  1283               	bcf	3,5	;RP0=0, select bank0
  4120     047E  1303               	bcf	3,6	;RP1=0, select bank0
  4121     047F  00A0               	movwf	delay_ms@cnt
  4122     0480                     l185:	
  4123                           ;delay.c: 38: unsigned char i;;delay.c: 39: do {
  4124                           
  4125     0480                     l2101:
  4126                           
  4127                           ;delay.c: 40: i = 4;
  4128     0480  3004               	movlw	4
  4129     0481  00A1               	movwf	delay_ms@i
  4130     0482                     l186:	
  4131                           ;delay.c: 41: do {
  4132                           
  4133                           
  4134                           ;delay.c: 42: { delayus_variable=(unsigned char)(250/1); asm("nop"); asm("nop"); } asm("
      +                          decfsz _delayus_variable,f"); asm("goto $ - 3");;
  4135     0482  30FA               	movlw	250
  4136     0483  00D5               	movwf	_delayus_variable
  4137     0484  0000               	nop	;# 
  4138     0485  0000               	nop	;# 
  4139     0486  0BD5               	decfsz	_delayus_variable,f	;# 
  4140     0487  2C7A               	goto	($+-3)	;# 
  4141     0488  0064               	clrwdt	;# 
  4142     0489                     l2103:
  4143                           
  4144                           ;delay.c: 44: } while(--i);
  4145     0489  3001               	movlw	1
  4146     048A  1283               	bcf	3,5	;RP0=0, select bank0
  4147     048B  1303               	bcf	3,6	;RP1=0, select bank0
  4148     048C  02A1               	subwf	delay_ms@i,f
  4149     048D  1D03               	btfss	3,2
  4150     048E  2C90               	goto	u891
  4151     048F  2C91               	goto	u890
  4152     0490                     u891:
  4153     0490  2C82               	goto	l186
  4154     0491                     u890:
  4155     0491                     l2105:
  4156                           
  4157                           ;delay.c: 45: } while(--cnt);
  4158     0491  3001               	movlw	1
  4159     0492  02A0               	subwf	delay_ms@cnt,f
  4160     0493  1D03               	btfss	3,2
  4161     0494  2C96               	goto	u901
  4162     0495  2C97               	goto	u900
  4163     0496                     u901:
  4164     0496  2C80               	goto	l185
  4165     0497                     u900:
  4166     0497                     l189:
  4167     0497  0008               	return
  4168     0498                     __end_of_delay_ms:
  4169                           
  4170                           	psect	text25
  4171     05A9                     __ptext25:	
  4172 ;; *************** function _buzzer_init *****************
  4173 ;; Defined at:
  4174 ;;		line 44 in file "main.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;		None
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;		None
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      void 
  4181 ;; Registers used:
  4182 ;;		None
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4188 ;;      Params:         0       0       0       0       0
  4189 ;;      Locals:         0       0       0       0       0
  4190 ;;      Temps:          0       0       0       0       0
  4191 ;;      Totals:         0       0       0       0       0
  4192 ;;Total ram usage:        0 bytes
  4193 ;; Hardware stack levels used: 1
  4194 ;; Hardware stack levels required when called: 3
  4195 ;; This function calls:
  4196 ;;		Nothing
  4197 ;; This function is called by:
  4198 ;;		_main
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202     05A9                     _buzzer_init:	
  4203                           ;psect for function _buzzer_init
  4204                           
  4205     05A9                     l2365:	
  4206                           ;incstack = 0
  4207                           ; Regs used in _buzzer_init: []
  4208                           
  4209                           
  4210                           ;main.c: 45: TRISB7 = 0;
  4211     05A9  1683               	bsf	3,5	;RP0=1, select bank1
  4212     05AA  1303               	bcf	3,6	;RP1=0, select bank1
  4213     05AB  1386               	bcf	6,7	;volatile
  4214                           
  4215                           ;main.c: 46: RB7 = 0;
  4216     05AC  1283               	bcf	3,5	;RP0=0, select bank0
  4217     05AD  1303               	bcf	3,6	;RP1=0, select bank0
  4218     05AE  1386               	bcf	6,7	;volatile
  4219     05AF                     l582:
  4220     05AF  0008               	return
  4221     05B0                     __end_of_buzzer_init:
  4222                           
  4223                           	psect	text26
  4224     054C                     __ptext26:	
  4225 ;; *************** function _beep *****************
  4226 ;; Defined at:
  4227 ;;		line 79 in file "main.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;		None
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;		None
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		wreg, status,2, status,0, pclath, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4241 ;;      Params:         0       0       0       0       0
  4242 ;;      Locals:         0       0       0       0       0
  4243 ;;      Temps:          0       0       0       0       0
  4244 ;;      Totals:         0       0       0       0       0
  4245 ;;Total ram usage:        0 bytes
  4246 ;; Hardware stack levels used: 1
  4247 ;; Hardware stack levels required when called: 4
  4248 ;; This function calls:
  4249 ;;		_delay_big_ms
  4250 ;; This function is called by:
  4251 ;;		_main
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255     054C                     _beep:	
  4256                           ;psect for function _beep
  4257                           
  4258     054C                     l2367:	
  4259                           ;incstack = 0
  4260                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  4261                           
  4262                           
  4263                           ;main.c: 80: RB7 = 1;
  4264     054C  1283               	bcf	3,5	;RP0=0, select bank0
  4265     054D  1303               	bcf	3,6	;RP1=0, select bank0
  4266     054E  1786               	bsf	6,7	;volatile
  4267     054F                     l2369:
  4268                           
  4269                           ;main.c: 81: delay_big_ms(300);
  4270     054F  302C               	movlw	44
  4271     0550  00A0               	movwf	delay_big_ms@cnt
  4272     0551  3001               	movlw	1
  4273     0552  00A1               	movwf	delay_big_ms@cnt+1
  4274     0553  120A  118A  2427  120A  118A  	fcall	_delay_big_ms
  4275     0558                     l2371:
  4276                           
  4277                           ;main.c: 82: RB7 = 0;
  4278     0558  1283               	bcf	3,5	;RP0=0, select bank0
  4279     0559  1303               	bcf	3,6	;RP1=0, select bank0
  4280     055A  1386               	bcf	6,7	;volatile
  4281     055B                     l595:
  4282     055B  0008               	return
  4283     055C                     __end_of_beep:
  4284                           
  4285                           	psect	text27
  4286     0427                     __ptext27:	
  4287 ;; *************** function _delay_big_ms *****************
  4288 ;; Defined at:
  4289 ;;		line 59 in file "delay.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  cnt             2    0[BANK0 ] unsigned int 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  i               1    2[BANK0 ] unsigned char 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      void 
  4296 ;; Registers used:
  4297 ;;		wreg, status,2, status,0
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4303 ;;      Params:         0       2       0       0       0
  4304 ;;      Locals:         0       1       0       0       0
  4305 ;;      Temps:          0       0       0       0       0
  4306 ;;      Totals:         0       3       0       0       0
  4307 ;;Total ram usage:        3 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; Hardware stack levels required when called: 3
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_beep
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317     0427                     _delay_big_ms:	
  4318                           ;psect for function _delay_big_ms
  4319                           
  4320     0427                     l199:	
  4321                           ;incstack = 0
  4322                           ; Regs used in _delay_big_ms: [wreg+status,2+status,0]
  4323                           ;delay.c: 60: unsigned char i;;delay.c: 61: do {
  4324                           
  4325     0427                     l2107:
  4326                           
  4327                           ;delay.c: 62: i = 4;
  4328     0427  3004               	movlw	4
  4329     0428  1283               	bcf	3,5	;RP0=0, select bank0
  4330     0429  1303               	bcf	3,6	;RP1=0, select bank0
  4331     042A  00A2               	movwf	delay_big_ms@i
  4332     042B                     l200:	
  4333                           ;delay.c: 63: do {
  4334                           
  4335                           
  4336                           ;delay.c: 64: { delayus_variable=(unsigned char)(250/1); asm("nop"); asm("nop"); } asm("
      +                          decfsz _delayus_variable,f"); asm("goto $ - 3");;
  4337     042B  30FA               	movlw	250
  4338     042C  00D5               	movwf	_delayus_variable
  4339     042D  0000               	nop	;# 
  4340     042E  0000               	nop	;# 
  4341     042F  0BD5               	decfsz	_delayus_variable,f	;# 
  4342     0430  2C24               	goto	($+-3)	;# 
  4343     0431  0064               	clrwdt	;# 
  4344     0432                     l2109:
  4345                           
  4346                           ;delay.c: 66: } while(--i);
  4347     0432  3001               	movlw	1
  4348     0433  1283               	bcf	3,5	;RP0=0, select bank0
  4349     0434  1303               	bcf	3,6	;RP1=0, select bank0
  4350     0435  02A2               	subwf	delay_big_ms@i,f
  4351     0436  1D03               	btfss	3,2
  4352     0437  2C39               	goto	u911
  4353     0438  2C3A               	goto	u910
  4354     0439                     u911:
  4355     0439  2C2B               	goto	l200
  4356     043A                     u910:
  4357     043A                     l2111:
  4358                           
  4359                           ;delay.c: 67: } while(--cnt);
  4360     043A  3001               	movlw	1
  4361     043B  02A0               	subwf	delay_big_ms@cnt,f
  4362     043C  3000               	movlw	0
  4363     043D  1C03               	skipc
  4364     043E  03A1               	decf	delay_big_ms@cnt+1,f
  4365     043F  02A1               	subwf	delay_big_ms@cnt+1,f
  4366     0440  0820               	movf	delay_big_ms@cnt,w
  4367     0441  0421               	iorwf	delay_big_ms@cnt+1,w
  4368     0442  1D03               	btfss	3,2
  4369     0443  2C45               	goto	u921
  4370     0444  2C46               	goto	u920
  4371     0445                     u921:
  4372     0445  2C27               	goto	l199
  4373     0446                     u920:
  4374     0446                     l203:
  4375     0446  0008               	return
  4376     0447                     __end_of_delay_big_ms:
  4377                           
  4378                           	psect	text28
  4379     022F                     __ptext28:	
  4380 ;; *************** function _isr *****************
  4381 ;; Defined at:
  4382 ;;		line 50 in file "main.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;		None
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  portB           1   11[COMMON] unsigned char 
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4396 ;;      Params:         0       0       0       0       0
  4397 ;;      Locals:         1       0       0       0       0
  4398 ;;      Temps:          3       0       0       0       0
  4399 ;;      Totals:         4       0       0       0       0
  4400 ;;Total ram usage:        4 bytes
  4401 ;; Hardware stack levels used: 1
  4402 ;; Hardware stack levels required when called: 2
  4403 ;; This function calls:
  4404 ;;		_key_debounce
  4405 ;;		_key_read
  4406 ;;		_sensorNear_read
  4407 ;; This function is called by:
  4408 ;;		Interrupt level 1
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412     022F                     _isr:	
  4413                           ;psect for function _isr
  4414                           
  4415     022F                     i1l2723:
  4416                           
  4417                           ;main.c: 56: if (TMR0IE && TMR0IF) {
  4418     022F  1E8B               	btfss	11,5	;volatile
  4419     0230  2A32               	goto	u156_21
  4420     0231  2A33               	goto	u156_20
  4421     0232                     u156_21:
  4422     0232  2A71               	goto	i1l2741
  4423     0233                     u156_20:
  4424     0233                     i1l2725:
  4425     0233  1D0B               	btfss	11,2	;volatile
  4426     0234  2A36               	goto	u157_21
  4427     0235  2A37               	goto	u157_20
  4428     0236                     u157_21:
  4429     0236  2A71               	goto	i1l2741
  4430     0237                     u157_20:
  4431     0237                     i1l2727:
  4432                           
  4433                           ;main.c: 57: key_debounce(2);
  4434     0237  3002               	movlw	2
  4435     0238  00F0               	movwf	key_debounce@cycles
  4436     0239  3000               	movlw	0
  4437     023A  00F1               	movwf	key_debounce@cycles+1
  4438     023B  120A  118A  24E0  120A  118A  	fcall	_key_debounce
  4439     0240                     i1l2729:
  4440                           
  4441                           ;main.c: 59: static int tick = 0;;main.c: 60: if( ++tick >=50){
  4442     0240  3001               	movlw	1
  4443     0241  1283               	bcf	3,5	;RP0=0, select bank0
  4444     0242  1303               	bcf	3,6	;RP1=0, select bank0
  4445     0243  07C8               	addwf	isr@tick,f
  4446     0244  1803               	skipnc
  4447     0245  0AC9               	incf	isr@tick+1,f
  4448     0246  3000               	movlw	0
  4449     0247  07C9               	addwf	isr@tick+1,f
  4450     0248  0849               	movf	isr@tick+1,w
  4451     0249  3A80               	xorlw	128
  4452     024A  00FF               	movwf	btemp+1
  4453     024B  3080               	movlw	128
  4454     024C  027F               	subwf	btemp+1,w
  4455     024D  1D03               	skipz
  4456     024E  2A51               	goto	u158_25
  4457     024F  3032               	movlw	50
  4458     0250  0248               	subwf	isr@tick,w
  4459     0251                     u158_25:
  4460     0251  1C03               	skipc
  4461     0252  2A54               	goto	u158_21
  4462     0253  2A55               	goto	u158_20
  4463     0254                     u158_21:
  4464     0254  2A6C               	goto	i1l2737
  4465     0255                     u158_20:
  4466     0255                     i1l2731:
  4467                           
  4468                           ;main.c: 61: tick = 0;
  4469     0255  1283               	bcf	3,5	;RP0=0, select bank0
  4470     0256  1303               	bcf	3,6	;RP1=0, select bank0
  4471     0257  01C8               	clrf	isr@tick
  4472     0258  01C9               	clrf	isr@tick+1
  4473     0259                     i1l2733:
  4474                           
  4475                           ;main.c: 62: adc_result += sensorNear_read();
  4476     0259  120A  118A  2574  120A  118A  	fcall	_sensorNear_read
  4477     025E  0876               	movf	?_sensorNear_read,w
  4478     025F  1283               	bcf	3,5	;RP0=0, select bank0
  4479     0260  1303               	bcf	3,6	;RP1=0, select bank0
  4480     0261  07CC               	addwf	_adc_result,f	;volatile
  4481     0262  1803               	skipnc
  4482     0263  0ACD               	incf	_adc_result+1,f	;volatile
  4483     0264  0877               	movf	?_sensorNear_read+1,w
  4484     0265  07CD               	addwf	_adc_result+1,f	;volatile
  4485     0266                     i1l2735:
  4486                           
  4487                           ;main.c: 63: n_read ++;
  4488     0266  3001               	movlw	1
  4489     0267  07CA               	addwf	_n_read,f	;volatile
  4490     0268  1803               	skipnc
  4491     0269  0ACB               	incf	_n_read+1,f	;volatile
  4492     026A  3000               	movlw	0
  4493     026B  07CB               	addwf	_n_read+1,f	;volatile
  4494     026C                     i1l2737:
  4495                           
  4496                           ;main.c: 64: };main.c: 65: TMR0 = 0xff - 98;
  4497     026C  309D               	movlw	157
  4498     026D  1283               	bcf	3,5	;RP0=0, select bank0
  4499     026E  1303               	bcf	3,6	;RP1=0, select bank0
  4500     026F  0081               	movwf	1	;volatile
  4501     0270                     i1l2739:
  4502                           
  4503                           ;main.c: 66: TMR0IF = 0;
  4504     0270  110B               	bcf	11,2	;volatile
  4505     0271                     i1l2741:
  4506                           
  4507                           ;main.c: 67: };main.c: 69: if (RBIE && RBIF) {
  4508     0271  1D8B               	btfss	11,3	;volatile
  4509     0272  2A74               	goto	u159_21
  4510     0273  2A75               	goto	u159_20
  4511     0274                     u159_21:
  4512     0274  2A84               	goto	i1l592
  4513     0275                     u159_20:
  4514     0275                     i1l2743:
  4515     0275  1C0B               	btfss	11,0	;volatile
  4516     0276  2A78               	goto	u160_21
  4517     0277  2A79               	goto	u160_20
  4518     0278                     u160_21:
  4519     0278  2A84               	goto	i1l592
  4520     0279                     u160_20:
  4521     0279                     i1l2745:
  4522                           
  4523                           ;main.c: 70: char portB = PORTB;
  4524     0279  1283               	bcf	3,5	;RP0=0, select bank0
  4525     027A  1303               	bcf	3,6	;RP1=0, select bank0
  4526     027B  0806               	movf	6,w	;volatile
  4527     027C  00FB               	movwf	isr@portB
  4528     027D                     i1l2747:
  4529                           
  4530                           ;main.c: 71: key_read(portB);
  4531     027D  087B               	movf	isr@portB,w
  4532     027E  120A  118A  23A0  120A  118A  	fcall	_key_read
  4533     0283                     i1l2749:
  4534                           
  4535                           ;main.c: 72: RBIF = 0;
  4536     0283  100B               	bcf	11,0	;volatile
  4537     0284                     i1l592:
  4538     0284  087A               	movf	??_isr+2,w
  4539     0285  00FF               	movwf	btemp+1
  4540     0286  0879               	movf	??_isr+1,w
  4541     0287  008A               	movwf	10
  4542     0288  0E78               	swapf	??_isr,w
  4543     0289  0083               	movwf	3
  4544     028A  0EFE               	swapf	btemp,f
  4545     028B  0E7E               	swapf	btemp,w
  4546     028C  0009               	retfie
  4547     028D                     __end_of_isr:
  4548                           
  4549                           	psect	intentry
  4550     0004                     __pintentry:	
  4551                           ;incstack = 0
  4552                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4553                           
  4554     0004                     interrupt_function:
  4555     007E                     saved_w	set	btemp
  4556     0004  00FE               	movwf	btemp
  4557     0005  0E03               	swapf	3,w
  4558     0006  00F8               	movwf	??_isr
  4559     0007  080A               	movf	10,w
  4560     0008  00F9               	movwf	??_isr+1
  4561     0009  087F               	movf	btemp+1,w
  4562     000A  00FA               	movwf	??_isr+2
  4563     000B  120A  118A  2A2F   	ljmp	_isr
  4564                           
  4565                           	psect	text29
  4566     0574                     __ptext29:	
  4567 ;; *************** function _sensorNear_read *****************
  4568 ;; Defined at:
  4569 ;;		line 75 in file "sensor.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;		None
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;		None
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  2    6[COMMON] int 
  4576 ;; Registers used:
  4577 ;;		wreg, status,2, status,0, pclath, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4583 ;;      Params:         2       0       0       0       0
  4584 ;;      Locals:         0       0       0       0       0
  4585 ;;      Temps:          0       0       0       0       0
  4586 ;;      Totals:         2       0       0       0       0
  4587 ;;Total ram usage:        2 bytes
  4588 ;; Hardware stack levels used: 1
  4589 ;; Hardware stack levels required when called: 1
  4590 ;; This function calls:
  4591 ;;		_adc_read
  4592 ;; This function is called by:
  4593 ;;		_isr
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597     0574                     _sensorNear_read:	
  4598                           ;psect for function _sensorNear_read
  4599                           
  4600     0574                     i1l2285:	
  4601                           ;incstack = 0
  4602                           ; Regs used in _sensorNear_read: [wreg+status,2+status,0+pclath+cstack]
  4603                           
  4604                           
  4605                           ;sensor.c: 76: return (adc_read(0));
  4606     0574  3000               	movlw	0
  4607     0575  120A  118A  2364  120A  118A  	fcall	_adc_read
  4608     057A  0871               	movf	?_adc_read+1,w
  4609     057B  00F7               	movwf	?_sensorNear_read+1
  4610     057C  0870               	movf	?_adc_read,w
  4611     057D  00F6               	movwf	?_sensorNear_read
  4612     057E                     i1l355:
  4613     057E  0008               	return
  4614     057F                     __end_of_sensorNear_read:
  4615                           
  4616                           	psect	text30
  4617     0364                     __ptext30:	
  4618 ;; *************** function _adc_read *****************
  4619 ;; Defined at:
  4620 ;;		line 84 in file "adc.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;  adc_channel     1    wreg     unsigned char 
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;  adc_channel     1    5[COMMON] unsigned char 
  4625 ;;  adc_result      2    3[COMMON] struct wordtype
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  2    0[COMMON] unsigned int 
  4628 ;; Registers used:
  4629 ;;		wreg, status,2, status,0
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4635 ;;      Params:         2       0       0       0       0
  4636 ;;      Locals:         3       0       0       0       0
  4637 ;;      Temps:          1       0       0       0       0
  4638 ;;      Totals:         6       0       0       0       0
  4639 ;;Total ram usage:        6 bytes
  4640 ;; Hardware stack levels used: 1
  4641 ;; This function calls:
  4642 ;;		Nothing
  4643 ;; This function is called by:
  4644 ;;		_sensorNear_read
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648     0364                     _adc_read:	
  4649                           ;psect for function _adc_read
  4650                           
  4651                           
  4652                           ;incstack = 0
  4653                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  4654                           ;adc_read@adc_channel stored from wreg
  4655     0364  00F5               	movwf	adc_read@adc_channel
  4656     0365                     i1l2073:
  4657                           
  4658                           ;adc.c: 86: union wordtype adc_result;;adc.c: 89: if ((adc_channel > 4 && adc_channel < 
      +                          8) || adc_channel > 13) return (0);
  4659     0365  3005               	movlw	5
  4660     0366  0275               	subwf	adc_read@adc_channel,w
  4661     0367  1C03               	skipc
  4662     0368  2B6A               	goto	u85_21
  4663     0369  2B6B               	goto	u85_20
  4664     036A                     u85_21:
  4665     036A  2B71               	goto	i1l2077
  4666     036B                     u85_20:
  4667     036B                     i1l2075:
  4668     036B  3008               	movlw	8
  4669     036C  0275               	subwf	adc_read@adc_channel,w
  4670     036D  1C03               	skipc
  4671     036E  2B70               	goto	u86_21
  4672     036F  2B71               	goto	u86_20
  4673     0370                     u86_21:
  4674     0370  2B77               	goto	i1l2079
  4675     0371                     u86_20:
  4676     0371                     i1l2077:
  4677     0371  300E               	movlw	14
  4678     0372  0275               	subwf	adc_read@adc_channel,w
  4679     0373  1C03               	skipc
  4680     0374  2B76               	goto	u87_21
  4681     0375  2B77               	goto	u87_20
  4682     0376                     u87_21:
  4683     0376  2B7A               	goto	i1l2083
  4684     0377                     u87_20:
  4685     0377                     i1l2079:
  4686     0377  01F0               	clrf	?_adc_read
  4687     0378  01F1               	clrf	?_adc_read+1
  4688     0379  2B9F               	goto	i1l83
  4689     037A                     i1l2083:
  4690                           
  4691                           ;adc.c: 92: ADCON0bits.CHS = adc_channel;
  4692     037A  0875               	movf	adc_read@adc_channel,w
  4693     037B  00F2               	movwf	??_adc_read
  4694     037C  0DF2               	rlf	??_adc_read,f
  4695     037D  0DF2               	rlf	??_adc_read,f
  4696     037E  1283               	bcf	3,5	;RP0=0, select bank0
  4697     037F  1303               	bcf	3,6	;RP1=0, select bank0
  4698     0380  081F               	movf	31,w	;volatile
  4699     0381  0672               	xorwf	??_adc_read,w
  4700     0382  39C3               	andlw	-61
  4701     0383  0672               	xorwf	??_adc_read,w
  4702     0384  009F               	movwf	31	;volatile
  4703     0385                     i1l2085:
  4704                           
  4705                           ;adc.c: 93: ADON = 1;
  4706     0385  141F               	bsf	31,0	;volatile
  4707     0386                     i1l2087:
  4708                           
  4709                           ;adc.c: 94: ADIF = 0;
  4710     0386  130C               	bcf	12,6	;volatile
  4711     0387                     i1l2089:
  4712                           
  4713                           ;adc.c: 95: ADRESL = 0;
  4714     0387  1683               	bsf	3,5	;RP0=1, select bank1
  4715     0388  1303               	bcf	3,6	;RP1=0, select bank1
  4716     0389  019E               	clrf	30	;volatile
  4717     038A                     i1l2091:
  4718                           
  4719                           ;adc.c: 96: ADRESH = 0;
  4720     038A  1283               	bcf	3,5	;RP0=0, select bank0
  4721     038B  1303               	bcf	3,6	;RP1=0, select bank0
  4722     038C  019E               	clrf	30	;volatile
  4723     038D                     i1l2093:
  4724                           
  4725                           ;adc.c: 98: GO = 1;
  4726     038D  149F               	bsf	31,1	;volatile
  4727     038E                     i1l84:	
  4728                           ;adc.c: 99: while(!ADIF) continue;
  4729                           
  4730     038E  1F0C               	btfss	12,6	;volatile
  4731     038F  2B91               	goto	u88_21
  4732     0390  2B92               	goto	u88_20
  4733     0391                     u88_21:
  4734     0391  2B8E               	goto	i1l84
  4735     0392                     u88_20:
  4736     0392                     i1l2095:
  4737                           
  4738                           ;adc.c: 100: adc_result.byte.low = ADRESL;
  4739     0392  1683               	bsf	3,5	;RP0=1, select bank1
  4740     0393  1303               	bcf	3,6	;RP1=0, select bank1
  4741     0394  081E               	movf	30,w	;volatile
  4742     0395  00F3               	movwf	adc_read@adc_result
  4743                           
  4744                           ;adc.c: 101: adc_result.byte.high = ADRESH;
  4745     0396  1283               	bcf	3,5	;RP0=0, select bank0
  4746     0397  1303               	bcf	3,6	;RP1=0, select bank0
  4747     0398  081E               	movf	30,w	;volatile
  4748     0399  00F4               	movwf	adc_read@adc_result+1
  4749     039A                     i1l2097:
  4750                           
  4751                           ;adc.c: 102: ADON = 0;
  4752     039A  101F               	bcf	31,0	;volatile
  4753                           
  4754                           ;adc.c: 103: return (adc_result.word);
  4755     039B  0874               	movf	adc_read@adc_result+1,w
  4756     039C  00F1               	movwf	?_adc_read+1
  4757     039D  0873               	movf	adc_read@adc_result,w
  4758     039E  00F0               	movwf	?_adc_read
  4759     039F                     i1l83:
  4760     039F  0008               	return
  4761     03A0                     __end_of_adc_read:
  4762                           
  4763                           	psect	text31
  4764     03A0                     __ptext31:	
  4765 ;; *************** function _key_read *****************
  4766 ;; Defined at:
  4767 ;;		line 58 in file "key.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  port            1    wreg     unsigned char 
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;  port            1    1[COMMON] unsigned char 
  4772 ;;  key             1    2[COMMON] unsigned char 
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  1    wreg      void 
  4775 ;; Registers used:
  4776 ;;		wreg, status,2, status,0
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4782 ;;      Params:         0       0       0       0       0
  4783 ;;      Locals:         2       0       0       0       0
  4784 ;;      Temps:          1       0       0       0       0
  4785 ;;      Totals:         3       0       0       0       0
  4786 ;;Total ram usage:        3 bytes
  4787 ;; Hardware stack levels used: 1
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_isr
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795     03A0                     _key_read:	
  4796                           ;psect for function _key_read
  4797                           
  4798                           
  4799                           ;incstack = 0
  4800                           ; Regs used in _key_read: [wreg+status,2+status,0]
  4801                           ;key_read@port stored from wreg
  4802     03A0  00F1               	movwf	key_read@port
  4803     03A1                     i1l2223:
  4804                           
  4805                           ;key.c: 59: static char key_old = 1;;key.c: 62: char key = (port & 0b01000000) >> 6;
  4806     03A1  0871               	movf	key_read@port,w
  4807     03A2  00F0               	movwf	??_key_read
  4808     03A3  3006               	movlw	6
  4809     03A4                     u113_25:
  4810     03A4  1003               	clrc
  4811     03A5  0CF0               	rrf	??_key_read,f
  4812     03A6  3EFF               	addlw	-1
  4813     03A7  1D03               	skipz
  4814     03A8  2BA4               	goto	u113_25
  4815     03A9  0870               	movf	??_key_read,w
  4816     03AA  3901               	andlw	1
  4817     03AB  00F2               	movwf	key_read@key
  4818                           
  4819                           ;key.c: 63: if (key == 0 && key_old == 1) {
  4820     03AC  0872               	movf	key_read@key,w
  4821     03AD  1D03               	btfss	3,2
  4822     03AE  2BB0               	goto	u114_21
  4823     03AF  2BB1               	goto	u114_20
  4824     03B0                     u114_21:
  4825     03B0  2BC3               	goto	i1l2237
  4826     03B1                     u114_20:
  4827     03B1                     i1l2225:
  4828     03B1  1283               	bcf	3,5	;RP0=0, select bank0
  4829     03B2  1303               	bcf	3,6	;RP1=0, select bank0
  4830     03B3  0356               	decf	key_read@key_old,w
  4831     03B4  1D03               	btfss	3,2
  4832     03B5  2BB7               	goto	u115_21
  4833     03B6  2BB8               	goto	u115_20
  4834     03B7                     u115_21:
  4835     03B7  2BC3               	goto	i1l2237
  4836     03B8                     u115_20:
  4837     03B8                     i1l2227:
  4838                           
  4839                           ;key.c: 64: if (!keyStateChanged) {
  4840     03B8  0854               	movf	_keyStateChanged,w	;volatile
  4841     03B9  1D03               	btfss	3,2
  4842     03BA  2BBC               	goto	u116_21
  4843     03BB  2BBD               	goto	u116_20
  4844     03BC                     u116_21:
  4845     03BC  2BC3               	goto	i1l2237
  4846     03BD                     u116_20:
  4847     03BD                     i1l2229:
  4848                           
  4849                           ;key.c: 65: keyPressed = 1;
  4850     03BD  147C               	bsf	_keyPressed/(0+8),_keyPressed& (0+7)	;volatile
  4851     03BE                     i1l2231:
  4852                           
  4853                           ;key.c: 66: keyStateChanged = 1;
  4854     03BE  3001               	movlw	1
  4855     03BF  00D4               	movwf	_keyStateChanged	;volatile
  4856     03C0                     i1l2233:
  4857                           
  4858                           ;key.c: 67: debounce = 0;
  4859     03C0  01FD               	clrf	_debounce	;volatile
  4860     03C1                     i1l2235:
  4861                           
  4862                           ;key.c: 68: key_old = key;
  4863     03C1  0872               	movf	key_read@key,w
  4864     03C2  00D6               	movwf	key_read@key_old
  4865     03C3                     i1l2237:
  4866                           
  4867                           ;key.c: 69: };key.c: 70: };key.c: 71: if (key == 1 && key_old == 0) {
  4868     03C3  0372               	decf	key_read@key,w
  4869     03C4  1D03               	btfss	3,2
  4870     03C5  2BC7               	goto	u117_21
  4871     03C6  2BC8               	goto	u117_20
  4872     03C7                     u117_21:
  4873     03C7  2BD5               	goto	i1l241
  4874     03C8                     u117_20:
  4875     03C8                     i1l2239:
  4876     03C8  1283               	bcf	3,5	;RP0=0, select bank0
  4877     03C9  1303               	bcf	3,6	;RP1=0, select bank0
  4878     03CA  0856               	movf	key_read@key_old,w
  4879     03CB  1D03               	btfss	3,2
  4880     03CC  2BCE               	goto	u118_21
  4881     03CD  2BCF               	goto	u118_20
  4882     03CE                     u118_21:
  4883     03CE  2BD5               	goto	i1l241
  4884     03CF                     u118_20:
  4885     03CF                     i1l2241:
  4886                           
  4887                           ;key.c: 72: keyPressed = 0;
  4888     03CF  107C               	bcf	_keyPressed/(0+8),_keyPressed& (0+7)	;volatile
  4889     03D0                     i1l2243:
  4890                           
  4891                           ;key.c: 73: keyStateChanged = 1;
  4892     03D0  3001               	movlw	1
  4893     03D1  00D4               	movwf	_keyStateChanged	;volatile
  4894     03D2                     i1l2245:
  4895                           
  4896                           ;key.c: 74: debounce = 0;
  4897     03D2  01FD               	clrf	_debounce	;volatile
  4898     03D3                     i1l2247:
  4899                           
  4900                           ;key.c: 75: key_old = key;
  4901     03D3  0872               	movf	key_read@key,w
  4902     03D4  00D6               	movwf	key_read@key_old
  4903     03D5                     i1l241:
  4904     03D5  0008               	return
  4905     03D6                     __end_of_key_read:
  4906                           
  4907                           	psect	text32
  4908     04E0                     __ptext32:	
  4909 ;; *************** function _key_debounce *****************
  4910 ;; Defined at:
  4911 ;;		line 45 in file "key.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;  cycles          2    0[COMMON] int 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;		None
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  1    wreg      void 
  4918 ;; Registers used:
  4919 ;;		wreg, status,2, status,0
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4925 ;;      Params:         2       0       0       0       0
  4926 ;;      Locals:         0       0       0       0       0
  4927 ;;      Temps:          1       0       0       0       0
  4928 ;;      Totals:         3       0       0       0       0
  4929 ;;Total ram usage:        3 bytes
  4930 ;; Hardware stack levels used: 1
  4931 ;; This function calls:
  4932 ;;		Nothing
  4933 ;; This function is called by:
  4934 ;;		_isr
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938     04E0                     _key_debounce:	
  4939                           ;psect for function _key_debounce
  4940                           
  4941     04E0                     i1l2219:	
  4942                           ;incstack = 0
  4943                           ; Regs used in _key_debounce: [wreg+status,2+status,0]
  4944                           
  4945                           
  4946                           ;key.c: 46: if (++debounce >= cycles) {
  4947     04E0  3001               	movlw	1
  4948     04E1  00F2               	movwf	??_key_debounce
  4949     04E2  0872               	movf	??_key_debounce,w
  4950     04E3  07FD               	addwf	_debounce,f	;volatile
  4951     04E4  0871               	movf	key_debounce@cycles+1,w
  4952     04E5  3A80               	xorlw	128
  4953     04E6  3C80               	sublw	128
  4954     04E7  1D03               	skipz
  4955     04E8  2CEB               	goto	u112_25
  4956     04E9  0870               	movf	key_debounce@cycles,w
  4957     04EA  027D               	subwf	_debounce,w	;volatile
  4958     04EB                     u112_25:
  4959     04EB  1C03               	skipc
  4960     04EC  2CEE               	goto	u112_21
  4961     04ED  2CEF               	goto	u112_20
  4962     04EE                     u112_21:
  4963     04EE  2CF3               	goto	i1l233
  4964     04EF                     u112_20:
  4965     04EF                     i1l2221:
  4966                           
  4967                           ;key.c: 47: debounce = 0;
  4968     04EF  01FD               	clrf	_debounce	;volatile
  4969                           
  4970                           ;key.c: 48: keyStateChanged = 0;
  4971     04F0  1283               	bcf	3,5	;RP0=0, select bank0
  4972     04F1  1303               	bcf	3,6	;RP1=0, select bank0
  4973     04F2  01D4               	clrf	_keyStateChanged	;volatile
  4974     04F3                     i1l233:
  4975     04F3  0008               	return
  4976     04F4                     __end_of_key_debounce:
  4977     007E                     btemp	set	126	;btemp
  4978     007E                     wtemp0	set	126
  4979                           
  4980                           	psect	idloc
  4981                           
  4982                           ;Config register IDLOC0 @ 0x2000
  4983                           ;	unspecified, using default values
  4984     2000                     	org	8192
  4985     2000  3FFF               	dw	16383
  4986                           
  4987                           ;Config register IDLOC1 @ 0x2001
  4988                           ;	unspecified, using default values
  4989     2001                     	org	8193
  4990     2001  3FFF               	dw	16383
  4991                           
  4992                           ;Config register IDLOC2 @ 0x2002
  4993                           ;	unspecified, using default values
  4994     2002                     	org	8194
  4995     2002  3FFF               	dw	16383
  4996                           
  4997                           ;Config register IDLOC3 @ 0x2003
  4998                           ;	unspecified, using default values
  4999     2003                     	org	8195
  5000     2003  3FFF               	dw	16383
  5001                           
  5002                           	psect	config
  5003                           
  5004                           ;Config register CONFIG1 @ 0x2007
  5005                           ;	Oscillator Selection bits
  5006                           ;	FOSC = EC, EC: I/O function on RA6/OSC2/CLKOUT pin, CLKIN on RA7/OSC1/CLKIN
  5007                           ;	Watchdog Timer Enable bit
  5008                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5009                           ;	Power-up Timer Enable bit
  5010                           ;	PWRTE = ON, PWRT enabled
  5011                           ;	RE3/MCLR pin function select bit
  5012                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  5013                           ;	Code Protection bit
  5014                           ;	CP = OFF, Program memory code protection is disabled
  5015                           ;	Data Code Protection bit
  5016                           ;	CPD = OFF, Data memory code protection is disabled
  5017                           ;	Brown Out Reset Selection bits
  5018                           ;	BOREN = OFF, BOR disabled
  5019                           ;	Internal External Switchover bit
  5020                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5021                           ;	Fail-Safe Clock Monitor Enabled bit
  5022                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5023                           ;	Low Voltage Programming Enable bit
  5024                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5025                           ;	In-Circuit Debugger Mode bit
  5026                           ;	DEBUG = 0x1, unprogrammed default
  5027     2007                     	org	8199
  5028     2007  2CE3               	dw	11491
  5029                           
  5030                           ;Config register CONFIG2 @ 0x2008
  5031                           ;	Brown-out Reset Selection bit
  5032                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5033                           ;	Flash Program Memory Self Write Enable bits
  5034                           ;	WRT = OFF, Write protection off
  5035     2008                     	org	8200
  5036     2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    54
    Data        1
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     40      55
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> main@result(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 10
		 -> main@result(BANK0[10]), STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_sensorNear_read
    _sensorNear_read->_adc_read

Critical Paths under _main in BANK0

    _main->_sprintf
    _welcome_message->_lcd_puts
    _lcd_puts->_lcd_putchar
    _lcd_putchar->_spi_send_command
    _lcd_goto->_spi_send_command
    _spi_send_data->_spi_exchange
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _sensor_power->_delay_ms
    _sensor_init->_adc_init
    _lcd_show_cursor->_spi_send_command
    _lcd_clear->_spi_send_command
    _spi_send_command->_spi_exchange
    _delay_s->_delay_ms
    _beep->_delay_big_ms

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    3503
                                             27 BANK0     13    13      0
                            ___lwdiv
                               _beep
                        _buzzer_init
                            _delay_s
                           _key_init
                        _key_pressed
                          _lcd_clear
                           _lcd_init
                           _lcd_puts
                    _lcd_show_cursor
                           _led_init
                        _sensor_init
                       _sensor_power
                        _serial_init
                           _spi_init
                            _sprintf
                            _t0_init
                    _welcome_message
 ---------------------------------------------------------------------------------
 (1) _welcome_message                                      0     0      0     586
                           _delay_ms
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             2     0      2     407
                                              5 BANK0      2     0      2
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (3) _lcd_putchar                                          1     1      0     134
                                              4 BANK0      1     1      0
                   _spi_send_command
                      _spi_send_data
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             1     1      0     134
                                              4 BANK0      1     1      0
                   _spi_send_command
                      _spi_send_data
 ---------------------------------------------------------------------------------
 (4) _spi_send_data                                        1     1      0      44
                                              1 BANK0      1     1      0
                       _spi_exchange
 ---------------------------------------------------------------------------------
 (1) _t0_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1363
                                             14 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sensor_power                                         1     1      0      67
                                              2 BANK0      1     1      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _sensor_init                                          1     1      0      44
                                              2 BANK0      1     1      0
                           _adc_init
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _led_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_show_cursor                                      2     0      2     166
                                              4 BANK0      2     0      2
                   _spi_send_command
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0      68
                   _spi_send_command
 ---------------------------------------------------------------------------------
 (4) _spi_send_command                                     3     3      0      68
                                              1 BANK0      3     3      0
                       _spi_exchange
 ---------------------------------------------------------------------------------
 (5) _spi_exchange                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _key_pressed                                          1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _key_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              2     2      0      90
                                              2 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     2      0      45
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _buzzer_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _beep                                                 0     0      0     121
                       _delay_big_ms
 ---------------------------------------------------------------------------------
 (2) _delay_big_ms                                         3     1      2     121
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  4     4      0     367
                                              8 COMMON     4     4      0
                       _key_debounce
                           _key_read
                    _sensorNear_read
 ---------------------------------------------------------------------------------
 (7) _sensorNear_read                                      2     0      2     135
                                              6 COMMON     2     0      2
                           _adc_read
 ---------------------------------------------------------------------------------
 (8) _adc_read                                             6     4      2     135
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _key_read                                             3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (7) _key_debounce                                         3     1      2      98
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   _beep
     _delay_big_ms
   _buzzer_init
   _delay_s
     _delay_ms
   _key_init
   _key_pressed
   _lcd_clear
     _spi_send_command
       _spi_exchange
   _lcd_init
   _lcd_puts
     _lcd_putchar
       _spi_send_command
       _spi_send_data
         _spi_exchange
   _lcd_show_cursor
     _spi_send_command
   _led_init
   _sensor_init
     _adc_init
   _sensor_power
     _delay_ms
   _serial_init
   _spi_init
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _t0_init
   _welcome_message
     _delay_ms
     _lcd_goto
       _spi_send_command
       _spi_send_data
     _lcd_puts

 _isr (ROOT)
   _key_debounce
   _key_read
   _sensorNear_read
     _adc_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     28      37       5       68.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      45      12        0.0%
ABS                  0      0      45       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Jun 13 21:07:10 2023

                           pc 0002                ?_spi_send_data 0070                  ?_lcd_putchar 0070  
                 _SSPSTATbits 0094                            l70 01D7                            l62 01A6  
                          l71 01DE                            l72 01E5                            l64 01AD  
                          l73 01EC                            l65 01B4                            l66 01BB  
                          l75 022E                            l67 01C2                            l68 01C9  
                          l69 01D0                            _GO 00F9                            fsr 0004  
                         l200 042B                           l210 047C                           l203 0446  
                         l206 0465                           l229 059A                           l245 0573  
                         l262 0588                           l256 05A1                           l344 0528  
                         l185 0480                           l265 05A8                           l273 04DF  
                         l601 03FE                           l186 0482                           l346 0529  
                         l282 0426                           l259 054B                           l268 0517  
                         l276 0505                           l189 0497                           l349 04B1  
                         l199 0427                           l721 00FE                           l394 04C9  
                         l493 0461                           l582 05AF                           l496 0531  
                         l498 0537                           l595 055B                           l499 053B  
                         l579 0567                           l598 0592                           _CKE 04A6  
                         _CKP 00A4                           _GIE 005F                           l997 0327  
                         _RA1 0029                           _RB0 0030                           _RC0 0038  
                         _RB5 0035                           _RB7 0037                           u900 0497  
                         u901 0496                           u910 043A                           u911 0439  
                         u920 0446                           u840 0537                           u921 0445  
                         u841 0536                           u930 0426                           u931 0425  
                         u940 02EC                           u941 02EB                           u960 02FE  
                         u961 02FD                           _RX9 00C6                           u890 0491  
                         u891 0490                           u955 02F0                           u980 030F  
                         u981 030E                           _SMP 04A7                           u975 02FF  
                         u985 030B                           _TX9 04C6                           u995 0317  
                         _isr 022F                           fsr0 0004                           indf 0000  
                 lcd_goto@pos 0024                          l1007 0363                          l2101 0480  
                        l2111 043A                          l2103 0489                          l2105 0491  
                        l2041 052D                          l2113 0509                          l2121 0416  
                        l2107 0427                          l2211 0467                          l2043 052F  
                        l2051 0541                          l2131 02F6                          l2123 02E2  
                        l2115 03FF                          l2109 0432                          l2213 046E  
                        l2045 053A                          l2053 0545                          l2301 04BD  
                        l2141 0316                          l2133 02FA                          l2125 02E6  
                        l2117 0400                          l2215 0476                          l2071 022B  
                        l2063 01F3                          l2311 04C8                          l2303 04C0  
                        l2143 031D                          l2135 02FE                          l2127 02EC  
                        l2151 0330                          l2055 0582                          l2119 040E  
                        l2209 0465                          l2217 0593                          l2049 053F  
                        l2065 0216                          l2305 04C1                          l2137 030F  
                        l2129 02EF                          l2145 0323                          l2161 034C  
                        l2153 0333                          l2401 005F                          l2057 04F7  
                        l2251 056B                          l2067 0225                          l2059 01A5  
                        l2307 04C2                          l2139 0315                          l2163 0352  
                        l2155 033A                          l2403 0063                          l2253 056F  
                        l2261 05A2                          l2069 0228                          l2309 04C5  
                        l2165 0359                          l2157 033E                          l2149 0328  
                        l2421 0098                          l2405 0067                          l2255 0572  
                        l2263 04CA                          l2271 0520                          l2351 0447  
                        l2159 0342                          l2167 035F                          l2431 00D8  
                        l2423 009E                          l2415 0072                          l2407 006B  
                        l2249 0568                          l2265 04D2                          l2281 04A8  
                        l2273 0521                          l2353 045A                          l2433 00DD  
                        l2425 00A3                          l2409 0070                          l2361 0562  
                        l2371 0558                          l2259 059B                          l2267 04D9  
                        l2283 04AB                          l2275 0498                          l2291 04B6  
                        l2355 0460                          l2435 00E1                          l2427 00A7  
                        l2419 008E                          l2363 0566                          l2365 05A9  
                        l2373 0589                          l2277 04A1                          l2269 051B  
                        l2293 04B7                          l2429 00AA                          l2437 00EA  
                        l2357 055C                          l2381 03ED                          l2367 054C  
                        l2279 04A7                          l2295 04B8                          l2439 00FA  
                        l2391 003C                          l2359 0560                          l2383 03F3  
                        l2375 03D6                          l2369 054F                          l2297 04BB  
                        l2289 04B2                          l2393 0041                          l2385 002E  
                        l2377 03DC                          l2299 04BC                          l2387 0031  
                        l2379 03E7                          l2397 0042                          l2389 0037  
                        l2399 0057                          l2751 00FF                          l2761 0113  
                        l2753 00FF                          l2771 0128                          l2763 0118  
                        l2755 0104                          l2781 0148                          l2773 012E  
                        l2765 011D                          l2757 0109                          l2791 0166  
                        l2783 014E                          l2775 0134                          l2767 0122  
                        l2759 010E                          l2793 0179                          l2785 0156  
                        l2777 0139                          l2769 0127                          l2795 0185  
                        l2787 015B                          l2779 0143                          l2797 0195  
                        l2789 015F                          l2799 019A                          _ADIE 0466  
                        _ADIF 0066                          ?_isr 0070                          _ADON 00F8  
                        _ANS0 0C40                          STR_1 02D3                          _ANS1 0C41  
                        STR_2 02D9                          _ANS2 0C42                          STR_3 02DF  
                        _ANS3 0C43                          _ANS4 0C44                          _ANS8 0C48  
                        _ANS9 0C49                          _BRGH 04C2                          u1000 0323  
                        _CREN 00C4                          u1001 0322                          u1010 0330  
                        _FERR 00C2                          u1011 032F                          u1100 0476  
                        u1101 0475                          u1110 047C                          u1030 0342  
                        u1111 047B                          u1031 0341                          u1200 04D2  
                        u1040 034C                          u1201 04D1                          u1041 034B  
                        u1025 0334                          u1210 0520                          u1211 051F  
                        u1060 035F                          u1300 008D                          u1061 035E  
                        u1045 0348                          u1301 008C                          u1310 0098  
                        u1055 0353                          u1311 0097                          u1320 009E  
                        u1321 009D                          u1305 0089                          u1330 00EA  
                        u1331 00E9                          u1340 00FA                          u1341 00F9  
                        u1190 056F                          u1191 056E                          u1280 0037  
                        u1281 0036                          u1290 0067                          u1610 015B  
                        u1291 0066                          u1611 015A                          u1620 0166  
                        u1621 0165                          _RBIE 005B                          _RBIF 0058  
                        _RCIE 0465                          _RCIF 0065                          i1l83 039F  
                        i1l84 038E                          _OERR 00C1                          _TMR0 0001  
                        _WCOL 00A7                          _SPEN 00C7                          _SREN 00C5  
                        _TXIE 0464                          _TXEN 04C5                          _TXIF 0064  
                        _SYNC 04C4                          _beep 054C                          _main 00FF  
                        btemp 007E             sensor_power@state 0022                          start 000E  
                       ??_isr 0078          __end_of_delay_big_ms 0447  spi_send_command@command_byte 0023  
           ?_spi_send_command 0070               __end_of_t0_init 0568                         ?_beep 0070  
                       ?_main 0070                         _ANS10 0C4A                         _ANS11 0C4B  
                       _ANS12 0C4C                         _ANS13 0C4D                         _ANSEL 0188  
                       _IOCB6 04B6            ??_spi_send_command 0021               __end_of___lwdiv 0328  
                       i1l233 04F3                         i1l241 03D5               __end_of___lwmod 0364  
                       i1l355 057E                         i1l592 0284                         _RCREG 001A  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _TRISA 0085                         _SSPEN 00A5                         u85_20 036B  
                       u85_21 036A                         _WPUB6 04AE                         u86_20 0371  
                       u86_21 0370                         u87_20 0377                         u87_21 0376  
                       u88_20 0392                         u88_21 0391                         _TXREG 0019  
                ?_key_pressed 0070               __end_of_delay_s 047D                         _nRBPU 040F  
                       _Xcorr 004E                         _Ycorr 0050               __end_of_dpowers 02A7  
                       _dummy 0053                  lcd_putchar@c 0024                __pbitbssCOMMON 03E0  
                       pclath 000A              ?_lcd_show_cursor 0024                         status 0003  
                       wtemp0 007E               __end_of_sprintf 00FF               delay_big_ms@cnt 0020  
                ?_buzzer_init 0070               __initialization 0011               ??_spi_send_data 0021  
                __end_of_beep 055C                  __end_of_main 01A2                 ?_key_debounce 0070  
                      ??_beep 0023                        ??_main 003B                        _ADRESH 001E  
                      _ADRESL 009E              __end_of_adc_init 022F              __end_of_adc_read 03A0  
                      i1l2221 04EF                        i1l2231 03BE                        i1l2223 03A1  
                      u112_20 04EF                        u112_21 04EE                        i1l2241 03CF  
                      i1l2233 03C0                        i1l2225 03B1                        i1l2073 0365  
                      i1l2219 04E0                        i1l2243 03D0                        i1l2235 03C1  
                      i1l2227 03B8                        i1l2091 038A                        i1l2083 037A  
                      i1l2075 036B                        u112_25 04EB                        i1l2245 03D2  
                      i1l2229 03BD                        i1l2237 03C3                        i1l2093 038D  
                      i1l2085 0385                        i1l2077 0371                        i1l2247 03D3  
                      i1l2239 03C8                        i1l2095 0392                        i1l2087 0386  
                      i1l2079 0377                        i1l2097 039A                        i1l2089 0387  
                      u113_25 03A4                        i1l2285 0574                        u114_20 03B1  
                      u114_21 03B0                        i1l2731 0255                        i1l2723 022F  
                      i1l2733 0259                        i1l2725 0233                        i1l2741 0271  
                      i1l2743 0275                        i1l2735 0266                        i1l2727 0237  
                      u115_20 03B8                        u115_21 03B7                        i1l2745 0279  
                      i1l2737 026C                        i1l2729 0240                        i1l2747 027D  
                      i1l2739 0270                        i1l2749 0283                        u116_20 03BD  
                      u116_21 03BC                        u117_20 03C8                        u117_21 03C7  
                      u118_20 03CF                        u118_21 03CE                        u160_20 0279  
                      u160_21 0278                        u156_20 0233                        u156_21 0232  
                      u157_20 0237                        u157_21 0236                        u158_20 0255  
                      u158_21 0254                        u158_25 0251                        u159_20 0275  
                      u159_21 0274                        _TMR0IE 005D                        _TMR0IF 005A  
                      _TRISA0 0428                        _TRISA1 0429                        _TRISA2 042A  
                      _TRISB0 0430                        _TRISA3 042B                        _TRISB1 0431  
                      _TRISB2 0432                        _TRISC0 0438                        _TRISA5 042D  
                      _TRISB4 0434                        _TRISB5 0435                        _TRISC3 043B  
                      _TRISB6 0436                        _TRISC4 043C                        _TRISC5 043D  
                      _TRISB7 0437                        _SSPBUF 0013              __end_of_delay_ms 0498  
                ?_serial_init 0070              __end_of_lcd_init 05A2              __end_of_lcd_goto 0518  
                   ??_t0_init 0020              __end_of_lcd_puts 0427              __end_of_led_init 0593  
                 key_read@key 0072                     ??___lwdiv 0024                     ??___lwmod 002C  
                      _n_read 004A              __end_of_key_init 059B              __end_of_key_read 03D6  
              ??_key_debounce 0072                     ??_delay_s 0022                  ?_sensor_init 0070  
             _sensorNear_read 0574                        saved_w 007E              __end_of_spi_init 0462  
                   ??_sprintf 0031       __end_of__initialization 0027             lcd_show_cursor@on 0024  
              __pcstackCOMMON 0070                  __pidataBANK0 05B0                    _adc_result 004C  
            key_pressed@state 0020                _OPTION_REGbits 0081       spi_send_command@command 0022  
             key_read@key_old 0056                    __pbssBANK0 0048                  _delay_big_ms 0427  
                  __pmaintext 00FF                    __pintentry 0004       __end_of_sensorNear_read 057F  
                   ?_adc_init 0070                     ?_adc_read 0070                     ?_delay_ms 0070  
                   ?_lcd_init 0070                     ?_lcd_goto 0070                     ?_lcd_puts 0025  
                   ?_led_init 0070                    __stringtab 028D          __end_of_key_debounce 04F4  
                   ?_key_init 0070                     ?_key_read 0070                    _keyPressed 03E0  
           __end_of_lcd_clear 05A9                       _t0_init 055C                     ?_spi_init 0070  
                     ___lwdiv 02E2                       ___lwmod 0328                  key_read@port 0071  
                     _delay_s 0462                    ??_adc_init 0020                    ??_adc_read 0072  
                     __ptext1 03D6                       __ptext2 03FF                       __ptext3 04F4  
                     __ptext4 0506                       __ptext5 057F                       __ptext6 055C  
                     __ptext7 002B                       __ptext8 0328                       __ptext9 02E2  
                     _dpowers 029D                    ??_delay_ms 0020                       _sprintf 002B  
                  delay_s@cnt 0022                    ??_lcd_init 0020                    ??_lcd_goto 0024  
                  ??_lcd_puts 0027                    ??_led_init 0020          end_of_initialization 0027  
           ??_welcome_message 0027                 ?_sensor_power 0070                       isr@tick 0048  
                  ??_key_init 0020                    ??_key_read 0070                    ??_spi_init 0020  
       __end_of_spi_send_data 0589              ?_sensorNear_read 0076                 ?_spi_exchange 0070  
            _ready_to_display 0052                ??_sensor_power 0022                    main@result 003B  
               delay_big_ms@i 0022                 ??_lcd_putchar 0024                ??_spi_exchange 0020  
            _delayus_variable 0055           start_initialization 0011                   __end_of_isr 028D  
            _spi_send_command 053C             spi_send_data@data 0021                   __pdataBANK0 0056  
                _key_debounce 04E0             ??_lcd_show_cursor 0026           __end_of_lcd_putchar 0506  
               ??_key_pressed 0020                   __pbssCOMMON 007D                     ___latbits 0002  
               __pcstackBANK0 0020                   sprintf@flag 0035                   sprintf@prec 0036  
               ??_buzzer_init 0020                     _main$1506 0045              ___lwdiv@dividend 0022  
                    ?_t0_init 0070                      ?___lwdiv 0020                      ?___lwmod 0028  
                   _lcd_clear 05A2          __end_of_sensor_power 052A                      ?_delay_s 0070  
                   __pstrings 028D               _welcome_message 03D6           adc_init@adc_channel 0021  
            ___lwdiv@quotient 0025                      ?_sprintf 002E           __end_of_key_pressed 0574  
           interrupt_function 0004                     delay_ms@i 0021          __end_of_spi_exchange 053C  
               ??_serial_init 0020           __end_of_buzzer_init 05B0                   _lcd_putchar 04F4  
                  ?_lcd_clear 0070                    _ADCON0bits 001F                   __stringbase 029C  
                  _ADCON1bits 009F                 ??_sensor_init 0022                     main@keyIn 0047  
                   lcd_puts@s 0025           __end_ofatan@coeff_a 02BF           __end_ofatan@coeff_b 02D3  
             _keyStateChanged 0054       __end_of_welcome_message 03FF      __end_of_spi_send_command 054C  
         __end_of_serial_init 04CA            __end_of__stringtab 029D                      _adc_init 01A2  
                    _adc_read 0364                    sprintf@val 0037                   _key_pressed 0568  
                    _debounce 007D                      _delay_ms 047D               ___lwdiv@divisor 0020  
             ___lwdiv@counter 0027                      __ptext10 0447                      __ptext11 04B2  
                    __ptext20 052A                      __ptext12 0518                      __ptext21 0568  
                    __ptext13 0498                      __ptext30 0364                      __ptext22 0593  
                    __ptext14 01A2                      __ptext31 03A0                      __ptext23 0462  
                    __ptext15 0589                      __ptext32 04E0                      __ptext24 047D  
                    __ptext16 04CA                      __ptext25 05A9                      __ptext17 059B  
                    __ptext26 054C                      __ptext18 05A2                      __ptext27 0427  
                    __ptext19 053C                      __ptext28 022F                      __ptext29 0574  
         __end_of_sensor_init 04B2                      _lcd_init 059B                      _lcd_goto 0506  
                    _lcd_puts 03FF                      _led_init 0589                 ?_delay_big_ms 0020  
                    _key_init 0593                      _key_read 03A0                      delay_s@i 0023  
                 _buzzer_init 05A9              spi_exchange@data 0020               _lcd_show_cursor 04CA  
                    _spi_init 0447                   ??_lcd_clear 0024                   atan@coeff_a 02A7  
                 atan@coeff_b 02BF                   delay_ms@cnt 0020                      isr@portB 007B  
              ??_delay_big_ms 0022                      intlevel1 0000                     sprintf@ap 0034  
                   sprintf@sp 0039                  _sensor_power 0518              ___lwmod@dividend 002A  
                   stringcode 0297                   _serial_init 04B2              ?_welcome_message 0070  
          key_debounce@cycles 0070                 _spi_send_data 057F                      sprintf@c 003A  
                    sprintf@f 002E                   _sensor_init 0498                  _spi_exchange 052A  
             ___lwmod@divisor 0028               ___lwmod@counter 002D                      stringdir 0297  
                    stringtab 028D           adc_read@adc_channel 0075       __end_of_lcd_show_cursor 04E0  
           ??_sensorNear_read 0078                    _SSPCONbits 0014            adc_read@adc_result 0073  
