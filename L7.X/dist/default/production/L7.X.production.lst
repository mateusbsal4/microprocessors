

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Jun 27 22:38:49 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	intentry,global,class=CODE,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    61                           	dabs	1,0x7E,2
    62     0000                     
    63                           ; Version 2.40
    64                           ; Generated 17/11/2021 GMT
    65                           ; 
    66                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F886 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98     0000                     	;# 
    99     0001                     	;# 
   100     0002                     	;# 
   101     0003                     	;# 
   102     0004                     	;# 
   103     0005                     	;# 
   104     0006                     	;# 
   105     0007                     	;# 
   106     0009                     	;# 
   107     000A                     	;# 
   108     000B                     	;# 
   109     000C                     	;# 
   110     000D                     	;# 
   111     000E                     	;# 
   112     000E                     	;# 
   113     000F                     	;# 
   114     0010                     	;# 
   115     0011                     	;# 
   116     0012                     	;# 
   117     0013                     	;# 
   118     0014                     	;# 
   119     0015                     	;# 
   120     0015                     	;# 
   121     0016                     	;# 
   122     0017                     	;# 
   123     0018                     	;# 
   124     0019                     	;# 
   125     001A                     	;# 
   126     001B                     	;# 
   127     001B                     	;# 
   128     001C                     	;# 
   129     001D                     	;# 
   130     001E                     	;# 
   131     001F                     	;# 
   132     0081                     	;# 
   133     0085                     	;# 
   134     0086                     	;# 
   135     0087                     	;# 
   136     0089                     	;# 
   137     008C                     	;# 
   138     008D                     	;# 
   139     008E                     	;# 
   140     008F                     	;# 
   141     0090                     	;# 
   142     0091                     	;# 
   143     0092                     	;# 
   144     0093                     	;# 
   145     0093                     	;# 
   146     0093                     	;# 
   147     0094                     	;# 
   148     0095                     	;# 
   149     0096                     	;# 
   150     0097                     	;# 
   151     0098                     	;# 
   152     0099                     	;# 
   153     009A                     	;# 
   154     009B                     	;# 
   155     009C                     	;# 
   156     009D                     	;# 
   157     009E                     	;# 
   158     009F                     	;# 
   159     0105                     	;# 
   160     0107                     	;# 
   161     0108                     	;# 
   162     0109                     	;# 
   163     010C                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     0185                     	;# 
   169     0187                     	;# 
   170     0188                     	;# 
   171     0189                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     0000                     	;# 
   175     0001                     	;# 
   176     0002                     	;# 
   177     0003                     	;# 
   178     0004                     	;# 
   179     0005                     	;# 
   180     0006                     	;# 
   181     0007                     	;# 
   182     0009                     	;# 
   183     000A                     	;# 
   184     000B                     	;# 
   185     000C                     	;# 
   186     000D                     	;# 
   187     000E                     	;# 
   188     000E                     	;# 
   189     000F                     	;# 
   190     0010                     	;# 
   191     0011                     	;# 
   192     0012                     	;# 
   193     0013                     	;# 
   194     0014                     	;# 
   195     0015                     	;# 
   196     0015                     	;# 
   197     0016                     	;# 
   198     0017                     	;# 
   199     0018                     	;# 
   200     0019                     	;# 
   201     001A                     	;# 
   202     001B                     	;# 
   203     001B                     	;# 
   204     001C                     	;# 
   205     001D                     	;# 
   206     001E                     	;# 
   207     001F                     	;# 
   208     0081                     	;# 
   209     0085                     	;# 
   210     0086                     	;# 
   211     0087                     	;# 
   212     0089                     	;# 
   213     008C                     	;# 
   214     008D                     	;# 
   215     008E                     	;# 
   216     008F                     	;# 
   217     0090                     	;# 
   218     0091                     	;# 
   219     0092                     	;# 
   220     0093                     	;# 
   221     0093                     	;# 
   222     0093                     	;# 
   223     0094                     	;# 
   224     0095                     	;# 
   225     0096                     	;# 
   226     0097                     	;# 
   227     0098                     	;# 
   228     0099                     	;# 
   229     009A                     	;# 
   230     009B                     	;# 
   231     009C                     	;# 
   232     009D                     	;# 
   233     009E                     	;# 
   234     009F                     	;# 
   235     0105                     	;# 
   236     0107                     	;# 
   237     0108                     	;# 
   238     0109                     	;# 
   239     010C                     	;# 
   240     010C                     	;# 
   241     010D                     	;# 
   242     010E                     	;# 
   243     010F                     	;# 
   244     0185                     	;# 
   245     0187                     	;# 
   246     0188                     	;# 
   247     0189                     	;# 
   248     018C                     	;# 
   249     018D                     	;# 
   250     0000                     	;# 
   251     0001                     	;# 
   252     0002                     	;# 
   253     0003                     	;# 
   254     0004                     	;# 
   255     0005                     	;# 
   256     0006                     	;# 
   257     0007                     	;# 
   258     0009                     	;# 
   259     000A                     	;# 
   260     000B                     	;# 
   261     000C                     	;# 
   262     000D                     	;# 
   263     000E                     	;# 
   264     000E                     	;# 
   265     000F                     	;# 
   266     0010                     	;# 
   267     0011                     	;# 
   268     0012                     	;# 
   269     0013                     	;# 
   270     0014                     	;# 
   271     0015                     	;# 
   272     0015                     	;# 
   273     0016                     	;# 
   274     0017                     	;# 
   275     0018                     	;# 
   276     0019                     	;# 
   277     001A                     	;# 
   278     001B                     	;# 
   279     001B                     	;# 
   280     001C                     	;# 
   281     001D                     	;# 
   282     001E                     	;# 
   283     001F                     	;# 
   284     0081                     	;# 
   285     0085                     	;# 
   286     0086                     	;# 
   287     0087                     	;# 
   288     0089                     	;# 
   289     008C                     	;# 
   290     008D                     	;# 
   291     008E                     	;# 
   292     008F                     	;# 
   293     0090                     	;# 
   294     0091                     	;# 
   295     0092                     	;# 
   296     0093                     	;# 
   297     0093                     	;# 
   298     0093                     	;# 
   299     0094                     	;# 
   300     0095                     	;# 
   301     0096                     	;# 
   302     0097                     	;# 
   303     0098                     	;# 
   304     0099                     	;# 
   305     009A                     	;# 
   306     009B                     	;# 
   307     009C                     	;# 
   308     009D                     	;# 
   309     009E                     	;# 
   310     009F                     	;# 
   311     0105                     	;# 
   312     0107                     	;# 
   313     0108                     	;# 
   314     0109                     	;# 
   315     010C                     	;# 
   316     010C                     	;# 
   317     010D                     	;# 
   318     010E                     	;# 
   319     010F                     	;# 
   320     0185                     	;# 
   321     0187                     	;# 
   322     0188                     	;# 
   323     0189                     	;# 
   324     018C                     	;# 
   325     018D                     	;# 
   326     0000                     	;# 
   327     0001                     	;# 
   328     0002                     	;# 
   329     0003                     	;# 
   330     0004                     	;# 
   331     0005                     	;# 
   332     0006                     	;# 
   333     0007                     	;# 
   334     0009                     	;# 
   335     000A                     	;# 
   336     000B                     	;# 
   337     000C                     	;# 
   338     000D                     	;# 
   339     000E                     	;# 
   340     000E                     	;# 
   341     000F                     	;# 
   342     0010                     	;# 
   343     0011                     	;# 
   344     0012                     	;# 
   345     0013                     	;# 
   346     0014                     	;# 
   347     0015                     	;# 
   348     0015                     	;# 
   349     0016                     	;# 
   350     0017                     	;# 
   351     0018                     	;# 
   352     0019                     	;# 
   353     001A                     	;# 
   354     001B                     	;# 
   355     001B                     	;# 
   356     001C                     	;# 
   357     001D                     	;# 
   358     001E                     	;# 
   359     001F                     	;# 
   360     0081                     	;# 
   361     0085                     	;# 
   362     0086                     	;# 
   363     0087                     	;# 
   364     0089                     	;# 
   365     008C                     	;# 
   366     008D                     	;# 
   367     008E                     	;# 
   368     008F                     	;# 
   369     0090                     	;# 
   370     0091                     	;# 
   371     0092                     	;# 
   372     0093                     	;# 
   373     0093                     	;# 
   374     0093                     	;# 
   375     0094                     	;# 
   376     0095                     	;# 
   377     0096                     	;# 
   378     0097                     	;# 
   379     0098                     	;# 
   380     0099                     	;# 
   381     009A                     	;# 
   382     009B                     	;# 
   383     009C                     	;# 
   384     009D                     	;# 
   385     009E                     	;# 
   386     009F                     	;# 
   387     0105                     	;# 
   388     0107                     	;# 
   389     0108                     	;# 
   390     0109                     	;# 
   391     010C                     	;# 
   392     010C                     	;# 
   393     010D                     	;# 
   394     010E                     	;# 
   395     010F                     	;# 
   396     0185                     	;# 
   397     0187                     	;# 
   398     0188                     	;# 
   399     0189                     	;# 
   400     018C                     	;# 
   401     018D                     	;# 
   402     0000                     	;# 
   403     0001                     	;# 
   404     0002                     	;# 
   405     0003                     	;# 
   406     0004                     	;# 
   407     0005                     	;# 
   408     0006                     	;# 
   409     0007                     	;# 
   410     0009                     	;# 
   411     000A                     	;# 
   412     000B                     	;# 
   413     000C                     	;# 
   414     000D                     	;# 
   415     000E                     	;# 
   416     000E                     	;# 
   417     000F                     	;# 
   418     0010                     	;# 
   419     0011                     	;# 
   420     0012                     	;# 
   421     0013                     	;# 
   422     0014                     	;# 
   423     0015                     	;# 
   424     0015                     	;# 
   425     0016                     	;# 
   426     0017                     	;# 
   427     0018                     	;# 
   428     0019                     	;# 
   429     001A                     	;# 
   430     001B                     	;# 
   431     001B                     	;# 
   432     001C                     	;# 
   433     001D                     	;# 
   434     001E                     	;# 
   435     001F                     	;# 
   436     0081                     	;# 
   437     0085                     	;# 
   438     0086                     	;# 
   439     0087                     	;# 
   440     0089                     	;# 
   441     008C                     	;# 
   442     008D                     	;# 
   443     008E                     	;# 
   444     008F                     	;# 
   445     0090                     	;# 
   446     0091                     	;# 
   447     0092                     	;# 
   448     0093                     	;# 
   449     0093                     	;# 
   450     0093                     	;# 
   451     0094                     	;# 
   452     0095                     	;# 
   453     0096                     	;# 
   454     0097                     	;# 
   455     0098                     	;# 
   456     0099                     	;# 
   457     009A                     	;# 
   458     009B                     	;# 
   459     009C                     	;# 
   460     009D                     	;# 
   461     009E                     	;# 
   462     009F                     	;# 
   463     0105                     	;# 
   464     0107                     	;# 
   465     0108                     	;# 
   466     0109                     	;# 
   467     010C                     	;# 
   468     010C                     	;# 
   469     010D                     	;# 
   470     010E                     	;# 
   471     010F                     	;# 
   472     0185                     	;# 
   473     0187                     	;# 
   474     0188                     	;# 
   475     0189                     	;# 
   476     018C                     	;# 
   477     018D                     	;# 
   478     0000                     	;# 
   479     0001                     	;# 
   480     0002                     	;# 
   481     0003                     	;# 
   482     0004                     	;# 
   483     0005                     	;# 
   484     0006                     	;# 
   485     0007                     	;# 
   486     0009                     	;# 
   487     000A                     	;# 
   488     000B                     	;# 
   489     000C                     	;# 
   490     000D                     	;# 
   491     000E                     	;# 
   492     000E                     	;# 
   493     000F                     	;# 
   494     0010                     	;# 
   495     0011                     	;# 
   496     0012                     	;# 
   497     0013                     	;# 
   498     0014                     	;# 
   499     0015                     	;# 
   500     0015                     	;# 
   501     0016                     	;# 
   502     0017                     	;# 
   503     0018                     	;# 
   504     0019                     	;# 
   505     001A                     	;# 
   506     001B                     	;# 
   507     001B                     	;# 
   508     001C                     	;# 
   509     001D                     	;# 
   510     001E                     	;# 
   511     001F                     	;# 
   512     0081                     	;# 
   513     0085                     	;# 
   514     0086                     	;# 
   515     0087                     	;# 
   516     0089                     	;# 
   517     008C                     	;# 
   518     008D                     	;# 
   519     008E                     	;# 
   520     008F                     	;# 
   521     0090                     	;# 
   522     0091                     	;# 
   523     0092                     	;# 
   524     0093                     	;# 
   525     0093                     	;# 
   526     0093                     	;# 
   527     0094                     	;# 
   528     0095                     	;# 
   529     0096                     	;# 
   530     0097                     	;# 
   531     0098                     	;# 
   532     0099                     	;# 
   533     009A                     	;# 
   534     009B                     	;# 
   535     009C                     	;# 
   536     009D                     	;# 
   537     009E                     	;# 
   538     009F                     	;# 
   539     0105                     	;# 
   540     0107                     	;# 
   541     0108                     	;# 
   542     0109                     	;# 
   543     010C                     	;# 
   544     010C                     	;# 
   545     010D                     	;# 
   546     010E                     	;# 
   547     010F                     	;# 
   548     0185                     	;# 
   549     0187                     	;# 
   550     0188                     	;# 
   551     0189                     	;# 
   552     018C                     	;# 
   553     018D                     	;# 
   554     0000                     	;# 
   555     0001                     	;# 
   556     0002                     	;# 
   557     0003                     	;# 
   558     0004                     	;# 
   559     0005                     	;# 
   560     0006                     	;# 
   561     0007                     	;# 
   562     0009                     	;# 
   563     000A                     	;# 
   564     000B                     	;# 
   565     000C                     	;# 
   566     000D                     	;# 
   567     000E                     	;# 
   568     000E                     	;# 
   569     000F                     	;# 
   570     0010                     	;# 
   571     0011                     	;# 
   572     0012                     	;# 
   573     0013                     	;# 
   574     0014                     	;# 
   575     0015                     	;# 
   576     0015                     	;# 
   577     0016                     	;# 
   578     0017                     	;# 
   579     0018                     	;# 
   580     0019                     	;# 
   581     001A                     	;# 
   582     001B                     	;# 
   583     001B                     	;# 
   584     001C                     	;# 
   585     001D                     	;# 
   586     001E                     	;# 
   587     001F                     	;# 
   588     0081                     	;# 
   589     0085                     	;# 
   590     0086                     	;# 
   591     0087                     	;# 
   592     0089                     	;# 
   593     008C                     	;# 
   594     008D                     	;# 
   595     008E                     	;# 
   596     008F                     	;# 
   597     0090                     	;# 
   598     0091                     	;# 
   599     0092                     	;# 
   600     0093                     	;# 
   601     0093                     	;# 
   602     0093                     	;# 
   603     0094                     	;# 
   604     0095                     	;# 
   605     0096                     	;# 
   606     0097                     	;# 
   607     0098                     	;# 
   608     0099                     	;# 
   609     009A                     	;# 
   610     009B                     	;# 
   611     009C                     	;# 
   612     009D                     	;# 
   613     009E                     	;# 
   614     009F                     	;# 
   615     0105                     	;# 
   616     0107                     	;# 
   617     0108                     	;# 
   618     0109                     	;# 
   619     010C                     	;# 
   620     010C                     	;# 
   621     010D                     	;# 
   622     010E                     	;# 
   623     010F                     	;# 
   624     0185                     	;# 
   625     0187                     	;# 
   626     0188                     	;# 
   627     0189                     	;# 
   628     018C                     	;# 
   629     018D                     	;# 
   630     0000                     	;# 
   631     0001                     	;# 
   632     0002                     	;# 
   633     0003                     	;# 
   634     0004                     	;# 
   635     0005                     	;# 
   636     0006                     	;# 
   637     0007                     	;# 
   638     0009                     	;# 
   639     000A                     	;# 
   640     000B                     	;# 
   641     000C                     	;# 
   642     000D                     	;# 
   643     000E                     	;# 
   644     000E                     	;# 
   645     000F                     	;# 
   646     0010                     	;# 
   647     0011                     	;# 
   648     0012                     	;# 
   649     0013                     	;# 
   650     0014                     	;# 
   651     0015                     	;# 
   652     0015                     	;# 
   653     0016                     	;# 
   654     0017                     	;# 
   655     0018                     	;# 
   656     0019                     	;# 
   657     001A                     	;# 
   658     001B                     	;# 
   659     001B                     	;# 
   660     001C                     	;# 
   661     001D                     	;# 
   662     001E                     	;# 
   663     001F                     	;# 
   664     0081                     	;# 
   665     0085                     	;# 
   666     0086                     	;# 
   667     0087                     	;# 
   668     0089                     	;# 
   669     008C                     	;# 
   670     008D                     	;# 
   671     008E                     	;# 
   672     008F                     	;# 
   673     0090                     	;# 
   674     0091                     	;# 
   675     0092                     	;# 
   676     0093                     	;# 
   677     0093                     	;# 
   678     0093                     	;# 
   679     0094                     	;# 
   680     0095                     	;# 
   681     0096                     	;# 
   682     0097                     	;# 
   683     0098                     	;# 
   684     0099                     	;# 
   685     009A                     	;# 
   686     009B                     	;# 
   687     009C                     	;# 
   688     009D                     	;# 
   689     009E                     	;# 
   690     009F                     	;# 
   691     0105                     	;# 
   692     0107                     	;# 
   693     0108                     	;# 
   694     0109                     	;# 
   695     010C                     	;# 
   696     010C                     	;# 
   697     010D                     	;# 
   698     010E                     	;# 
   699     010F                     	;# 
   700     0185                     	;# 
   701     0187                     	;# 
   702     0188                     	;# 
   703     0189                     	;# 
   704     018C                     	;# 
   705     018D                     	;# 
   706     0000                     	;# 
   707     0001                     	;# 
   708     0002                     	;# 
   709     0003                     	;# 
   710     0004                     	;# 
   711     0005                     	;# 
   712     0006                     	;# 
   713     0007                     	;# 
   714     0009                     	;# 
   715     000A                     	;# 
   716     000B                     	;# 
   717     000C                     	;# 
   718     000D                     	;# 
   719     000E                     	;# 
   720     000E                     	;# 
   721     000F                     	;# 
   722     0010                     	;# 
   723     0011                     	;# 
   724     0012                     	;# 
   725     0013                     	;# 
   726     0014                     	;# 
   727     0015                     	;# 
   728     0015                     	;# 
   729     0016                     	;# 
   730     0017                     	;# 
   731     0018                     	;# 
   732     0019                     	;# 
   733     001A                     	;# 
   734     001B                     	;# 
   735     001B                     	;# 
   736     001C                     	;# 
   737     001D                     	;# 
   738     001E                     	;# 
   739     001F                     	;# 
   740     0081                     	;# 
   741     0085                     	;# 
   742     0086                     	;# 
   743     0087                     	;# 
   744     0089                     	;# 
   745     008C                     	;# 
   746     008D                     	;# 
   747     008E                     	;# 
   748     008F                     	;# 
   749     0090                     	;# 
   750     0091                     	;# 
   751     0092                     	;# 
   752     0093                     	;# 
   753     0093                     	;# 
   754     0093                     	;# 
   755     0094                     	;# 
   756     0095                     	;# 
   757     0096                     	;# 
   758     0097                     	;# 
   759     0098                     	;# 
   760     0099                     	;# 
   761     009A                     	;# 
   762     009B                     	;# 
   763     009C                     	;# 
   764     009D                     	;# 
   765     009E                     	;# 
   766     009F                     	;# 
   767     0105                     	;# 
   768     0107                     	;# 
   769     0108                     	;# 
   770     0109                     	;# 
   771     010C                     	;# 
   772     010C                     	;# 
   773     010D                     	;# 
   774     010E                     	;# 
   775     010F                     	;# 
   776     0185                     	;# 
   777     0187                     	;# 
   778     0188                     	;# 
   779     0189                     	;# 
   780     018C                     	;# 
   781     018D                     	;# 
   782     0000                     	;# 
   783     0001                     	;# 
   784     0002                     	;# 
   785     0003                     	;# 
   786     0004                     	;# 
   787     0005                     	;# 
   788     0006                     	;# 
   789     0007                     	;# 
   790     0009                     	;# 
   791     000A                     	;# 
   792     000B                     	;# 
   793     000C                     	;# 
   794     000D                     	;# 
   795     000E                     	;# 
   796     000E                     	;# 
   797     000F                     	;# 
   798     0010                     	;# 
   799     0011                     	;# 
   800     0012                     	;# 
   801     0013                     	;# 
   802     0014                     	;# 
   803     0015                     	;# 
   804     0015                     	;# 
   805     0016                     	;# 
   806     0017                     	;# 
   807     0018                     	;# 
   808     0019                     	;# 
   809     001A                     	;# 
   810     001B                     	;# 
   811     001B                     	;# 
   812     001C                     	;# 
   813     001D                     	;# 
   814     001E                     	;# 
   815     001F                     	;# 
   816     0081                     	;# 
   817     0085                     	;# 
   818     0086                     	;# 
   819     0087                     	;# 
   820     0089                     	;# 
   821     008C                     	;# 
   822     008D                     	;# 
   823     008E                     	;# 
   824     008F                     	;# 
   825     0090                     	;# 
   826     0091                     	;# 
   827     0092                     	;# 
   828     0093                     	;# 
   829     0093                     	;# 
   830     0093                     	;# 
   831     0094                     	;# 
   832     0095                     	;# 
   833     0096                     	;# 
   834     0097                     	;# 
   835     0098                     	;# 
   836     0099                     	;# 
   837     009A                     	;# 
   838     009B                     	;# 
   839     009C                     	;# 
   840     009D                     	;# 
   841     009E                     	;# 
   842     009F                     	;# 
   843     0105                     	;# 
   844     0107                     	;# 
   845     0108                     	;# 
   846     0109                     	;# 
   847     010C                     	;# 
   848     010C                     	;# 
   849     010D                     	;# 
   850     010E                     	;# 
   851     010F                     	;# 
   852     0185                     	;# 
   853     0187                     	;# 
   854     0188                     	;# 
   855     0189                     	;# 
   856     018C                     	;# 
   857     018D                     	;# 
   858     0000                     	;# 
   859     0001                     	;# 
   860     0002                     	;# 
   861     0003                     	;# 
   862     0004                     	;# 
   863     0005                     	;# 
   864     0006                     	;# 
   865     0007                     	;# 
   866     0009                     	;# 
   867     000A                     	;# 
   868     000B                     	;# 
   869     000C                     	;# 
   870     000D                     	;# 
   871     000E                     	;# 
   872     000E                     	;# 
   873     000F                     	;# 
   874     0010                     	;# 
   875     0011                     	;# 
   876     0012                     	;# 
   877     0013                     	;# 
   878     0014                     	;# 
   879     0015                     	;# 
   880     0015                     	;# 
   881     0016                     	;# 
   882     0017                     	;# 
   883     0018                     	;# 
   884     0019                     	;# 
   885     001A                     	;# 
   886     001B                     	;# 
   887     001B                     	;# 
   888     001C                     	;# 
   889     001D                     	;# 
   890     001E                     	;# 
   891     001F                     	;# 
   892     0081                     	;# 
   893     0085                     	;# 
   894     0086                     	;# 
   895     0087                     	;# 
   896     0089                     	;# 
   897     008C                     	;# 
   898     008D                     	;# 
   899     008E                     	;# 
   900     008F                     	;# 
   901     0090                     	;# 
   902     0091                     	;# 
   903     0092                     	;# 
   904     0093                     	;# 
   905     0093                     	;# 
   906     0093                     	;# 
   907     0094                     	;# 
   908     0095                     	;# 
   909     0096                     	;# 
   910     0097                     	;# 
   911     0098                     	;# 
   912     0099                     	;# 
   913     009A                     	;# 
   914     009B                     	;# 
   915     009C                     	;# 
   916     009D                     	;# 
   917     009E                     	;# 
   918     009F                     	;# 
   919     0105                     	;# 
   920     0107                     	;# 
   921     0108                     	;# 
   922     0109                     	;# 
   923     010C                     	;# 
   924     010C                     	;# 
   925     010D                     	;# 
   926     010E                     	;# 
   927     010F                     	;# 
   928     0185                     	;# 
   929     0187                     	;# 
   930     0188                     	;# 
   931     0189                     	;# 
   932     018C                     	;# 
   933     018D                     	;# 
   934     0000                     	;# 
   935     0001                     	;# 
   936     0002                     	;# 
   937     0003                     	;# 
   938     0004                     	;# 
   939     0005                     	;# 
   940     0006                     	;# 
   941     0007                     	;# 
   942     0009                     	;# 
   943     000A                     	;# 
   944     000B                     	;# 
   945     000C                     	;# 
   946     000D                     	;# 
   947     000E                     	;# 
   948     000E                     	;# 
   949     000F                     	;# 
   950     0010                     	;# 
   951     0011                     	;# 
   952     0012                     	;# 
   953     0013                     	;# 
   954     0014                     	;# 
   955     0015                     	;# 
   956     0015                     	;# 
   957     0016                     	;# 
   958     0017                     	;# 
   959     0018                     	;# 
   960     0019                     	;# 
   961     001A                     	;# 
   962     001B                     	;# 
   963     001B                     	;# 
   964     001C                     	;# 
   965     001D                     	;# 
   966     001E                     	;# 
   967     001F                     	;# 
   968     0081                     	;# 
   969     0085                     	;# 
   970     0086                     	;# 
   971     0087                     	;# 
   972     0089                     	;# 
   973     008C                     	;# 
   974     008D                     	;# 
   975     008E                     	;# 
   976     008F                     	;# 
   977     0090                     	;# 
   978     0091                     	;# 
   979     0092                     	;# 
   980     0093                     	;# 
   981     0093                     	;# 
   982     0093                     	;# 
   983     0094                     	;# 
   984     0095                     	;# 
   985     0096                     	;# 
   986     0097                     	;# 
   987     0098                     	;# 
   988     0099                     	;# 
   989     009A                     	;# 
   990     009B                     	;# 
   991     009C                     	;# 
   992     009D                     	;# 
   993     009E                     	;# 
   994     009F                     	;# 
   995     0105                     	;# 
   996     0107                     	;# 
   997     0108                     	;# 
   998     0109                     	;# 
   999     010C                     	;# 
  1000     010C                     	;# 
  1001     010D                     	;# 
  1002     010E                     	;# 
  1003     010F                     	;# 
  1004     0185                     	;# 
  1005     0187                     	;# 
  1006     0188                     	;# 
  1007     0189                     	;# 
  1008     018C                     	;# 
  1009     018D                     	;# 
  1010     0000                     	;# 
  1011     0001                     	;# 
  1012     0002                     	;# 
  1013     0003                     	;# 
  1014     0004                     	;# 
  1015     0005                     	;# 
  1016     0006                     	;# 
  1017     0007                     	;# 
  1018     0009                     	;# 
  1019     000A                     	;# 
  1020     000B                     	;# 
  1021     000C                     	;# 
  1022     000D                     	;# 
  1023     000E                     	;# 
  1024     000E                     	;# 
  1025     000F                     	;# 
  1026     0010                     	;# 
  1027     0011                     	;# 
  1028     0012                     	;# 
  1029     0013                     	;# 
  1030     0014                     	;# 
  1031     0015                     	;# 
  1032     0015                     	;# 
  1033     0016                     	;# 
  1034     0017                     	;# 
  1035     0018                     	;# 
  1036     0019                     	;# 
  1037     001A                     	;# 
  1038     001B                     	;# 
  1039     001B                     	;# 
  1040     001C                     	;# 
  1041     001D                     	;# 
  1042     001E                     	;# 
  1043     001F                     	;# 
  1044     0081                     	;# 
  1045     0085                     	;# 
  1046     0086                     	;# 
  1047     0087                     	;# 
  1048     0089                     	;# 
  1049     008C                     	;# 
  1050     008D                     	;# 
  1051     008E                     	;# 
  1052     008F                     	;# 
  1053     0090                     	;# 
  1054     0091                     	;# 
  1055     0092                     	;# 
  1056     0093                     	;# 
  1057     0093                     	;# 
  1058     0093                     	;# 
  1059     0094                     	;# 
  1060     0095                     	;# 
  1061     0096                     	;# 
  1062     0097                     	;# 
  1063     0098                     	;# 
  1064     0099                     	;# 
  1065     009A                     	;# 
  1066     009B                     	;# 
  1067     009C                     	;# 
  1068     009D                     	;# 
  1069     009E                     	;# 
  1070     009F                     	;# 
  1071     0105                     	;# 
  1072     0107                     	;# 
  1073     0108                     	;# 
  1074     0109                     	;# 
  1075     010C                     	;# 
  1076     010C                     	;# 
  1077     010D                     	;# 
  1078     010E                     	;# 
  1079     010F                     	;# 
  1080     0185                     	;# 
  1081     0187                     	;# 
  1082     0188                     	;# 
  1083     0189                     	;# 
  1084     018C                     	;# 
  1085     018D                     	;# 
  1086                           
  1087                           	psect	idataCOMMON
  1088     07EF                     __pidataCOMMON:
  1089                           
  1090                           ;initializer for key_read@key_old
  1091     07EF  3401               	retlw	1
  1092                           
  1093                           	psect	strings
  1094     0372                     __pstrings:
  1095     0372                     stringtab:
  1096     0372                     __stringtab:
  1097                           
  1098                           ;	String table - string pointers are 1 byte each
  1099     0372  1BFF               	btfsc	btemp+1,7
  1100     0373  2B7C               	ljmp	stringcode
  1101     0374  1383               	bcf	3,7
  1102     0375  187F               	btfsc	btemp+1,0
  1103     0376  1783               	bsf	3,7
  1104     0377  0800               	movf	0,w
  1105     0378  0A84               	incf	4,f
  1106     0379  1903               	skipnz
  1107     037A  0AFF               	incf	btemp+1,f
  1108     037B  0008               	return
  1109     037C                     stringcode:
  1110     037C                     stringdir:
  1111     037C  3003               	movlw	high stringdir
  1112     037D  008A               	movwf	10
  1113     037E  0804               	movf	4,w
  1114     037F  0A84               	incf	4,f
  1115     0380  0782               	addwf	2,f
  1116     0381                     __stringbase:
  1117     0381  3400               	retlw	0
  1118     0382                     __end_of__stringtab:
  1119     0382                     _dpowers:
  1120     0382  3401               	retlw	1
  1121     0383  3400               	retlw	0
  1122     0384  340A               	retlw	10
  1123     0385  3400               	retlw	0
  1124     0386  3464               	retlw	100
  1125     0387  3400               	retlw	0
  1126     0388  34E8               	retlw	232
  1127     0389  3403               	retlw	3
  1128     038A  3410               	retlw	16
  1129     038B  3427               	retlw	39
  1130     038C                     __end_of_dpowers:
  1131     038C                     atan@coeff_a:
  1132     038C  3406               	retlw	6
  1133     038D  343C               	retlw	60
  1134     038E  3404               	retlw	4
  1135     038F  3442               	retlw	66
  1136     0390  347D               	retlw	125
  1137     0391  349F               	retlw	159
  1138     0392  346A               	retlw	106
  1139     0393  3442               	retlw	66
  1140     0394  345C               	retlw	92
  1141     0395  3490               	retlw	144
  1142     0396  3401               	retlw	1
  1143     0397  3442               	retlw	66
  1144     0398  3460               	retlw	96
  1145     0399  344D               	retlw	77
  1146     039A  34BB               	retlw	187
  1147     039B  3440               	retlw	64
  1148     039C  3451               	retlw	81
  1149     039D  34EC               	retlw	236
  1150     039E  3447               	retlw	71
  1151     039F  343E               	retlw	62
  1152     03A0  34DE               	retlw	222
  1153     03A1  348D               	retlw	141
  1154     03A2  341F               	retlw	31
  1155     03A3  34BB               	retlw	187
  1156     03A4                     __end_ofatan@coeff_a:
  1157     03A4                     atan@coeff_b:
  1158     03A4  3406               	retlw	6
  1159     03A5  343C               	retlw	60
  1160     03A6  3404               	retlw	4
  1161     03A7  3442               	retlw	66
  1162     03A8  34C0               	retlw	192
  1163     03A9  3459               	retlw	89
  1164     03AA  348B               	retlw	139
  1165     03AB  3442               	retlw	66
  1166     03AC  3474               	retlw	116
  1167     03AD  3404               	retlw	4
  1168     03AE  3444               	retlw	68
  1169     03AF  3442               	retlw	66
  1170     03B0  34F9               	retlw	249
  1171     03B1  349B               	retlw	155
  1172     03B2  344F               	retlw	79
  1173     03B3  3441               	retlw	65
  1174     03B4  3400               	retlw	0
  1175     03B5  3400               	retlw	0
  1176     03B6  3480               	retlw	128
  1177     03B7  343F               	retlw	63
  1178     03B8                     __end_ofatan@coeff_b:
  1179     0006                     _PORTB	set	6
  1180     0001                     _TMR0	set	1
  1181     0013                     _SSPBUF	set	19
  1182     0014                     _SSPCONbits	set	20
  1183     0019                     _TXREG	set	25
  1184     001A                     _RCREG	set	26
  1185     0005                     _PORTA	set	5
  1186     0012                     _T2CONbits	set	18
  1187     001B                     _CCPR2L	set	27
  1188     001D                     _CCP2CONbits	set	29
  1189     0015                     _CCPR1L	set	21
  1190     0017                     _CCP1CONbits	set	23
  1191     001E                     _ADRESH	set	30
  1192     001F                     _ADCON0bits	set	31
  1193     005F                     _GIE	set	95
  1194     0058                     _RBIF	set	88
  1195     005A                     _T0IF	set	90
  1196     005A                     _TMR0IF	set	90
  1197     005D                     _TMR0IE	set	93
  1198     005D                     _T0IE	set	93
  1199     00A7                     _WCOL	set	167
  1200     00A4                     _CKP	set	164
  1201     00A5                     _SSPEN	set	165
  1202     0038                     _RC0	set	56
  1203     0065                     _RCIF	set	101
  1204     0064                     _TXIF	set	100
  1205     00C2                     _FERR	set	194
  1206     00C1                     _OERR	set	193
  1207     00C6                     _RX9	set	198
  1208     00C5                     _SREN	set	197
  1209     00C4                     _CREN	set	196
  1210     00C7                     _SPEN	set	199
  1211     0029                     _RA1	set	41
  1212     002E                     _RA6	set	46
  1213     002D                     _RA5	set	45
  1214     0092                     _TMR2ON	set	146
  1215     0061                     _TMR2IF	set	97
  1216     00ED                     _DC2B1	set	237
  1217     00EC                     _DC2B0	set	236
  1218     0030                     _RB0	set	48
  1219     005B                     _RBIE	set	91
  1220     00F9                     _GO	set	249
  1221     0066                     _ADIF	set	102
  1222     00F8                     _ADON	set	248
  1223     0081                     _OPTION_REGbits	set	129
  1224     0094                     _SSPSTATbits	set	148
  1225     0099                     _SPBRG	set	153
  1226     0085                     _TRISA	set	133
  1227     0092                     _PR2	set	146
  1228     009E                     _ADRESL	set	158
  1229     009F                     _ADCON1bits	set	159
  1230     04A7                     _SMP	set	1191
  1231     04A6                     _CKE	set	1190
  1232     043D                     _TRISC5	set	1085
  1233     043C                     _TRISC4	set	1084
  1234     043B                     _TRISC3	set	1083
  1235     0438                     _TRISC0	set	1080
  1236     04C5                     _TXEN	set	1221
  1237     04C6                     _TX9	set	1222
  1238     0465                     _RCIE	set	1125
  1239     0464                     _TXIE	set	1124
  1240     04C4                     _SYNC	set	1220
  1241     04C2                     _BRGH	set	1218
  1242     0439                     _TRISC1	set	1081
  1243     043A                     _TRISC2	set	1082
  1244     04B6                     _IOCB6	set	1206
  1245     04AE                     _WPUB6	set	1198
  1246     0436                     _TRISB6	set	1078
  1247     040F                     _nRBPU	set	1039
  1248     0466                     _ADIE	set	1126
  1249     0435                     _TRISB5	set	1077
  1250     0430                     _TRISB0	set	1072
  1251     0434                     _TRISB4	set	1076
  1252     0431                     _TRISB1	set	1073
  1253     0432                     _TRISB2	set	1074
  1254     042D                     _TRISA5	set	1069
  1255     042B                     _TRISA3	set	1067
  1256     042A                     _TRISA2	set	1066
  1257     0429                     _TRISA1	set	1065
  1258     0428                     _TRISA0	set	1064
  1259     0188                     _ANSEL	set	392
  1260     0C4D                     _ANS13	set	3149
  1261     0C4C                     _ANS12	set	3148
  1262     0C4B                     _ANS11	set	3147
  1263     0C4A                     _ANS10	set	3146
  1264     0C49                     _ANS9	set	3145
  1265     0C48                     _ANS8	set	3144
  1266     0C44                     _ANS4	set	3140
  1267     0C43                     _ANS3	set	3139
  1268     0C42                     _ANS2	set	3138
  1269     0C41                     _ANS1	set	3137
  1270     0C40                     _ANS0	set	3136
  1271     03B8                     STR_3:
  1272     03B8  344C               	retlw	76	;'L'
  1273     03B9  343A               	retlw	58	;':'
  1274     03BA  3420               	retlw	32	;' '
  1275     03BB  3425               	retlw	37	;'%'
  1276     03BC  3464               	retlw	100	;'d'
  1277     03BD  342D               	retlw	45	;'-'
  1278     03BE  3425               	retlw	37	;'%'
  1279     03BF  3464               	retlw	100	;'d'
  1280     03C0  342D               	retlw	45	;'-'
  1281     03C1  3425               	retlw	37	;'%'
  1282     03C2  3464               	retlw	100	;'d'
  1283     03C3  3400               	retlw	0
  1284     03C4                     STR_1:
  1285     03C4  3441               	retlw	65	;'A'
  1286     03C5  3474               	retlw	116	;'t'
  1287     03C6  3469               	retlw	105	;'i'
  1288     03C7  3476               	retlw	118	;'v'
  1289     03C8  3434               	retlw	52	;'4'
  1290     03C9  3400               	retlw	0
  1291     03CA                     STR_2:
  1292     03CA  3454               	retlw	84	;'T'
  1293     03CB  3436               	retlw	54	;'6'
  1294     03CC  3447               	retlw	71	;'G'
  1295     03CD  3430               	retlw	48	;'0'
  1296     03CE  3438               	retlw	56	;'8'
  1297     03CF  3400               	retlw	0
  1298                           
  1299                           	psect	cinit
  1300     000F                     start_initialization:	
  1301                           ; #config settings
  1302                           
  1303     000F                     __initialization:
  1304                           
  1305                           ; Initialize objects allocated to COMMON
  1306     000F  120A  118A  27EF  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
  1307     0014  00FB               	movwf	__pdataCOMMON& (0+127)
  1308                           
  1309                           ; Clear objects allocated to BANK0
  1310     0015  1383               	bcf	3,7	;select IRP bank0
  1311     0016  304B               	movlw	low __pbssBANK0
  1312     0017  0084               	movwf	4
  1313     0018  305B               	movlw	low (__pbssBANK0+16)
  1314     0019  120A  118A  27D1  120A  118A  	fcall	clear_ram0
  1315                           
  1316                           ; Clear objects allocated to COMMON
  1317     001E  01F6               	clrf	__pbssCOMMON& (0+127)
  1318     001F  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1319     0020  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1320     0021  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1321                           
  1322                           ; Clear objects allocated to BITCOMMON
  1323     0022  01FA               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  1324     0023                     end_of_initialization:	
  1325                           ;End of C runtime variable initialization code
  1326                           
  1327     0023                     __end_of__initialization:
  1328     0023  0183               	clrf	3
  1329     0024  120A  118A  2A34   	ljmp	_main	;jump to C main() function
  1330                           
  1331                           	psect	bitbssCOMMON
  1332     03D0                     __pbitbssCOMMON:
  1333     03D0                     _keyPressed:
  1334     03D0                     	ds	1
  1335                           
  1336                           	psect	bssCOMMON
  1337     0076                     __pbssCOMMON:
  1338     0076                     _dummy:
  1339     0076                     	ds	1
  1340     0077                     _keyStateChanged:
  1341     0077                     	ds	1
  1342     0078                     _debounce:
  1343     0078                     	ds	1
  1344     0079                     _delayus_variable:
  1345     0079                     	ds	1
  1346                           
  1347                           	psect	dataCOMMON
  1348     007B                     __pdataCOMMON:
  1349     007B                     key_read@key_old:
  1350     007B                     	ds	1
  1351                           
  1352                           	psect	bssBANK0
  1353     004B                     __pbssBANK0:
  1354     004B                     _n_press:
  1355     004B                     	ds	2
  1356     004D                     _Xcorr:
  1357     004D                     	ds	2
  1358     004F                     _Ycorr:
  1359     004F                     	ds	2
  1360     0051                     _lineSensor:
  1361     0051                     	ds	1
  1362     0052                     _sVar:
  1363     0052                     	ds	9
  1364                           
  1365                           	psect	clrtext
  1366     07D1                     clear_ram0:	
  1367                           ;	Called with FSR containing the base address, and
  1368                           ;	W with the last address+1
  1369                           
  1370     07D1  0064               	clrwdt	;clear the watchdog before getting into this loop
  1371     07D2                     clrloop0:
  1372     07D2  0180               	clrf	0	;clear RAM location pointed to by FSR
  1373     07D3  0A84               	incf	4,f	;increment pointer
  1374     07D4  0604               	xorwf	4,w	;XOR with final address
  1375     07D5  1903               	btfsc	3,2	;have we reached the end yet?
  1376     07D6  3400               	retlw	0	;all done for this memory range, return
  1377     07D7  0604               	xorwf	4,w	;XOR again to restore value
  1378     07D8  2FD2               	goto	clrloop0	;do the next byte
  1379                           
  1380                           	psect	cstackCOMMON
  1381     0070                     __pcstackCOMMON:
  1382     0070                     ?_spi_write:
  1383     0070                     ?_compass_set_datarate:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386     0070                     ?_compass_set_operativemode:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389     0070                     ?_compass_set_scale:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392     0070                     ?_delay_ms:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395     0070                     ?_spi_exchange:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398     0070                     ?_adc_init:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401     0070                     ?_battery_init:	
  1402                           ; 1 bytes @ 0x0
  1403                           
  1404     0070                     ?_compass_init:	
  1405                           ; 1 bytes @ 0x0
  1406                           
  1407     0070                     ?_delay_s:	
  1408                           ; 1 bytes @ 0x0
  1409                           
  1410     0070                     ?_key_init:	
  1411                           ; 1 bytes @ 0x0
  1412                           
  1413     0070                     ?_key_debounce:	
  1414                           ; 1 bytes @ 0x0
  1415                           
  1416     0070                     ?_key_read:	
  1417                           ; 1 bytes @ 0x0
  1418                           
  1419     0070                     ??_key_read:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422     0070                     ?_key_pressed:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425     0070                     ?_lcd_init:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428     0070                     ?_spi_send_command:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431     0070                     ?_spi_send_data:	
  1432                           ; 1 bytes @ 0x0
  1433                           
  1434     0070                     ?_lcd_clear:	
  1435                           ; 1 bytes @ 0x0
  1436                           
  1437     0070                     ?_lcd_goto:	
  1438                           ; 1 bytes @ 0x0
  1439                           
  1440     0070                     ?_lcd_putchar:	
  1441                           ; 1 bytes @ 0x0
  1442                           
  1443     0070                     ?_led_rgb_init:	
  1444                           ; 1 bytes @ 0x0
  1445                           
  1446     0070                     ?_led_rgb_set_color:	
  1447                           ; 1 bytes @ 0x0
  1448                           
  1449     0070                     ?_pwm_init:	
  1450                           ; 1 bytes @ 0x0
  1451                           
  1452     0070                     ?_sensor_power:	
  1453                           ; 1 bytes @ 0x0
  1454                           
  1455     0070                     ?_sensor_init:	
  1456                           ; 1 bytes @ 0x0
  1457                           
  1458     0070                     ?_serial_init:	
  1459                           ; 1 bytes @ 0x0
  1460                           
  1461     0070                     ?_spi_init:	
  1462                           ; 1 bytes @ 0x0
  1463                           
  1464     0070                     ?_t0_init:	
  1465                           ; 1 bytes @ 0x0
  1466                           
  1467     0070                     ?_welcome_message:	
  1468                           ; 1 bytes @ 0x0
  1469                           
  1470     0070                     ?_isr:	
  1471                           ; 1 bytes @ 0x0
  1472                           
  1473     0070                     ?_follow_line:	
  1474                           ; 1 bytes @ 0x0
  1475                           
  1476     0070                     ?_main:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479     0070                     key_debounce@cycles:	
  1480                           ; 1 bytes @ 0x0
  1481                           
  1482                           
  1483                           ; 2 bytes @ 0x0
  1484     0070                     	ds	1
  1485     0071                     key_read@port:
  1486                           
  1487                           ; 1 bytes @ 0x1
  1488     0071                     	ds	1
  1489     0072                     ??_key_debounce:
  1490     0072                     key_read@key:	
  1491                           ; 1 bytes @ 0x2
  1492                           
  1493                           
  1494                           ; 1 bytes @ 0x2
  1495     0072                     	ds	1
  1496     0073                     ??_isr:
  1497                           
  1498                           ; 1 bytes @ 0x3
  1499     0073                     	ds	2
  1500     0075                     isr@portB:
  1501                           
  1502                           ; 1 bytes @ 0x5
  1503     0075                     	ds	1
  1504                           
  1505                           	psect	cstackBANK0
  1506     0020                     __pcstackBANK0:
  1507     0020                     ??_delay_ms:
  1508     0020                     ??_spi_exchange:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511     0020                     ??_adc_init:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514     0020                     ??_battery_init:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517     0020                     ?_delay_big_us:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520     0020                     ??_key_init:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523     0020                     ??_key_pressed:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526     0020                     ??_lcd_init:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529     0020                     ??_led_rgb_init:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532     0020                     ??_pwm_init:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535     0020                     ?_pwm_set:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538     0020                     ?_pwm_direction:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541     0020                     ??_serial_init:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544     0020                     ??_spi_init:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547     0020                     ??_t0_init:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550     0020                     ?_adc_read:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553     0020                     ?___lwdiv:	
  1554                           ; 2 bytes @ 0x0
  1555                           
  1556     0020                     delay_ms@cnt:	
  1557                           ; 2 bytes @ 0x0
  1558                           
  1559     0020                     key_pressed@state:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562     0020                     spi_exchange@data:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565     0020                     delay_big_us@cnt:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568     0020                     pwm_set@channel:	
  1569                           ; 2 bytes @ 0x0
  1570                           
  1571     0020                     pwm_direction@dir:	
  1572                           ; 2 bytes @ 0x0
  1573                           
  1574     0020                     ___lwdiv@divisor:	
  1575                           ; 2 bytes @ 0x0
  1576                           
  1577                           
  1578                           ; 2 bytes @ 0x0
  1579     0020                     	ds	1
  1580     0021                     ??_spi_write:
  1581     0021                     ??_spi_send_command:	
  1582                           ; 1 bytes @ 0x1
  1583                           
  1584     0021                     ??_spi_send_data:	
  1585                           ; 1 bytes @ 0x1
  1586                           
  1587     0021                     ??_led_rgb_set_color:	
  1588                           ; 1 bytes @ 0x1
  1589                           
  1590     0021                     adc_init@adc_channel:	
  1591                           ; 1 bytes @ 0x1
  1592                           
  1593     0021                     delay_ms@i:	
  1594                           ; 1 bytes @ 0x1
  1595                           
  1596     0021                     spi_send_data@data:	
  1597                           ; 1 bytes @ 0x1
  1598                           
  1599     0021                     led_rgb_set_color@led_color:	
  1600                           ; 1 bytes @ 0x1
  1601                           
  1602     0021                     spi_write@data:	
  1603                           ; 1 bytes @ 0x1
  1604                           
  1605                           
  1606                           ; 1 bytes @ 0x1
  1607     0021                     	ds	1
  1608     0022                     ??_compass_set_datarate:
  1609     0022                     ??_compass_set_operativemode:	
  1610                           ; 1 bytes @ 0x2
  1611                           
  1612     0022                     ??_compass_set_scale:	
  1613                           ; 1 bytes @ 0x2
  1614                           
  1615     0022                     ??_adc_read:	
  1616                           ; 1 bytes @ 0x2
  1617                           
  1618     0022                     ??_delay_big_us:	
  1619                           ; 1 bytes @ 0x2
  1620                           
  1621     0022                     ??_delay_s:	
  1622                           ; 1 bytes @ 0x2
  1623                           
  1624     0022                     ??_pwm_direction:	
  1625                           ; 1 bytes @ 0x2
  1626                           
  1627     0022                     ??_sensor_power:	
  1628                           ; 1 bytes @ 0x2
  1629                           
  1630     0022                     ??_sensor_init:	
  1631                           ; 1 bytes @ 0x2
  1632                           
  1633     0022                     compass_set_operativemode@mode:	
  1634                           ; 1 bytes @ 0x2
  1635                           
  1636     0022                     compass_set_datarate@mode:	
  1637                           ; 1 bytes @ 0x2
  1638                           
  1639     0022                     compass_set_scale@scale:	
  1640                           ; 1 bytes @ 0x2
  1641                           
  1642     0022                     delay_big_us@i:	
  1643                           ; 1 bytes @ 0x2
  1644                           
  1645     0022                     delay_s@cnt:	
  1646                           ; 1 bytes @ 0x2
  1647                           
  1648     0022                     spi_send_command@command:	
  1649                           ; 1 bytes @ 0x2
  1650                           
  1651     0022                     led_rgb_set_color@command_byte:	
  1652                           ; 1 bytes @ 0x2
  1653                           
  1654     0022                     sensor_power@state:	
  1655                           ; 1 bytes @ 0x2
  1656                           
  1657     0022                     pwm_set@duty_cycle:	
  1658                           ; 1 bytes @ 0x2
  1659                           
  1660     0022                     ___lwdiv@dividend:	
  1661                           ; 2 bytes @ 0x2
  1662                           
  1663                           
  1664                           ; 2 bytes @ 0x2
  1665     0022                     	ds	1
  1666     0023                     ??_compass_init:
  1667     0023                     ?_sensorLine_read:	
  1668                           ; 1 bytes @ 0x3
  1669                           
  1670     0023                     delay_s@i:	
  1671                           ; 2 bytes @ 0x3
  1672                           
  1673     0023                     spi_send_command@command_byte:	
  1674                           ; 1 bytes @ 0x3
  1675                           
  1676     0023                     adc_read@adc_result:	
  1677                           ; 1 bytes @ 0x3
  1678                           
  1679                           
  1680                           ; 2 bytes @ 0x3
  1681     0023                     	ds	1
  1682     0024                     ??_lcd_clear:
  1683     0024                     ??_lcd_goto:	
  1684                           ; 1 bytes @ 0x4
  1685                           
  1686     0024                     ?_lcd_show_cursor:	
  1687                           ; 1 bytes @ 0x4
  1688                           
  1689     0024                     ??_lcd_putchar:	
  1690                           ; 1 bytes @ 0x4
  1691                           
  1692     0024                     ??_pwm_set:	
  1693                           ; 1 bytes @ 0x4
  1694                           
  1695     0024                     ??___lwdiv:	
  1696                           ; 1 bytes @ 0x4
  1697                           
  1698     0024                     lcd_goto@pos:	
  1699                           ; 1 bytes @ 0x4
  1700                           
  1701     0024                     lcd_putchar@c:	
  1702                           ; 1 bytes @ 0x4
  1703                           
  1704     0024                     lcd_show_cursor@on:	
  1705                           ; 1 bytes @ 0x4
  1706                           
  1707                           
  1708                           ; 2 bytes @ 0x4
  1709     0024                     	ds	1
  1710     0025                     ?_lcd_puts:
  1711     0025                     ??_sensorLine_read:	
  1712                           ; 1 bytes @ 0x5
  1713                           
  1714     0025                     adc_read@adc_channel:	
  1715                           ; 1 bytes @ 0x5
  1716                           
  1717     0025                     ___lwdiv@counter:	
  1718                           ; 1 bytes @ 0x5
  1719                           
  1720     0025                     lcd_puts@s:	
  1721                           ; 1 bytes @ 0x5
  1722                           
  1723                           
  1724                           ; 2 bytes @ 0x5
  1725     0025                     	ds	1
  1726     0026                     ??_lcd_show_cursor:
  1727     0026                     ?_sensorNear_read:	
  1728                           ; 1 bytes @ 0x6
  1729                           
  1730     0026                     ___lwdiv@quotient:	
  1731                           ; 2 bytes @ 0x6
  1732                           
  1733                           
  1734                           ; 2 bytes @ 0x6
  1735     0026                     	ds	1
  1736     0027                     ??_lcd_puts:
  1737     0027                     ??_welcome_message:	
  1738                           ; 1 bytes @ 0x7
  1739                           
  1740                           
  1741                           ; 1 bytes @ 0x7
  1742     0027                     	ds	1
  1743     0028                     ??_sensorNear_read:
  1744     0028                     ?_duty_cycle_control:	
  1745                           ; 1 bytes @ 0x8
  1746                           
  1747     0028                     ?___lwmod:	
  1748                           ; 2 bytes @ 0x8
  1749                           
  1750     0028                     sensorLine_read@line_reading:	
  1751                           ; 2 bytes @ 0x8
  1752                           
  1753     0028                     ___lwmod@divisor:	
  1754                           ; 2 bytes @ 0x8
  1755                           
  1756                           
  1757                           ; 2 bytes @ 0x8
  1758     0028                     	ds	2
  1759     002A                     ??_duty_cycle_control:
  1760     002A                     ___lwmod@dividend:	
  1761                           ; 1 bytes @ 0xA
  1762                           
  1763                           
  1764                           ; 2 bytes @ 0xA
  1765     002A                     	ds	2
  1766     002C                     ??___lwmod:
  1767     002C                     duty_cycle_control@dc:	
  1768                           ; 1 bytes @ 0xC
  1769                           
  1770                           
  1771                           ; 2 bytes @ 0xC
  1772     002C                     	ds	1
  1773     002D                     ___lwmod@counter:
  1774                           
  1775                           ; 1 bytes @ 0xD
  1776     002D                     	ds	1
  1777     002E                     ?_sprintf:
  1778     002E                     sprintf@f:	
  1779                           ; 2 bytes @ 0xE
  1780                           
  1781     002E                     duty_cycle_control@nearSensorData:	
  1782                           ; 1 bytes @ 0xE
  1783                           
  1784                           
  1785                           ; 2 bytes @ 0xE
  1786     002E                     	ds	7
  1787     0035                     ??_sprintf:
  1788                           
  1789                           ; 1 bytes @ 0x15
  1790     0035                     	ds	3
  1791     0038                     sprintf@ap:
  1792                           
  1793                           ; 1 bytes @ 0x18
  1794     0038                     	ds	1
  1795     0039                     sprintf@flag:
  1796                           
  1797                           ; 1 bytes @ 0x19
  1798     0039                     	ds	1
  1799     003A                     sprintf@prec:
  1800                           
  1801                           ; 1 bytes @ 0x1A
  1802     003A                     	ds	1
  1803     003B                     sprintf@val:
  1804                           
  1805                           ; 2 bytes @ 0x1B
  1806     003B                     	ds	2
  1807     003D                     sprintf@sp:
  1808                           
  1809                           ; 1 bytes @ 0x1D
  1810     003D                     	ds	1
  1811     003E                     sprintf@c:
  1812                           
  1813                           ; 1 bytes @ 0x1E
  1814     003E                     	ds	1
  1815     003F                     ??_follow_line:
  1816                           
  1817                           ; 1 bytes @ 0x1F
  1818     003F                     	ds	7
  1819     0046                     follow_line@duty_cycle:
  1820                           
  1821                           ; 2 bytes @ 0x26
  1822     0046                     	ds	2
  1823     0048                     follow_line@led_color:
  1824                           
  1825                           ; 2 bytes @ 0x28
  1826     0048                     	ds	2
  1827     004A                     ??_main:
  1828     004A                     main@keyIn:	
  1829                           ; 1 bytes @ 0x2A
  1830                           
  1831                           
  1832                           ; 1 bytes @ 0x2A
  1833     004A                     	ds	1
  1834                           
  1835                           	psect	maintext
  1836     0234                     __pmaintext:	
  1837 ;;
  1838 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1839 ;;
  1840 ;; *************** function _main *****************
  1841 ;; Defined at:
  1842 ;;		line 150 in file "main.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  keyIn           1   42[BANK0 ] unsigned char 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1851 ;; Tracked objects:
  1852 ;;		On entry : B00/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1856 ;;      Params:         0       0       0       0       0
  1857 ;;      Locals:         0       1       0       0       0
  1858 ;;      Temps:          0       0       0       0       0
  1859 ;;      Totals:         0       1       0       0       0
  1860 ;;Total ram usage:        1 bytes
  1861 ;; Hardware stack levels required when called: 7
  1862 ;; This function calls:
  1863 ;;		_battery_init
  1864 ;;		_compass_init
  1865 ;;		_delay_s
  1866 ;;		_follow_line
  1867 ;;		_key_init
  1868 ;;		_key_pressed
  1869 ;;		_lcd_clear
  1870 ;;		_lcd_init
  1871 ;;		_lcd_show_cursor
  1872 ;;		_led_rgb_init
  1873 ;;		_led_rgb_set_color
  1874 ;;		_pwm_init
  1875 ;;		_pwm_set
  1876 ;;		_sensor_init
  1877 ;;		_sensor_power
  1878 ;;		_serial_init
  1879 ;;		_spi_init
  1880 ;;		_t0_init
  1881 ;;		_welcome_message
  1882 ;; This function is called by:
  1883 ;;		Startup code after reset
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887     0234                     _main:	
  1888                           ;psect for function _main
  1889                           
  1890     0234                     l3672:	
  1891                           ;incstack = 0
  1892                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1893                           
  1894     0234                     l3674:
  1895                           
  1896                           ;main.c: 154: spi_init();
  1897     0234  120A  118A  2638  120A  118A  	fcall	_spi_init
  1898     0239                     l3676:
  1899                           
  1900                           ;main.c: 155: led_rgb_init();
  1901     0239  120A  118A  27F0  120A  118A  	fcall	_led_rgb_init
  1902     023E                     l3678:
  1903                           
  1904                           ;main.c: 156: battery_init();
  1905     023E  120A  118A  27F1  120A  118A  	fcall	_battery_init
  1906     0243                     l3680:
  1907                           
  1908                           ;main.c: 157: compass_init();
  1909     0243  120A  118A  26A3  120A  118A  	fcall	_compass_init
  1910     0248                     l3682:
  1911                           
  1912                           ;main.c: 158: lcd_init();
  1913     0248  120A  118A  27E1  120A  118A  	fcall	_lcd_init
  1914     024D                     l3684:
  1915                           
  1916                           ;main.c: 159: sensor_init();
  1917     024D  120A  118A  2689  120A  118A  	fcall	_sensor_init
  1918     0252                     l3686:
  1919                           
  1920                           ;main.c: 161: t0_init();
  1921     0252  120A  118A  27A5  120A  118A  	fcall	_t0_init
  1922     0257                     l3688:
  1923                           
  1924                           ;main.c: 162: serial_init();
  1925     0257  120A  118A  26BC  120A  118A  	fcall	_serial_init
  1926     025C                     l3690:
  1927                           
  1928                           ;main.c: 163: pwm_init();
  1929     025C  120A  118A  25D7  120A  118A  	fcall	_pwm_init
  1930     0261                     l3692:
  1931                           
  1932                           ;main.c: 164: key_init();
  1933     0261  120A  118A  27D9  120A  118A  	fcall	_key_init
  1934     0266                     l3694:
  1935                           
  1936                           ;main.c: 165: led_rgb_init();
  1937     0266  120A  118A  27F0  120A  118A  	fcall	_led_rgb_init
  1938     026B                     l3696:
  1939                           
  1940                           ;main.c: 167: GIE = 1;
  1941     026B  178B               	bsf	11,7	;volatile
  1942     026C                     l3698:
  1943                           
  1944                           ;main.c: 168: sensor_power(1);
  1945     026C  3001               	movlw	1
  1946     026D  120A  118A  26EA  120A  118A  	fcall	_sensor_power
  1947     0272                     l3700:
  1948                           
  1949                           ;main.c: 170: delay_s(2);
  1950     0272  3002               	movlw	2
  1951     0273  120A  118A  2653  120A  118A  	fcall	_delay_s
  1952     0278                     l3702:
  1953                           
  1954                           ;main.c: 171: lcd_clear();
  1955     0278  120A  118A  27E8  120A  118A  	fcall	_lcd_clear
  1956     027D                     l3704:
  1957                           
  1958                           ;main.c: 172: lcd_show_cursor(0);
  1959     027D  3000               	movlw	0
  1960     027E  1283               	bcf	3,5	;RP0=0, select bank0
  1961     027F  1303               	bcf	3,6	;RP1=0, select bank0
  1962     0280  00A4               	movwf	lcd_show_cursor@on
  1963     0281  00A5               	movwf	lcd_show_cursor@on+1
  1964     0282  120A  118A  26D4  120A  118A  	fcall	_lcd_show_cursor
  1965     0287                     l3706:
  1966                           
  1967                           ;main.c: 174: welcome_message();
  1968     0287  120A  118A  255D  120A  118A  	fcall	_welcome_message
  1969     028C                     l3708:
  1970                           
  1971                           ;main.c: 175: lcd_clear();
  1972     028C  120A  118A  27E8  120A  118A  	fcall	_lcd_clear
  1973     0291                     l3710:
  1974                           
  1975                           ;main.c: 178: keyIn = key_pressed();
  1976     0291  120A  118A  27B1  120A  118A  	fcall	_key_pressed
  1977     0296  1283               	bcf	3,5	;RP0=0, select bank0
  1978     0297  1303               	bcf	3,6	;RP1=0, select bank0
  1979     0298  00CA               	movwf	main@keyIn
  1980     0299                     l3712:
  1981                           
  1982                           ;main.c: 179: if(keyIn){
  1983     0299  084A               	movf	main@keyIn,w
  1984     029A  1903               	btfsc	3,2
  1985     029B  2A9D               	goto	u2271
  1986     029C  2A9E               	goto	u2270
  1987     029D                     u2271:
  1988     029D  2AA4               	goto	l3716
  1989     029E                     u2270:
  1990     029E                     l3714:
  1991                           
  1992                           ;main.c: 180: n_press += 1;
  1993     029E  3001               	movlw	1
  1994     029F  07CB               	addwf	_n_press,f	;volatile
  1995     02A0  1803               	skipnc
  1996     02A1  0ACC               	incf	_n_press+1,f	;volatile
  1997     02A2  3000               	movlw	0
  1998     02A3  07CC               	addwf	_n_press+1,f	;volatile
  1999     02A4                     l3716:
  2000                           
  2001                           ;main.c: 181: };main.c: 182: if(!(n_press % 2)){
  2002     02A4  184B               	btfsc	_n_press,0	;volatile
  2003     02A5  2AA7               	goto	u2281
  2004     02A6  2AA8               	goto	u2280
  2005     02A7                     u2281:
  2006     02A7  2AAE               	goto	l687
  2007     02A8                     u2280:
  2008     02A8                     l3718:
  2009                           
  2010                           ;main.c: 183: follow_line();
  2011     02A8  120A  118A  2027  120A  118A  	fcall	_follow_line
  2012                           
  2013                           ;main.c: 184: }
  2014     02AD  2A91               	goto	l3710
  2015     02AE                     l687:
  2016                           
  2017                           ;main.c: 185: else if(n_press % 2 && n_press > 0){
  2018     02AE  1C4B               	btfss	_n_press,0	;volatile
  2019     02AF  2AB1               	goto	u2291
  2020     02B0  2AB2               	goto	u2290
  2021     02B1                     u2291:
  2022     02B1  2A91               	goto	l3710
  2023     02B2                     u2290:
  2024     02B2                     l3720:
  2025     02B2  084C               	movf	_n_press+1,w	;volatile
  2026     02B3  3A80               	xorlw	128
  2027     02B4  00FF               	movwf	btemp+1
  2028     02B5  3080               	movlw	128
  2029     02B6  027F               	subwf	btemp+1,w
  2030     02B7  1D03               	skipz
  2031     02B8  2ABB               	goto	u2305
  2032     02B9  3001               	movlw	1
  2033     02BA  024B               	subwf	_n_press,w	;volatile
  2034     02BB                     u2305:
  2035     02BB  1C03               	skipc
  2036     02BC  2ABE               	goto	u2301
  2037     02BD  2ABF               	goto	u2300
  2038     02BE                     u2301:
  2039     02BE  2A91               	goto	l3710
  2040     02BF                     u2300:
  2041     02BF                     l3722:
  2042                           
  2043                           ;main.c: 186: pwm_set(1, 0);
  2044     02BF  3001               	movlw	1
  2045     02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2046     02C1  1303               	bcf	3,6	;RP1=0, select bank0
  2047     02C2  00A0               	movwf	pwm_set@channel
  2048     02C3  3000               	movlw	0
  2049     02C4  00A1               	movwf	pwm_set@channel+1
  2050     02C5  3000               	movlw	0
  2051     02C6  00A2               	movwf	pwm_set@duty_cycle
  2052     02C7  00A3               	movwf	pwm_set@duty_cycle+1
  2053     02C8  120A  118A  2586  120A  118A  	fcall	_pwm_set
  2054                           
  2055                           ;main.c: 187: pwm_set(2, 0);
  2056     02CD  3002               	movlw	2
  2057     02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2058     02CF  1303               	bcf	3,6	;RP1=0, select bank0
  2059     02D0  00A0               	movwf	pwm_set@channel
  2060     02D1  3000               	movlw	0
  2061     02D2  00A1               	movwf	pwm_set@channel+1
  2062     02D3  3000               	movlw	0
  2063     02D4  00A2               	movwf	pwm_set@duty_cycle
  2064     02D5  00A3               	movwf	pwm_set@duty_cycle+1
  2065     02D6  120A  118A  2586  120A  118A  	fcall	_pwm_set
  2066                           
  2067                           ;main.c: 188: led_rgb_set_color(0);
  2068     02DB  3000               	movlw	0
  2069     02DC  120A  118A  278A  120A  118A  	fcall	_led_rgb_set_color
  2070     02E1  2A91               	goto	l3710
  2071     02E2  120A  118A  280C   	ljmp	start
  2072     02E5                     __end_of_main:
  2073                           
  2074                           	psect	text1
  2075     055D                     __ptext1:	
  2076 ;; *************** function _welcome_message *****************
  2077 ;; Defined at:
  2078 ;;		line 60 in file "main.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;		None
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;		None
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  1    wreg      void 
  2085 ;; Registers used:
  2086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2092 ;;      Params:         0       0       0       0       0
  2093 ;;      Locals:         0       0       0       0       0
  2094 ;;      Temps:          0       0       0       0       0
  2095 ;;      Totals:         0       0       0       0       0
  2096 ;;Total ram usage:        0 bytes
  2097 ;; Hardware stack levels used: 1
  2098 ;; Hardware stack levels required when called: 6
  2099 ;; This function calls:
  2100 ;;		_delay_ms
  2101 ;;		_lcd_goto
  2102 ;;		_lcd_puts
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108     055D                     _welcome_message:	
  2109                           ;psect for function _welcome_message
  2110                           
  2111     055D                     l3432:	
  2112                           ;incstack = 0
  2113                           ; Regs used in _welcome_message: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2114                           
  2115                           
  2116                           ;main.c: 61: lcd_goto(0);
  2117     055D  3000               	movlw	0
  2118     055E  120A  118A  270E  120A  118A  	fcall	_lcd_goto
  2119     0563                     l3434:
  2120                           
  2121                           ;main.c: 62: lcd_puts("Ativ4");
  2122     0563  3043               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2123     0564  1283               	bcf	3,5	;RP0=0, select bank0
  2124     0565  1303               	bcf	3,6	;RP1=0, select bank0
  2125     0566  00A5               	movwf	lcd_puts@s
  2126     0567  3080               	movlw	128
  2127     0568  00A6               	movwf	lcd_puts@s+1
  2128     0569  120A  118A  25AF  120A  118A  	fcall	_lcd_puts
  2129     056E                     l3436:
  2130                           
  2131                           ;main.c: 63: delay_ms(1);
  2132     056E  3001               	movlw	1
  2133     056F  120A  118A  266E  120A  118A  	fcall	_delay_ms
  2134     0574                     l3438:
  2135                           
  2136                           ;main.c: 64: lcd_goto(64);
  2137     0574  3040               	movlw	64
  2138     0575  120A  118A  270E  120A  118A  	fcall	_lcd_goto
  2139     057A                     l3440:
  2140                           
  2141                           ;main.c: 65: lcd_puts("T6G08");
  2142     057A  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2143     057B  1283               	bcf	3,5	;RP0=0, select bank0
  2144     057C  1303               	bcf	3,6	;RP1=0, select bank0
  2145     057D  00A5               	movwf	lcd_puts@s
  2146     057E  3080               	movlw	128
  2147     057F  00A6               	movwf	lcd_puts@s+1
  2148     0580  120A  118A  25AF  120A  118A  	fcall	_lcd_puts
  2149     0585                     l639:
  2150     0585  0008               	return
  2151     0586                     __end_of_welcome_message:
  2152                           
  2153                           	psect	text2
  2154     07A5                     __ptext2:	
  2155 ;; *************** function _t0_init *****************
  2156 ;; Defined at:
  2157 ;;		line 50 in file "main.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, status,2, status,0
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2171 ;;      Params:         0       0       0       0       0
  2172 ;;      Locals:         0       0       0       0       0
  2173 ;;      Temps:          0       0       0       0       0
  2174 ;;      Totals:         0       0       0       0       0
  2175 ;;Total ram usage:        0 bytes
  2176 ;; Hardware stack levels used: 1
  2177 ;; Hardware stack levels required when called: 2
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_main
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185     07A5                     _t0_init:	
  2186                           ;psect for function _t0_init
  2187                           
  2188     07A5                     l3424:	
  2189                           ;incstack = 0
  2190                           ; Regs used in _t0_init: [wreg+status,2+status,0]
  2191                           
  2192                           
  2193                           ;main.c: 52: OPTION_REGbits.T0CS = 0;
  2194     07A5  1683               	bsf	3,5	;RP0=1, select bank1
  2195     07A6  1303               	bcf	3,6	;RP1=0, select bank1
  2196     07A7  1281               	bcf	1,5	;volatile
  2197                           
  2198                           ;main.c: 53: OPTION_REGbits.PSA = 0;
  2199     07A8  1181               	bcf	1,3	;volatile
  2200     07A9                     l3426:
  2201                           
  2202                           ;main.c: 54: OPTION_REGbits.PS = 7;
  2203     07A9  3007               	movlw	7
  2204     07AA  0481               	iorwf	1,f	;volatile
  2205     07AB                     l3428:
  2206                           
  2207                           ;main.c: 55: TMR0 = 0xff - 98;
  2208     07AB  309D               	movlw	157
  2209     07AC  1283               	bcf	3,5	;RP0=0, select bank0
  2210     07AD  1303               	bcf	3,6	;RP1=0, select bank0
  2211     07AE  0081               	movwf	1	;volatile
  2212     07AF                     l3430:
  2213                           
  2214                           ;main.c: 56: T0IE = 1;
  2215     07AF  168B               	bsf	11,5	;volatile
  2216     07B0                     l636:
  2217     07B0  0008               	return
  2218     07B1                     __end_of_t0_init:
  2219                           
  2220                           	psect	text3
  2221     0638                     __ptext3:	
  2222 ;; *************** function _spi_init *****************
  2223 ;; Defined at:
  2224 ;;		line 23 in file "spi.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;		None
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2238 ;;      Params:         0       0       0       0       0
  2239 ;;      Locals:         0       0       0       0       0
  2240 ;;      Temps:          0       0       0       0       0
  2241 ;;      Totals:         0       0       0       0       0
  2242 ;;Total ram usage:        0 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; Hardware stack levels required when called: 2
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_main
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252     0638                     _spi_init:	
  2253                           ;psect for function _spi_init
  2254                           
  2255     0638                     l3418:	
  2256                           ;incstack = 0
  2257                           ; Regs used in _spi_init: [wreg+status,2+status,0]
  2258                           
  2259                           
  2260                           ;spi.c: 24: ANS12 = 0;
  2261     0638  1683               	bsf	3,5	;RP0=1, select bank3
  2262     0639  1703               	bsf	3,6	;RP1=1, select bank3
  2263     063A  1209               	bcf	9,4	;volatile
  2264                           
  2265                           ;spi.c: 25: TRISB0 = 1;
  2266     063B  1683               	bsf	3,5	;RP0=1, select bank1
  2267     063C  1303               	bcf	3,6	;RP1=0, select bank1
  2268     063D  1406               	bsf	6,0	;volatile
  2269                           
  2270                           ;spi.c: 26: TRISC0 = 0;
  2271     063E  1007               	bcf	7,0	;volatile
  2272                           
  2273                           ;spi.c: 27: TRISC3 = 0;
  2274     063F  1187               	bcf	7,3	;volatile
  2275                           
  2276                           ;spi.c: 28: TRISC4 = 1;
  2277     0640  1607               	bsf	7,4	;volatile
  2278                           
  2279                           ;spi.c: 29: TRISC5 = 0;
  2280     0641  1287               	bcf	7,5	;volatile
  2281                           
  2282                           ;spi.c: 30: RC0 = 1;
  2283     0642  1283               	bcf	3,5	;RP0=0, select bank0
  2284     0643  1303               	bcf	3,6	;RP1=0, select bank0
  2285     0644  1407               	bsf	7,0	;volatile
  2286                           
  2287                           ;spi.c: 31: SSPEN = 0;
  2288     0645  1294               	bcf	20,5	;volatile
  2289                           
  2290                           ;spi.c: 32: CKP = 0;
  2291     0646  1214               	bcf	20,4	;volatile
  2292                           
  2293                           ;spi.c: 33: CKE = 0;
  2294     0647  1683               	bsf	3,5	;RP0=1, select bank1
  2295     0648  1303               	bcf	3,6	;RP1=0, select bank1
  2296     0649  1314               	bcf	20,6	;volatile
  2297                           
  2298                           ;spi.c: 34: SMP = 0;
  2299     064A  1394               	bcf	20,7	;volatile
  2300     064B                     l3420:
  2301                           
  2302                           ;spi.c: 35: SSPCONbits.SSPM = 1;
  2303     064B  1283               	bcf	3,5	;RP0=0, select bank0
  2304     064C  1303               	bcf	3,6	;RP1=0, select bank0
  2305     064D  0814               	movf	20,w	;volatile
  2306     064E  39F0               	andlw	-16
  2307     064F  3801               	iorlw	1
  2308     0650  0094               	movwf	20	;volatile
  2309     0651                     l3422:
  2310                           
  2311                           ;spi.c: 36: SSPEN = 1;
  2312     0651  1694               	bsf	20,5	;volatile
  2313     0652                     l542:
  2314     0652  0008               	return
  2315     0653                     __end_of_spi_init:
  2316                           
  2317                           	psect	text4
  2318     06BC                     __ptext4:	
  2319 ;; *************** function _serial_init *****************
  2320 ;; Defined at:
  2321 ;;		line 29 in file "serial.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      void 
  2328 ;; Registers used:
  2329 ;;		wreg
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2335 ;;      Params:         0       0       0       0       0
  2336 ;;      Locals:         0       0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0
  2338 ;;      Totals:         0       0       0       0       0
  2339 ;;Total ram usage:        0 bytes
  2340 ;; Hardware stack levels used: 1
  2341 ;; Hardware stack levels required when called: 2
  2342 ;; This function calls:
  2343 ;;		Nothing
  2344 ;; This function is called by:
  2345 ;;		_main
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349     06BC                     _serial_init:	
  2350                           ;psect for function _serial_init
  2351                           
  2352     06BC                     l3394:	
  2353                           ;incstack = 0
  2354                           ; Regs used in _serial_init: [wreg]
  2355                           
  2356                           
  2357                           ;serial.c: 65: SPBRG=((20000000/(16UL * 19200) -1));
  2358     06BC  3040               	movlw	64
  2359     06BD  1683               	bsf	3,5	;RP0=1, select bank1
  2360     06BE  1303               	bcf	3,6	;RP1=0, select bank1
  2361     06BF  0099               	movwf	25	;volatile
  2362     06C0                     l3396:
  2363                           
  2364                           ;serial.c: 66: BRGH=1;
  2365     06C0  1518               	bsf	24,2	;volatile
  2366     06C1                     l3398:
  2367                           
  2368                           ;serial.c: 67: SYNC=0;
  2369     06C1  1218               	bcf	24,4	;volatile
  2370     06C2                     l3400:
  2371                           
  2372                           ;serial.c: 68: SPEN=1;
  2373     06C2  1283               	bcf	3,5	;RP0=0, select bank0
  2374     06C3  1303               	bcf	3,6	;RP1=0, select bank0
  2375     06C4  1798               	bsf	24,7	;volatile
  2376     06C5                     l3402:
  2377                           
  2378                           ;serial.c: 69: CREN=1;
  2379     06C5  1618               	bsf	24,4	;volatile
  2380     06C6                     l3404:
  2381                           
  2382                           ;serial.c: 70: SREN=0;
  2383     06C6  1298               	bcf	24,5	;volatile
  2384     06C7                     l3406:
  2385                           
  2386                           ;serial.c: 71: TXIE=0;
  2387     06C7  1683               	bsf	3,5	;RP0=1, select bank1
  2388     06C8  1303               	bcf	3,6	;RP1=0, select bank1
  2389     06C9  120C               	bcf	12,4	;volatile
  2390     06CA                     l3408:
  2391                           
  2392                           ;serial.c: 72: RCIE=0;
  2393     06CA  128C               	bcf	12,5	;volatile
  2394     06CB                     l3410:
  2395                           
  2396                           ;serial.c: 73: TX9=0;
  2397     06CB  1318               	bcf	24,6	;volatile
  2398     06CC                     l3412:
  2399                           
  2400                           ;serial.c: 74: RX9=0;
  2401     06CC  1283               	bcf	3,5	;RP0=0, select bank0
  2402     06CD  1303               	bcf	3,6	;RP1=0, select bank0
  2403     06CE  1318               	bcf	24,6	;volatile
  2404     06CF                     l3414:
  2405                           
  2406                           ;serial.c: 75: TXEN=0;
  2407     06CF  1683               	bsf	3,5	;RP0=1, select bank1
  2408     06D0  1303               	bcf	3,6	;RP1=0, select bank1
  2409     06D1  1298               	bcf	24,5	;volatile
  2410     06D2                     l3416:
  2411                           
  2412                           ;serial.c: 76: TXEN=1;
  2413     06D2  1698               	bsf	24,5	;volatile
  2414     06D3                     l443:
  2415     06D3  0008               	return
  2416     06D4                     __end_of_serial_init:
  2417                           
  2418                           	psect	text5
  2419     06EA                     __ptext5:	
  2420 ;; *************** function _sensor_power *****************
  2421 ;; Defined at:
  2422 ;;		line 25 in file "sensor.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  state           1    wreg     unsigned char 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  state           1    2[BANK0 ] unsigned char 
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0, pclath, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2436 ;;      Params:         0       0       0       0       0
  2437 ;;      Locals:         0       1       0       0       0
  2438 ;;      Temps:          0       0       0       0       0
  2439 ;;      Totals:         0       1       0       0       0
  2440 ;;Total ram usage:        1 bytes
  2441 ;; Hardware stack levels used: 1
  2442 ;; Hardware stack levels required when called: 3
  2443 ;; This function calls:
  2444 ;;		_delay_ms
  2445 ;; This function is called by:
  2446 ;;		_main
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450     06EA                     _sensor_power:	
  2451                           ;psect for function _sensor_power
  2452                           
  2453                           
  2454                           ;incstack = 0
  2455                           ; Regs used in _sensor_power: [wreg+status,2+status,0+pclath+cstack]
  2456                           ;sensor_power@state stored from wreg
  2457     06EA  1283               	bcf	3,5	;RP0=0, select bank0
  2458     06EB  1303               	bcf	3,6	;RP1=0, select bank0
  2459     06EC  00A2               	movwf	sensor_power@state
  2460     06ED                     l3378:
  2461                           
  2462                           ;sensor.c: 26: if(state == 1) {
  2463     06ED  0322               	decf	sensor_power@state,w
  2464     06EE  1D03               	btfss	3,2
  2465     06EF  2EF1               	goto	u2081
  2466     06F0  2EF2               	goto	u2080
  2467     06F1                     u2081:
  2468     06F1  2EFA               	goto	l393
  2469     06F2                     u2080:
  2470     06F2                     l3380:
  2471                           
  2472                           ;sensor.c: 27: RA1 = 1;
  2473     06F2  1485               	bsf	5,1	;volatile
  2474     06F3                     l3382:
  2475                           
  2476                           ;sensor.c: 28: delay_ms(50);
  2477     06F3  3032               	movlw	50
  2478     06F4  120A  118A  266E  120A  118A  	fcall	_delay_ms
  2479                           
  2480                           ;sensor.c: 29: } else RA1 = 0;
  2481     06F9  2EFB               	goto	l395
  2482     06FA                     l393:
  2483     06FA  1085               	bcf	5,1	;volatile
  2484     06FB                     l395:
  2485     06FB  0008               	return
  2486     06FC                     __end_of_sensor_power:
  2487                           
  2488                           	psect	text6
  2489     0689                     __ptext6:	
  2490 ;; *************** function _sensor_init *****************
  2491 ;; Defined at:
  2492 ;;		line 37 in file "sensor.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;		None
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      void 
  2499 ;; Registers used:
  2500 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2506 ;;      Params:         0       0       0       0       0
  2507 ;;      Locals:         0       0       0       0       0
  2508 ;;      Temps:          0       1       0       0       0
  2509 ;;      Totals:         0       1       0       0       0
  2510 ;;Total ram usage:        1 bytes
  2511 ;; Hardware stack levels used: 1
  2512 ;; Hardware stack levels required when called: 3
  2513 ;; This function calls:
  2514 ;;		_adc_init
  2515 ;; This function is called by:
  2516 ;;		_main
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520     0689                     _sensor_init:	
  2521                           ;psect for function _sensor_init
  2522                           
  2523     0689                     l3384:	
  2524                           ;incstack = 0
  2525                           ; Regs used in _sensor_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2526                           
  2527                           
  2528                           ;sensor.c: 40: ANS1 = 0;
  2529     0689  1683               	bsf	3,5	;RP0=1, select bank3
  2530     068A  1703               	bsf	3,6	;RP1=1, select bank3
  2531     068B  1088               	bcf	8,1	;volatile
  2532                           
  2533                           ;sensor.c: 41: TRISA1 = 0;
  2534     068C  1683               	bsf	3,5	;RP0=1, select bank1
  2535     068D  1303               	bcf	3,6	;RP1=0, select bank1
  2536     068E  1085               	bcf	5,1	;volatile
  2537                           
  2538                           ;sensor.c: 42: RA1 = 0;
  2539     068F  1283               	bcf	3,5	;RP0=0, select bank0
  2540     0690  1303               	bcf	3,6	;RP1=0, select bank0
  2541     0691  1085               	bcf	5,1	;volatile
  2542     0692                     l3386:
  2543                           
  2544                           ;sensor.c: 45: ANSEL &= 0b11100011;
  2545     0692  30E3               	movlw	227
  2546     0693  00A2               	movwf	??_sensor_init
  2547     0694  0822               	movf	??_sensor_init,w
  2548     0695  1683               	bsf	3,5	;RP0=1, select bank3
  2549     0696  1703               	bsf	3,6	;RP1=1, select bank3
  2550     0697  0588               	andwf	8,f	;volatile
  2551     0698                     l3388:
  2552                           
  2553                           ;sensor.c: 48: ANS0 = 1;
  2554     0698  1408               	bsf	8,0	;volatile
  2555     0699                     l3390:
  2556                           
  2557                           ;sensor.c: 49: TRISA0 = 1;
  2558     0699  1683               	bsf	3,5	;RP0=1, select bank1
  2559     069A  1303               	bcf	3,6	;RP1=0, select bank1
  2560     069B  1405               	bsf	5,0	;volatile
  2561     069C                     l3392:
  2562                           
  2563                           ;sensor.c: 50: adc_init(0);
  2564     069C  3000               	movlw	0
  2565     069D  120A  118A  22E5  120A  118A  	fcall	_adc_init
  2566     06A2                     l398:
  2567     06A2  0008               	return
  2568     06A3                     __end_of_sensor_init:
  2569                           
  2570                           	psect	text7
  2571     02E5                     __ptext7:	
  2572 ;; *************** function _adc_init *****************
  2573 ;; Defined at:
  2574 ;;		line 20 in file "adc.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  adc_channel     1    wreg     unsigned char 
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  adc_channel     1    1[BANK0 ] unsigned char 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2588 ;;      Params:         0       0       0       0       0
  2589 ;;      Locals:         0       1       0       0       0
  2590 ;;      Temps:          0       1       0       0       0
  2591 ;;      Totals:         0       2       0       0       0
  2592 ;;Total ram usage:        2 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; Hardware stack levels required when called: 2
  2595 ;; This function calls:
  2596 ;;		Nothing
  2597 ;; This function is called by:
  2598 ;;		_sensor_init
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602     02E5                     _adc_init:	
  2603                           ;psect for function _adc_init
  2604                           
  2605                           
  2606                           ;incstack = 0
  2607                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0]
  2608                           ;adc_init@adc_channel stored from wreg
  2609     02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2610     02E6  1303               	bcf	3,6	;RP1=0, select bank0
  2611     02E7  00A1               	movwf	adc_init@adc_channel
  2612     02E8                     l3122:
  2613                           
  2614                           ;adc.c: 22: switch (adc_channel) {
  2615     02E8  2B36               	goto	l3126
  2616     02E9                     l62:	
  2617                           ;adc.c: 23: case 0:
  2618                           
  2619                           
  2620                           ;adc.c: 24: TRISA0 = 1;
  2621     02E9  1683               	bsf	3,5	;RP0=1, select bank1
  2622     02EA  1303               	bcf	3,6	;RP1=0, select bank1
  2623     02EB  1405               	bsf	5,0	;volatile
  2624                           
  2625                           ;adc.c: 25: ANS0 = 1;
  2626     02EC  1683               	bsf	3,5	;RP0=1, select bank3
  2627     02ED  1703               	bsf	3,6	;RP1=1, select bank3
  2628     02EE  1408               	bsf	8,0	;volatile
  2629                           
  2630                           ;adc.c: 26: break;
  2631     02EF  2B59               	goto	l3128
  2632     02F0                     l64:	
  2633                           ;adc.c: 27: case 1:
  2634                           
  2635                           
  2636                           ;adc.c: 28: TRISA1 = 1;
  2637     02F0  1683               	bsf	3,5	;RP0=1, select bank1
  2638     02F1  1303               	bcf	3,6	;RP1=0, select bank1
  2639     02F2  1485               	bsf	5,1	;volatile
  2640                           
  2641                           ;adc.c: 29: ANS1 = 1;
  2642     02F3  1683               	bsf	3,5	;RP0=1, select bank3
  2643     02F4  1703               	bsf	3,6	;RP1=1, select bank3
  2644     02F5  1488               	bsf	8,1	;volatile
  2645                           
  2646                           ;adc.c: 30: break;
  2647     02F6  2B59               	goto	l3128
  2648     02F7                     l65:	
  2649                           ;adc.c: 31: case 2:
  2650                           
  2651                           
  2652                           ;adc.c: 32: TRISA2 = 1;
  2653     02F7  1683               	bsf	3,5	;RP0=1, select bank1
  2654     02F8  1303               	bcf	3,6	;RP1=0, select bank1
  2655     02F9  1505               	bsf	5,2	;volatile
  2656                           
  2657                           ;adc.c: 33: ANS2 = 1;
  2658     02FA  1683               	bsf	3,5	;RP0=1, select bank3
  2659     02FB  1703               	bsf	3,6	;RP1=1, select bank3
  2660     02FC  1508               	bsf	8,2	;volatile
  2661                           
  2662                           ;adc.c: 34: break;
  2663     02FD  2B59               	goto	l3128
  2664     02FE                     l66:	
  2665                           ;adc.c: 35: case 3:
  2666                           
  2667                           
  2668                           ;adc.c: 36: TRISA3 = 1;
  2669     02FE  1683               	bsf	3,5	;RP0=1, select bank1
  2670     02FF  1303               	bcf	3,6	;RP1=0, select bank1
  2671     0300  1585               	bsf	5,3	;volatile
  2672                           
  2673                           ;adc.c: 37: ANS3 = 1;
  2674     0301  1683               	bsf	3,5	;RP0=1, select bank3
  2675     0302  1703               	bsf	3,6	;RP1=1, select bank3
  2676     0303  1588               	bsf	8,3	;volatile
  2677                           
  2678                           ;adc.c: 38: break;
  2679     0304  2B59               	goto	l3128
  2680     0305                     l67:	
  2681                           ;adc.c: 39: case 4:
  2682                           
  2683                           
  2684                           ;adc.c: 40: TRISA5 = 1;
  2685     0305  1683               	bsf	3,5	;RP0=1, select bank1
  2686     0306  1303               	bcf	3,6	;RP1=0, select bank1
  2687     0307  1685               	bsf	5,5	;volatile
  2688                           
  2689                           ;adc.c: 41: ANS4 = 1;
  2690     0308  1683               	bsf	3,5	;RP0=1, select bank3
  2691     0309  1703               	bsf	3,6	;RP1=1, select bank3
  2692     030A  1608               	bsf	8,4	;volatile
  2693                           
  2694                           ;adc.c: 42: break;
  2695     030B  2B59               	goto	l3128
  2696     030C                     l68:	
  2697                           ;adc.c: 43: case 8:
  2698                           
  2699                           
  2700                           ;adc.c: 44: TRISB2 = 1;
  2701     030C  1683               	bsf	3,5	;RP0=1, select bank1
  2702     030D  1303               	bcf	3,6	;RP1=0, select bank1
  2703     030E  1506               	bsf	6,2	;volatile
  2704                           
  2705                           ;adc.c: 45: ANS8 = 1;
  2706     030F  1683               	bsf	3,5	;RP0=1, select bank3
  2707     0310  1703               	bsf	3,6	;RP1=1, select bank3
  2708     0311  1409               	bsf	9,0	;volatile
  2709                           
  2710                           ;adc.c: 46: break;
  2711     0312  2B59               	goto	l3128
  2712     0313                     l69:	
  2713                           ;adc.c: 47: case 9:
  2714                           
  2715                           
  2716                           ;adc.c: 48: TRISB2 = 1;
  2717     0313  1683               	bsf	3,5	;RP0=1, select bank1
  2718     0314  1303               	bcf	3,6	;RP1=0, select bank1
  2719     0315  1506               	bsf	6,2	;volatile
  2720                           
  2721                           ;adc.c: 49: ANS9 = 1;
  2722     0316  1683               	bsf	3,5	;RP0=1, select bank3
  2723     0317  1703               	bsf	3,6	;RP1=1, select bank3
  2724     0318  1489               	bsf	9,1	;volatile
  2725                           
  2726                           ;adc.c: 50: break;
  2727     0319  2B59               	goto	l3128
  2728     031A                     l70:	
  2729                           ;adc.c: 51: case 10:
  2730                           
  2731                           
  2732                           ;adc.c: 52: TRISB1 = 1;
  2733     031A  1683               	bsf	3,5	;RP0=1, select bank1
  2734     031B  1303               	bcf	3,6	;RP1=0, select bank1
  2735     031C  1486               	bsf	6,1	;volatile
  2736                           
  2737                           ;adc.c: 53: ANS10 = 1;
  2738     031D  1683               	bsf	3,5	;RP0=1, select bank3
  2739     031E  1703               	bsf	3,6	;RP1=1, select bank3
  2740     031F  1509               	bsf	9,2	;volatile
  2741                           
  2742                           ;adc.c: 54: break;
  2743     0320  2B59               	goto	l3128
  2744     0321                     l71:	
  2745                           ;adc.c: 55: case 11:
  2746                           
  2747                           
  2748                           ;adc.c: 56: TRISB4 = 1;
  2749     0321  1683               	bsf	3,5	;RP0=1, select bank1
  2750     0322  1303               	bcf	3,6	;RP1=0, select bank1
  2751     0323  1606               	bsf	6,4	;volatile
  2752                           
  2753                           ;adc.c: 57: ANS11 = 1;
  2754     0324  1683               	bsf	3,5	;RP0=1, select bank3
  2755     0325  1703               	bsf	3,6	;RP1=1, select bank3
  2756     0326  1589               	bsf	9,3	;volatile
  2757                           
  2758                           ;adc.c: 58: break;
  2759     0327  2B59               	goto	l3128
  2760     0328                     l72:	
  2761                           ;adc.c: 59: case 12:
  2762                           
  2763                           
  2764                           ;adc.c: 60: TRISB0 = 1;
  2765     0328  1683               	bsf	3,5	;RP0=1, select bank1
  2766     0329  1303               	bcf	3,6	;RP1=0, select bank1
  2767     032A  1406               	bsf	6,0	;volatile
  2768                           
  2769                           ;adc.c: 61: ANS12 = 1;
  2770     032B  1683               	bsf	3,5	;RP0=1, select bank3
  2771     032C  1703               	bsf	3,6	;RP1=1, select bank3
  2772     032D  1609               	bsf	9,4	;volatile
  2773                           
  2774                           ;adc.c: 62: break;
  2775     032E  2B59               	goto	l3128
  2776     032F                     l73:	
  2777                           ;adc.c: 63: case 13:
  2778                           
  2779                           
  2780                           ;adc.c: 64: TRISB5 = 1;
  2781     032F  1683               	bsf	3,5	;RP0=1, select bank1
  2782     0330  1303               	bcf	3,6	;RP1=0, select bank1
  2783     0331  1686               	bsf	6,5	;volatile
  2784                           
  2785                           ;adc.c: 65: ANS13 = 1;
  2786     0332  1683               	bsf	3,5	;RP0=1, select bank3
  2787     0333  1703               	bsf	3,6	;RP1=1, select bank3
  2788     0334  1689               	bsf	9,5	;volatile
  2789                           
  2790                           ;adc.c: 66: break;
  2791     0335  2B59               	goto	l3128
  2792     0336                     l3126:
  2793     0336  0821               	movf	adc_init@adc_channel,w
  2794                           
  2795                           ; Switch size 1, requested type "simple"
  2796                           ; Number of cases is 11, Range of values is 0 to 13
  2797                           ; switch strategies available:
  2798                           ; Name         Instructions Cycles
  2799                           ; simple_byte           34    18 (average)
  2800                           ; direct_byte           50     8 (fixed)
  2801                           ; jumptable            260     6 (fixed)
  2802                           ;	Chosen strategy is simple_byte
  2803     0337  3A00               	xorlw	0	; case 0
  2804     0338  1903               	skipnz
  2805     0339  2AE9               	goto	l62
  2806     033A  3A01               	xorlw	1	; case 1
  2807     033B  1903               	skipnz
  2808     033C  2AF0               	goto	l64
  2809     033D  3A03               	xorlw	3	; case 2
  2810     033E  1903               	skipnz
  2811     033F  2AF7               	goto	l65
  2812     0340  3A01               	xorlw	1	; case 3
  2813     0341  1903               	skipnz
  2814     0342  2AFE               	goto	l66
  2815     0343  3A07               	xorlw	7	; case 4
  2816     0344  1903               	skipnz
  2817     0345  2B05               	goto	l67
  2818     0346  3A0C               	xorlw	12	; case 8
  2819     0347  1903               	skipnz
  2820     0348  2B0C               	goto	l68
  2821     0349  3A01               	xorlw	1	; case 9
  2822     034A  1903               	skipnz
  2823     034B  2B13               	goto	l69
  2824     034C  3A03               	xorlw	3	; case 10
  2825     034D  1903               	skipnz
  2826     034E  2B1A               	goto	l70
  2827     034F  3A01               	xorlw	1	; case 11
  2828     0350  1903               	skipnz
  2829     0351  2B21               	goto	l71
  2830     0352  3A07               	xorlw	7	; case 12
  2831     0353  1903               	skipnz
  2832     0354  2B28               	goto	l72
  2833     0355  3A01               	xorlw	1	; case 13
  2834     0356  1903               	skipnz
  2835     0357  2B2F               	goto	l73
  2836     0358  2B71               	goto	l75
  2837     0359                     l3128:
  2838                           
  2839                           ;adc.c: 70: ADCON0bits.ADCS = 2;
  2840     0359  1283               	bcf	3,5	;RP0=0, select bank0
  2841     035A  1303               	bcf	3,6	;RP1=0, select bank0
  2842     035B  081F               	movf	31,w	;volatile
  2843     035C  393F               	andlw	-193
  2844     035D  3880               	iorlw	128
  2845     035E  009F               	movwf	31	;volatile
  2846                           
  2847                           ;adc.c: 72: ADCON0bits.CHS = adc_channel;
  2848     035F  0821               	movf	adc_init@adc_channel,w
  2849     0360  00A0               	movwf	??_adc_init
  2850     0361  0DA0               	rlf	??_adc_init,f
  2851     0362  0DA0               	rlf	??_adc_init,f
  2852     0363  081F               	movf	31,w	;volatile
  2853     0364  0620               	xorwf	??_adc_init,w
  2854     0365  39C3               	andlw	-61
  2855     0366  0620               	xorwf	??_adc_init,w
  2856     0367  009F               	movwf	31	;volatile
  2857     0368                     l3130:
  2858                           
  2859                           ;adc.c: 73: ADCON1bits.ADFM = 1;
  2860     0368  1683               	bsf	3,5	;RP0=1, select bank1
  2861     0369  1303               	bcf	3,6	;RP1=0, select bank1
  2862     036A  179F               	bsf	31,7	;volatile
  2863     036B                     l3132:
  2864                           
  2865                           ;adc.c: 74: ADON = 0;
  2866     036B  1283               	bcf	3,5	;RP0=0, select bank0
  2867     036C  1303               	bcf	3,6	;RP1=0, select bank0
  2868     036D  101F               	bcf	31,0	;volatile
  2869     036E                     l3134:
  2870                           
  2871                           ;adc.c: 75: ADIE = 0;
  2872     036E  1683               	bsf	3,5	;RP0=1, select bank1
  2873     036F  1303               	bcf	3,6	;RP1=0, select bank1
  2874     0370  130C               	bcf	12,6	;volatile
  2875     0371                     l75:
  2876     0371  0008               	return
  2877     0372                     __end_of_adc_init:
  2878                           
  2879                           	psect	text8
  2880     05D7                     __ptext8:	
  2881 ;; *************** function _pwm_init *****************
  2882 ;; Defined at:
  2883 ;;		line 28 in file "pwm.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;		None
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;		None
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2897 ;;      Params:         0       0       0       0       0
  2898 ;;      Locals:         0       0       0       0       0
  2899 ;;      Temps:          0       0       0       0       0
  2900 ;;      Totals:         0       0       0       0       0
  2901 ;;Total ram usage:        0 bytes
  2902 ;; Hardware stack levels used: 1
  2903 ;; Hardware stack levels required when called: 2
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_main
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911     05D7                     _pwm_init:	
  2912                           ;psect for function _pwm_init
  2913                           
  2914     05D7                     l3352:	
  2915                           ;incstack = 0
  2916                           ; Regs used in _pwm_init: [wreg+status,2+status,0]
  2917                           
  2918                           
  2919                           ;pwm.c: 31: TRISC2 = 1;
  2920     05D7  1683               	bsf	3,5	;RP0=1, select bank1
  2921     05D8  1303               	bcf	3,6	;RP1=0, select bank1
  2922     05D9  1507               	bsf	7,2	;volatile
  2923                           
  2924                           ;pwm.c: 32: TRISC1 = 1;
  2925     05DA  1487               	bsf	7,1	;volatile
  2926     05DB                     l3354:
  2927                           
  2928                           ;pwm.c: 34: PR2 = 255;
  2929     05DB  30FF               	movlw	255
  2930     05DC  0092               	movwf	18	;volatile
  2931     05DD                     l3356:
  2932                           
  2933                           ;pwm.c: 37: CCP1CONbits.P1M = 0;
  2934     05DD  303F               	movlw	-193
  2935     05DE  1283               	bcf	3,5	;RP0=0, select bank0
  2936     05DF  1303               	bcf	3,6	;RP1=0, select bank0
  2937     05E0  0597               	andwf	23,f	;volatile
  2938     05E1                     l3358:
  2939                           
  2940                           ;pwm.c: 38: CCP1CONbits.CCP1M = 0b1100;
  2941     05E1  0817               	movf	23,w	;volatile
  2942     05E2  39F0               	andlw	-16
  2943     05E3  380C               	iorlw	12
  2944     05E4  0097               	movwf	23	;volatile
  2945     05E5                     l3360:
  2946                           
  2947                           ;pwm.c: 39: CCPR1L = 0;
  2948     05E5  0195               	clrf	21	;volatile
  2949     05E6                     l3362:
  2950                           
  2951                           ;pwm.c: 40: CCP1CONbits.DC1B = 0;
  2952     05E6  30CF               	movlw	-49
  2953     05E7  0597               	andwf	23,f	;volatile
  2954     05E8                     l3364:
  2955                           
  2956                           ;pwm.c: 42: CCP2CONbits.CCP2M = 0b1100;
  2957     05E8  081D               	movf	29,w	;volatile
  2958     05E9  39F0               	andlw	-16
  2959     05EA  380C               	iorlw	12
  2960     05EB  009D               	movwf	29	;volatile
  2961     05EC                     l3366:
  2962                           
  2963                           ;pwm.c: 43: CCPR2L = 0;
  2964     05EC  019B               	clrf	27	;volatile
  2965     05ED                     l3368:
  2966                           
  2967                           ;pwm.c: 44: DC2B0 = 0;
  2968     05ED  121D               	bcf	29,4	;volatile
  2969     05EE                     l3370:
  2970                           
  2971                           ;pwm.c: 45: DC2B1 = 0;
  2972     05EE  129D               	bcf	29,5	;volatile
  2973     05EF                     l3372:
  2974                           
  2975                           ;pwm.c: 47: TMR2IF = 0;
  2976     05EF  108C               	bcf	12,1	;volatile
  2977     05F0                     l3374:
  2978                           
  2979                           ;pwm.c: 48: T2CONbits.T2CKPS = 0b00;
  2980     05F0  30FC               	movlw	-4
  2981     05F1  0592               	andwf	18,f	;volatile
  2982     05F2                     l3376:
  2983                           
  2984                           ;pwm.c: 49: TMR2ON = 1;
  2985     05F2  1512               	bsf	18,2	;volatile
  2986     05F3                     l346:	
  2987                           ;pwm.c: 51: while(!TMR2IF);
  2988                           
  2989     05F3  1C8C               	btfss	12,1	;volatile
  2990     05F4  2DF6               	goto	u2071
  2991     05F5  2DF7               	goto	u2070
  2992     05F6                     u2071:
  2993     05F6  2DF3               	goto	l346
  2994     05F7                     u2070:
  2995     05F7                     l348:
  2996                           
  2997                           ;pwm.c: 52: TRISC2 = 0;
  2998     05F7  1683               	bsf	3,5	;RP0=1, select bank1
  2999     05F8  1303               	bcf	3,6	;RP1=0, select bank1
  3000     05F9  1107               	bcf	7,2	;volatile
  3001                           
  3002                           ;pwm.c: 53: TRISC1 = 0;
  3003     05FA  1087               	bcf	7,1	;volatile
  3004     05FB                     l349:
  3005     05FB  0008               	return
  3006     05FC                     __end_of_pwm_init:
  3007                           
  3008                           	psect	text9
  3009     07F0                     __ptext9:	
  3010 ;; *************** function _led_rgb_init *****************
  3011 ;; Defined at:
  3012 ;;		line 25 in file "led_rgb.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;		None
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		None
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3026 ;;      Params:         0       0       0       0       0
  3027 ;;      Locals:         0       0       0       0       0
  3028 ;;      Temps:          0       0       0       0       0
  3029 ;;      Totals:         0       0       0       0       0
  3030 ;;Total ram usage:        0 bytes
  3031 ;; Hardware stack levels used: 1
  3032 ;; Hardware stack levels required when called: 2
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_main
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040     07F0                     _led_rgb_init:	
  3041                           ;psect for function _led_rgb_init
  3042                           
  3043     07F0                     l303:	
  3044                           ;incstack = 0
  3045                           ; Regs used in _led_rgb_init: []
  3046                           
  3047     07F0  0008               	return
  3048     07F1                     __end_of_led_rgb_init:
  3049                           
  3050                           	psect	text10
  3051     06D4                     __ptext10:	
  3052 ;; *************** function _lcd_show_cursor *****************
  3053 ;; Defined at:
  3054 ;;		line 74 in file "lcd8x2.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;  on              2    4[BANK0 ] int 
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1    wreg      void 
  3061 ;; Registers used:
  3062 ;;		wreg, status,2, status,0, pclath, cstack
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3068 ;;      Params:         0       2       0       0       0
  3069 ;;      Locals:         0       0       0       0       0
  3070 ;;      Temps:          0       0       0       0       0
  3071 ;;      Totals:         0       2       0       0       0
  3072 ;;Total ram usage:        2 bytes
  3073 ;; Hardware stack levels used: 1
  3074 ;; Hardware stack levels required when called: 4
  3075 ;; This function calls:
  3076 ;;		_spi_send_command
  3077 ;; This function is called by:
  3078 ;;		_main
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082     06D4                     _lcd_show_cursor:	
  3083                           ;psect for function _lcd_show_cursor
  3084                           
  3085     06D4                     l3346:	
  3086                           ;incstack = 0
  3087                           ; Regs used in _lcd_show_cursor: [wreg+status,2+status,0+pclath+cstack]
  3088                           
  3089                           
  3090                           ;lcd8x2.c: 75: if (on) {
  3091     06D4  1283               	bcf	3,5	;RP0=0, select bank0
  3092     06D5  1303               	bcf	3,6	;RP1=0, select bank0
  3093     06D6  0824               	movf	lcd_show_cursor@on,w
  3094     06D7  0425               	iorwf	lcd_show_cursor@on+1,w
  3095     06D8  1903               	btfsc	3,2
  3096     06D9  2EDB               	goto	u2061
  3097     06DA  2EDC               	goto	u2060
  3098     06DB                     u2061:
  3099     06DB  2EE3               	goto	l3350
  3100     06DC                     u2060:
  3101     06DC                     l3348:
  3102                           
  3103                           ;lcd8x2.c: 76: spi_send_command(5);
  3104     06DC  3005               	movlw	5
  3105     06DD  120A  118A  277A  120A  118A  	fcall	_spi_send_command
  3106                           
  3107                           ;lcd8x2.c: 77: } else {
  3108     06E2  2EE9               	goto	l273
  3109     06E3                     l3350:
  3110                           
  3111                           ;lcd8x2.c: 78: spi_send_command(6);
  3112     06E3  3006               	movlw	6
  3113     06E4  120A  118A  277A  120A  118A  	fcall	_spi_send_command
  3114     06E9                     l273:
  3115     06E9  0008               	return
  3116     06EA                     __end_of_lcd_show_cursor:
  3117                           
  3118                           	psect	text11
  3119     07E1                     __ptext11:	
  3120 ;; *************** function _lcd_init *****************
  3121 ;; Defined at:
  3122 ;;		line 24 in file "lcd8x2.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		None
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3136 ;;      Params:         0       0       0       0       0
  3137 ;;      Locals:         0       0       0       0       0
  3138 ;;      Temps:          0       0       0       0       0
  3139 ;;      Totals:         0       0       0       0       0
  3140 ;;Total ram usage:        0 bytes
  3141 ;; Hardware stack levels used: 1
  3142 ;; Hardware stack levels required when called: 2
  3143 ;; This function calls:
  3144 ;;		Nothing
  3145 ;; This function is called by:
  3146 ;;		_main
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150     07E1                     _lcd_init:	
  3151                           ;psect for function _lcd_init
  3152                           
  3153     07E1                     l3342:	
  3154                           ;incstack = 0
  3155                           ; Regs used in _lcd_init: []
  3156                           
  3157                           
  3158                           ;lcd8x2.c: 25: TRISB0 = 1;
  3159     07E1  1683               	bsf	3,5	;RP0=1, select bank1
  3160     07E2  1303               	bcf	3,6	;RP1=0, select bank1
  3161     07E3  1406               	bsf	6,0	;volatile
  3162                           
  3163                           ;lcd8x2.c: 26: ANS12 = 0;
  3164     07E4  1683               	bsf	3,5	;RP0=1, select bank3
  3165     07E5  1703               	bsf	3,6	;RP1=1, select bank3
  3166     07E6  1209               	bcf	9,4	;volatile
  3167     07E7                     l256:
  3168     07E7  0008               	return
  3169     07E8                     __end_of_lcd_init:
  3170                           
  3171                           	psect	text12
  3172     07E8                     __ptext12:	
  3173 ;; *************** function _lcd_clear *****************
  3174 ;; Defined at:
  3175 ;;		line 54 in file "lcd8x2.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;		None
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;		None
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0, pclath, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3189 ;;      Params:         0       0       0       0       0
  3190 ;;      Locals:         0       0       0       0       0
  3191 ;;      Temps:          0       0       0       0       0
  3192 ;;      Totals:         0       0       0       0       0
  3193 ;;Total ram usage:        0 bytes
  3194 ;; Hardware stack levels used: 1
  3195 ;; Hardware stack levels required when called: 4
  3196 ;; This function calls:
  3197 ;;		_spi_send_command
  3198 ;; This function is called by:
  3199 ;;		_main
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203     07E8                     _lcd_clear:	
  3204                           ;psect for function _lcd_clear
  3205                           
  3206     07E8                     l3344:	
  3207                           ;incstack = 0
  3208                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  3209                           
  3210                           
  3211                           ;lcd8x2.c: 55: spi_send_command(2);
  3212     07E8  3002               	movlw	2
  3213     07E9  120A  118A  277A  120A  118A  	fcall	_spi_send_command
  3214     07EE                     l265:
  3215     07EE  0008               	return
  3216     07EF                     __end_of_lcd_clear:
  3217                           
  3218                           	psect	text13
  3219     07B1                     __ptext13:	
  3220 ;; *************** function _key_pressed *****************
  3221 ;; Defined at:
  3222 ;;		line 86 in file "key.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;		None
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  state           1    0[BANK0 ] unsigned char 
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      unsigned char 
  3229 ;; Registers used:
  3230 ;;		wreg, status,2
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3236 ;;      Params:         0       0       0       0       0
  3237 ;;      Locals:         0       1       0       0       0
  3238 ;;      Temps:          0       0       0       0       0
  3239 ;;      Totals:         0       1       0       0       0
  3240 ;;Total ram usage:        1 bytes
  3241 ;; Hardware stack levels used: 1
  3242 ;; Hardware stack levels required when called: 2
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_main
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250     07B1                     _key_pressed:	
  3251                           ;psect for function _key_pressed
  3252                           
  3253     07B1                     l3332:	
  3254                           ;incstack = 0
  3255                           ; Regs used in _key_pressed: [wreg+status,2]
  3256                           
  3257                           
  3258                           ;key.c: 87: char state = 0;
  3259     07B1  1283               	bcf	3,5	;RP0=0, select bank0
  3260     07B2  1303               	bcf	3,6	;RP1=0, select bank0
  3261     07B3  01A0               	clrf	key_pressed@state
  3262     07B4                     l3334:
  3263                           
  3264                           ;key.c: 88: if (keyPressed == 1) {
  3265     07B4  1C7A               	btfss	_keyPressed/(0+8),_keyPressed& (0+7)	;volatile
  3266     07B5  2FB7               	goto	u2051
  3267     07B6  2FB8               	goto	u2050
  3268     07B7                     u2051:
  3269     07B7  2FBB               	goto	l3338
  3270     07B8                     u2050:
  3271     07B8                     l3336:
  3272                           
  3273                           ;key.c: 89: keyPressed = 0;
  3274     07B8  107A               	bcf	_keyPressed/(0+8),_keyPressed& (0+7)	;volatile
  3275                           
  3276                           ;key.c: 90: state = 1;
  3277     07B9  01A0               	clrf	key_pressed@state
  3278     07BA  0AA0               	incf	key_pressed@state,f
  3279     07BB                     l3338:
  3280                           
  3281                           ;key.c: 91: };key.c: 92: return state;
  3282     07BB  0820               	movf	key_pressed@state,w
  3283     07BC                     l245:
  3284     07BC  0008               	return
  3285     07BD                     __end_of_key_pressed:
  3286                           
  3287                           	psect	text14
  3288     07D9                     __ptext14:	
  3289 ;; *************** function _key_init *****************
  3290 ;; Defined at:
  3291 ;;		line 26 in file "key.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      void 
  3298 ;; Registers used:
  3299 ;;		None
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3305 ;;      Params:         0       0       0       0       0
  3306 ;;      Locals:         0       0       0       0       0
  3307 ;;      Temps:          0       0       0       0       0
  3308 ;;      Totals:         0       0       0       0       0
  3309 ;;Total ram usage:        0 bytes
  3310 ;; Hardware stack levels used: 1
  3311 ;; Hardware stack levels required when called: 2
  3312 ;; This function calls:
  3313 ;;		Nothing
  3314 ;; This function is called by:
  3315 ;;		_main
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319     07D9                     _key_init:	
  3320                           ;psect for function _key_init
  3321                           
  3322     07D9                     l3330:	
  3323                           ;incstack = 0
  3324                           ; Regs used in _key_init: []
  3325                           
  3326                           
  3327                           ;key.c: 27: nRBPU = 0;
  3328     07D9  1683               	bsf	3,5	;RP0=1, select bank1
  3329     07DA  1303               	bcf	3,6	;RP1=0, select bank1
  3330     07DB  1381               	bcf	1,7	;volatile
  3331                           
  3332                           ;key.c: 28: TRISB6 = 1;
  3333     07DC  1706               	bsf	6,6	;volatile
  3334                           
  3335                           ;key.c: 30: WPUB6 = 1;
  3336     07DD  1715               	bsf	21,6	;volatile
  3337                           
  3338                           ;key.c: 31: IOCB6 = 1;
  3339     07DE  1716               	bsf	22,6	;volatile
  3340                           
  3341                           ;key.c: 32: RBIE = 1;
  3342     07DF  158B               	bsf	11,3	;volatile
  3343     07E0                     l229:
  3344     07E0  0008               	return
  3345     07E1                     __end_of_key_init:
  3346                           
  3347                           	psect	text15
  3348     0027                     __ptext15:	
  3349 ;; *************** function _follow_line *****************
  3350 ;; Defined at:
  3351 ;;		line 105 in file "main.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;		None
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  led_color       2   40[BANK0 ] int 
  3356 ;;  duty_cycle      2   38[BANK0 ] int 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3366 ;;      Params:         0       0       0       0       0
  3367 ;;      Locals:         0       4       0       0       0
  3368 ;;      Temps:          0       7       0       0       0
  3369 ;;      Totals:         0      11       0       0       0
  3370 ;;Total ram usage:       11 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; Hardware stack levels required when called: 6
  3373 ;; This function calls:
  3374 ;;		_duty_cycle_control
  3375 ;;		_lcd_goto
  3376 ;;		_lcd_puts
  3377 ;;		_led_rgb_set_color
  3378 ;;		_pwm_direction
  3379 ;;		_pwm_set
  3380 ;;		_sensorLine_read
  3381 ;;		_sprintf
  3382 ;; This function is called by:
  3383 ;;		_main
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387     0027                     _follow_line:	
  3388                           ;psect for function _follow_line
  3389                           
  3390     0027                     l3442:	
  3391                           ;incstack = 0
  3392                           ; Regs used in _follow_line: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3393                           
  3394                           
  3395                           ;main.c: 106: lineSensor.byte = sensorLine_read();
  3396     0027  120A  118A  2416  120A  118A  	fcall	_sensorLine_read
  3397     002C  1283               	bcf	3,5	;RP0=0, select bank0
  3398     002D  1303               	bcf	3,6	;RP1=0, select bank0
  3399     002E  0823               	movf	?_sensorLine_read,w
  3400     002F  00D1               	movwf	_lineSensor	;volatile
  3401     0030                     l3444:
  3402                           
  3403                           ;main.c: 107: int duty_cycle = duty_cycle_control();
  3404     0030  120A  118A  252E  120A  118A  	fcall	_duty_cycle_control
  3405     0035  1283               	bcf	3,5	;RP0=0, select bank0
  3406     0036  1303               	bcf	3,6	;RP1=0, select bank0
  3407     0037  0829               	movf	?_duty_cycle_control+1,w
  3408     0038  00C7               	movwf	follow_line@duty_cycle+1
  3409     0039  0828               	movf	?_duty_cycle_control,w
  3410     003A  00C6               	movwf	follow_line@duty_cycle
  3411     003B                     l3446:
  3412                           
  3413                           ;main.c: 108: int led_color;;main.c: 110: sprintf(sVar, "L: %d-%d-%d", lineSensor.part.b
      +                          it0, lineSensor.part.bit1, lineSensor.part.bit2);
  3414     003B  3037               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3415     003C  00AE               	movwf	sprintf@f
  3416     003D  0851               	movf	_lineSensor,w	;volatile
  3417     003E  3901               	andlw	1
  3418     003F  00BF               	movwf	??_follow_line
  3419     0040  01C0               	clrf	??_follow_line+1
  3420     0041  083F               	movf	??_follow_line,w
  3421     0042  00AF               	movwf	?_sprintf+1
  3422     0043  0840               	movf	??_follow_line+1,w
  3423     0044  00B0               	movwf	?_sprintf+2
  3424     0045  0C51               	rrf	_lineSensor,w	;volatile
  3425     0046  3901               	andlw	1
  3426     0047  00C1               	movwf	??_follow_line+2
  3427     0048  01C2               	clrf	??_follow_line+3
  3428     0049  0841               	movf	??_follow_line+2,w
  3429     004A  00B1               	movwf	?_sprintf+3
  3430     004B  0842               	movf	??_follow_line+3,w
  3431     004C  00B2               	movwf	?_sprintf+4
  3432     004D  0C51               	rrf	_lineSensor,w	;volatile
  3433     004E  00C3               	movwf	??_follow_line+4
  3434     004F  0C43               	rrf	??_follow_line+4,w
  3435     0050  3901               	andlw	1
  3436     0051  00C4               	movwf	??_follow_line+5
  3437     0052  01C5               	clrf	??_follow_line+6
  3438     0053  0844               	movf	??_follow_line+5,w
  3439     0054  00B3               	movwf	?_sprintf+5
  3440     0055  0845               	movf	??_follow_line+6,w
  3441     0056  00B4               	movwf	?_sprintf+6
  3442     0057  3052               	movlw	(low (_sVar| 0))& (0+255)
  3443     0058  120A  118A  2160  120A  118A  	fcall	_sprintf
  3444     005D                     l3448:
  3445                           
  3446                           ;main.c: 111: lcd_goto(0);
  3447     005D  3000               	movlw	0
  3448     005E  120A  118A  270E  120A  118A  	fcall	_lcd_goto
  3449     0063                     l3450:
  3450                           
  3451                           ;main.c: 112: lcd_puts(sVar);
  3452     0063  3052               	movlw	(low (_sVar| 0))& (0+255)
  3453     0064  1283               	bcf	3,5	;RP0=0, select bank0
  3454     0065  1303               	bcf	3,6	;RP1=0, select bank0
  3455     0066  00A5               	movwf	lcd_puts@s
  3456     0067  3000               	movlw	0
  3457     0068  00A6               	movwf	lcd_puts@s+1
  3458     0069  120A  118A  25AF  120A  118A  	fcall	_lcd_puts
  3459     006E                     l3452:
  3460                           
  3461                           ;main.c: 115: if(lineSensor.byte == 0b010){
  3462     006E  3002               	movlw	2
  3463     006F  1283               	bcf	3,5	;RP0=0, select bank0
  3464     0070  1303               	bcf	3,6	;RP1=0, select bank0
  3465     0071  0651               	xorwf	_lineSensor,w	;volatile
  3466     0072  1D03               	btfss	3,2
  3467     0073  2875               	goto	u2091
  3468     0074  2876               	goto	u2090
  3469     0075                     u2091:
  3470     0075  28A1               	goto	l3464
  3471     0076                     u2090:
  3472     0076                     l3454:
  3473                           
  3474                           ;main.c: 116: pwm_direction(0);
  3475     0076  3000               	movlw	0
  3476     0077  00A0               	movwf	pwm_direction@dir
  3477     0078  00A1               	movwf	pwm_direction@dir+1
  3478     0079  120A  118A  25FC  120A  118A  	fcall	_pwm_direction
  3479     007E                     l3456:
  3480                           
  3481                           ;main.c: 117: led_color = (duty_cycle>480) ? (2:4);
  3482     007E  1283               	bcf	3,5	;RP0=0, select bank0
  3483     007F  1303               	bcf	3,6	;RP1=0, select bank0
  3484     0080  0847               	movf	follow_line@duty_cycle+1,w
  3485     0081  3A80               	xorlw	128
  3486     0082  00FF               	movwf	btemp+1
  3487     0083  3081               	movlw	129
  3488     0084  027F               	subwf	btemp+1,w
  3489     0085  1D03               	skipz
  3490     0086  2889               	goto	u2105
  3491     0087  30E1               	movlw	225
  3492     0088  0246               	subwf	follow_line@duty_cycle,w
  3493     0089                     u2105:
  3494     0089  1803               	skipnc
  3495     008A  288C               	goto	u2101
  3496     008B  288D               	goto	u2100
  3497     008C                     u2101:
  3498     008C  2894               	goto	l3460
  3499     008D                     u2100:
  3500     008D                     l3458:
  3501     008D  3004               	movlw	4
  3502     008E  1283               	bcf	3,5	;RP0=0, select bank0
  3503     008F  1303               	bcf	3,6	;RP1=0, select bank0
  3504     0090  00C8               	movwf	follow_line@led_color
  3505     0091  3000               	movlw	0
  3506     0092  00C9               	movwf	follow_line@led_color+1
  3507     0093  289A               	goto	l3462
  3508     0094                     l3460:
  3509     0094  3002               	movlw	2
  3510     0095  1283               	bcf	3,5	;RP0=0, select bank0
  3511     0096  1303               	bcf	3,6	;RP1=0, select bank0
  3512     0097  00C8               	movwf	follow_line@led_color
  3513     0098  3000               	movlw	0
  3514     0099  00C9               	movwf	follow_line@led_color+1
  3515     009A                     l3462:
  3516                           
  3517                           ;main.c: 118: led_rgb_set_color(led_color);
  3518     009A  0848               	movf	follow_line@led_color,w
  3519     009B  120A  118A  278A  120A  118A  	fcall	_led_rgb_set_color
  3520                           
  3521                           ;main.c: 119: }
  3522     00A0  2941               	goto	l3504
  3523     00A1                     l3464:
  3524                           
  3525                           ;main.c: 120: else if(lineSensor.byte == 0b011 || lineSensor.byte == 0b001){
  3526     00A1  3003               	movlw	3
  3527     00A2  0651               	xorwf	_lineSensor,w	;volatile
  3528     00A3  1903               	btfsc	3,2
  3529     00A4  28A6               	goto	u2111
  3530     00A5  28A7               	goto	u2110
  3531     00A6                     u2111:
  3532     00A6  28AC               	goto	l3468
  3533     00A7                     u2110:
  3534     00A7                     l3466:
  3535     00A7  0351               	decf	_lineSensor,w	;volatile
  3536     00A8  1D03               	btfss	3,2
  3537     00A9  28AB               	goto	u2121
  3538     00AA  28AC               	goto	u2120
  3539     00AB                     u2121:
  3540     00AB  28D8               	goto	l3478
  3541     00AC                     u2120:
  3542     00AC                     l3468:
  3543                           
  3544                           ;main.c: 121: pwm_direction(3);
  3545     00AC  3003               	movlw	3
  3546     00AD  00A0               	movwf	pwm_direction@dir
  3547     00AE  3000               	movlw	0
  3548     00AF  00A1               	movwf	pwm_direction@dir+1
  3549     00B0  120A  118A  25FC  120A  118A  	fcall	_pwm_direction
  3550     00B5                     l3470:
  3551                           
  3552                           ;main.c: 122: led_color = (duty_cycle>40) ? (1:4);
  3553     00B5  1283               	bcf	3,5	;RP0=0, select bank0
  3554     00B6  1303               	bcf	3,6	;RP1=0, select bank0
  3555     00B7  0847               	movf	follow_line@duty_cycle+1,w
  3556     00B8  3A80               	xorlw	128
  3557     00B9  00FF               	movwf	btemp+1
  3558     00BA  3080               	movlw	128
  3559     00BB  027F               	subwf	btemp+1,w
  3560     00BC  1D03               	skipz
  3561     00BD  28C0               	goto	u2135
  3562     00BE  3029               	movlw	41
  3563     00BF  0246               	subwf	follow_line@duty_cycle,w
  3564     00C0                     u2135:
  3565     00C0  1803               	skipnc
  3566     00C1  28C3               	goto	u2131
  3567     00C2  28C4               	goto	u2130
  3568     00C3                     u2131:
  3569     00C3  28CB               	goto	l3474
  3570     00C4                     u2130:
  3571     00C4                     l3472:
  3572     00C4  3004               	movlw	4
  3573     00C5  1283               	bcf	3,5	;RP0=0, select bank0
  3574     00C6  1303               	bcf	3,6	;RP1=0, select bank0
  3575     00C7  00C8               	movwf	follow_line@led_color
  3576     00C8  3000               	movlw	0
  3577     00C9  00C9               	movwf	follow_line@led_color+1
  3578     00CA  28D1               	goto	l3476
  3579     00CB                     l3474:
  3580     00CB  3001               	movlw	1
  3581     00CC  1283               	bcf	3,5	;RP0=0, select bank0
  3582     00CD  1303               	bcf	3,6	;RP1=0, select bank0
  3583     00CE  00C8               	movwf	follow_line@led_color
  3584     00CF  3000               	movlw	0
  3585     00D0  00C9               	movwf	follow_line@led_color+1
  3586     00D1                     l3476:
  3587                           
  3588                           ;main.c: 123: led_rgb_set_color(led_color);
  3589     00D1  0848               	movf	follow_line@led_color,w
  3590     00D2  120A  118A  278A  120A  118A  	fcall	_led_rgb_set_color
  3591                           
  3592                           ;main.c: 124: }
  3593     00D7  2941               	goto	l3504
  3594     00D8                     l3478:
  3595                           
  3596                           ;main.c: 125: else if(lineSensor.byte == 0b110 || lineSensor.byte == 0b100){
  3597     00D8  3006               	movlw	6
  3598     00D9  0651               	xorwf	_lineSensor,w	;volatile
  3599     00DA  1903               	btfsc	3,2
  3600     00DB  28DD               	goto	u2141
  3601     00DC  28DE               	goto	u2140
  3602     00DD                     u2141:
  3603     00DD  28E4               	goto	l3482
  3604     00DE                     u2140:
  3605     00DE                     l3480:
  3606     00DE  3004               	movlw	4
  3607     00DF  0651               	xorwf	_lineSensor,w	;volatile
  3608     00E0  1D03               	btfss	3,2
  3609     00E1  28E3               	goto	u2151
  3610     00E2  28E4               	goto	u2150
  3611     00E3                     u2151:
  3612     00E3  2910               	goto	l3492
  3613     00E4                     u2150:
  3614     00E4                     l3482:
  3615                           
  3616                           ;main.c: 126: pwm_direction(2);
  3617     00E4  3002               	movlw	2
  3618     00E5  00A0               	movwf	pwm_direction@dir
  3619     00E6  3000               	movlw	0
  3620     00E7  00A1               	movwf	pwm_direction@dir+1
  3621     00E8  120A  118A  25FC  120A  118A  	fcall	_pwm_direction
  3622     00ED                     l3484:
  3623                           
  3624                           ;main.c: 127: led_color = (duty_cycle>40) ? (3:4);
  3625     00ED  1283               	bcf	3,5	;RP0=0, select bank0
  3626     00EE  1303               	bcf	3,6	;RP1=0, select bank0
  3627     00EF  0847               	movf	follow_line@duty_cycle+1,w
  3628     00F0  3A80               	xorlw	128
  3629     00F1  00FF               	movwf	btemp+1
  3630     00F2  3080               	movlw	128
  3631     00F3  027F               	subwf	btemp+1,w
  3632     00F4  1D03               	skipz
  3633     00F5  28F8               	goto	u2165
  3634     00F6  3029               	movlw	41
  3635     00F7  0246               	subwf	follow_line@duty_cycle,w
  3636     00F8                     u2165:
  3637     00F8  1803               	skipnc
  3638     00F9  28FB               	goto	u2161
  3639     00FA  28FC               	goto	u2160
  3640     00FB                     u2161:
  3641     00FB  2903               	goto	l3488
  3642     00FC                     u2160:
  3643     00FC                     l3486:
  3644     00FC  3004               	movlw	4
  3645     00FD  1283               	bcf	3,5	;RP0=0, select bank0
  3646     00FE  1303               	bcf	3,6	;RP1=0, select bank0
  3647     00FF  00C8               	movwf	follow_line@led_color
  3648     0100  3000               	movlw	0
  3649     0101  00C9               	movwf	follow_line@led_color+1
  3650     0102  2909               	goto	l3490
  3651     0103                     l3488:
  3652     0103  3003               	movlw	3
  3653     0104  1283               	bcf	3,5	;RP0=0, select bank0
  3654     0105  1303               	bcf	3,6	;RP1=0, select bank0
  3655     0106  00C8               	movwf	follow_line@led_color
  3656     0107  3000               	movlw	0
  3657     0108  00C9               	movwf	follow_line@led_color+1
  3658     0109                     l3490:
  3659                           
  3660                           ;main.c: 128: led_rgb_set_color(led_color);
  3661     0109  0848               	movf	follow_line@led_color,w
  3662     010A  120A  118A  278A  120A  118A  	fcall	_led_rgb_set_color
  3663                           
  3664                           ;main.c: 129: }
  3665     010F  2941               	goto	l3504
  3666     0110                     l3492:
  3667                           
  3668                           ;main.c: 130: else if(lineSensor.byte == 0b000){
  3669     0110  0851               	movf	_lineSensor,w	;volatile
  3670     0111  1D03               	btfss	3,2
  3671     0112  2914               	goto	u2171
  3672     0113  2915               	goto	u2170
  3673     0114                     u2171:
  3674     0114  2941               	goto	l666
  3675     0115                     u2170:
  3676     0115                     l3494:
  3677                           
  3678                           ;main.c: 131: pwm_direction(3);
  3679     0115  3003               	movlw	3
  3680     0116  00A0               	movwf	pwm_direction@dir
  3681     0117  3000               	movlw	0
  3682     0118  00A1               	movwf	pwm_direction@dir+1
  3683     0119  120A  118A  25FC  120A  118A  	fcall	_pwm_direction
  3684     011E                     l3496:
  3685                           
  3686                           ;main.c: 132: led_color = (duty_cycle>40) ? (6:4);
  3687     011E  1283               	bcf	3,5	;RP0=0, select bank0
  3688     011F  1303               	bcf	3,6	;RP1=0, select bank0
  3689     0120  0847               	movf	follow_line@duty_cycle+1,w
  3690     0121  3A80               	xorlw	128
  3691     0122  00FF               	movwf	btemp+1
  3692     0123  3080               	movlw	128
  3693     0124  027F               	subwf	btemp+1,w
  3694     0125  1D03               	skipz
  3695     0126  2929               	goto	u2185
  3696     0127  3029               	movlw	41
  3697     0128  0246               	subwf	follow_line@duty_cycle,w
  3698     0129                     u2185:
  3699     0129  1803               	skipnc
  3700     012A  292C               	goto	u2181
  3701     012B  292D               	goto	u2180
  3702     012C                     u2181:
  3703     012C  2934               	goto	l3500
  3704     012D                     u2180:
  3705     012D                     l3498:
  3706     012D  3004               	movlw	4
  3707     012E  1283               	bcf	3,5	;RP0=0, select bank0
  3708     012F  1303               	bcf	3,6	;RP1=0, select bank0
  3709     0130  00C8               	movwf	follow_line@led_color
  3710     0131  3000               	movlw	0
  3711     0132  00C9               	movwf	follow_line@led_color+1
  3712     0133  293A               	goto	l3502
  3713     0134                     l3500:
  3714     0134  3006               	movlw	6
  3715     0135  1283               	bcf	3,5	;RP0=0, select bank0
  3716     0136  1303               	bcf	3,6	;RP1=0, select bank0
  3717     0137  00C8               	movwf	follow_line@led_color
  3718     0138  3000               	movlw	0
  3719     0139  00C9               	movwf	follow_line@led_color+1
  3720     013A                     l3502:
  3721                           
  3722                           ;main.c: 133: led_rgb_set_color(led_color);
  3723     013A  0848               	movf	follow_line@led_color,w
  3724     013B  120A  118A  278A  120A  118A  	fcall	_led_rgb_set_color
  3725     0140  2941               	goto	l3504
  3726     0141                     l666:
  3727     0141                     l3504:
  3728                           
  3729                           ;main.c: 134: };main.c: 135: pwm_set(1, duty_cycle);
  3730     0141  3001               	movlw	1
  3731     0142  1283               	bcf	3,5	;RP0=0, select bank0
  3732     0143  1303               	bcf	3,6	;RP1=0, select bank0
  3733     0144  00A0               	movwf	pwm_set@channel
  3734     0145  3000               	movlw	0
  3735     0146  00A1               	movwf	pwm_set@channel+1
  3736     0147  0847               	movf	follow_line@duty_cycle+1,w
  3737     0148  00A3               	movwf	pwm_set@duty_cycle+1
  3738     0149  0846               	movf	follow_line@duty_cycle,w
  3739     014A  00A2               	movwf	pwm_set@duty_cycle
  3740     014B  120A  118A  2586  120A  118A  	fcall	_pwm_set
  3741     0150                     l3506:
  3742                           
  3743                           ;main.c: 136: pwm_set(2, duty_cycle);
  3744     0150  3002               	movlw	2
  3745     0151  1283               	bcf	3,5	;RP0=0, select bank0
  3746     0152  1303               	bcf	3,6	;RP1=0, select bank0
  3747     0153  00A0               	movwf	pwm_set@channel
  3748     0154  3000               	movlw	0
  3749     0155  00A1               	movwf	pwm_set@channel+1
  3750     0156  0847               	movf	follow_line@duty_cycle+1,w
  3751     0157  00A3               	movwf	pwm_set@duty_cycle+1
  3752     0158  0846               	movf	follow_line@duty_cycle,w
  3753     0159  00A2               	movwf	pwm_set@duty_cycle
  3754     015A  120A  118A  2586  120A  118A  	fcall	_pwm_set
  3755     015F                     l680:
  3756     015F  0008               	return
  3757     0160                     __end_of_follow_line:
  3758                           
  3759                           	psect	text16
  3760     0160                     __ptext16:	
  3761 ;; *************** function _sprintf *****************
  3762 ;; Defined at:
  3763 ;;		line 505 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/doprnt.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;  sp              1    wreg     PTR unsigned char 
  3766 ;;		 -> sVar(9), 
  3767 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  3768 ;;		 -> STR_3(12), 
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;  sp              1   29[BANK0 ] PTR unsigned char 
  3771 ;;		 -> sVar(9), 
  3772 ;;  tmpval          4    0        struct .
  3773 ;;  val             2   27[BANK0 ] unsigned int 
  3774 ;;  cp              2    0        PTR const unsigned char 
  3775 ;;  len             2    0        unsigned int 
  3776 ;;  c               1   30[BANK0 ] unsigned char 
  3777 ;;  prec            1   26[BANK0 ] char 
  3778 ;;  flag            1   25[BANK0 ] unsigned char 
  3779 ;;  ap              1   24[BANK0 ] PTR void [1]
  3780 ;;		 -> ?_sprintf(2), 
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  2   14[BANK0 ] int 
  3783 ;; Registers used:
  3784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3790 ;;      Params:         0       7       0       0       0
  3791 ;;      Locals:         0       7       0       0       0
  3792 ;;      Temps:          0       3       0       0       0
  3793 ;;      Totals:         0      17       0       0       0
  3794 ;;Total ram usage:       17 bytes
  3795 ;; Hardware stack levels used: 1
  3796 ;; Hardware stack levels required when called: 3
  3797 ;; This function calls:
  3798 ;;		___lwdiv
  3799 ;;		___lwmod
  3800 ;; This function is called by:
  3801 ;;		_follow_line
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805     0160                     _sprintf:	
  3806                           ;psect for function _sprintf
  3807                           
  3808                           
  3809                           ;incstack = 0
  3810                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3811                           ;sprintf@sp stored from wreg
  3812     0160  1283               	bcf	3,5	;RP0=0, select bank0
  3813     0161  1303               	bcf	3,6	;RP1=0, select bank0
  3814     0162  00BD               	movwf	sprintf@sp
  3815     0163                     l3224:
  3816                           
  3817                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  3818     0163  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3819     0164  00B8               	movwf	sprintf@ap
  3820                           
  3821                           ;doprnt.c: 553: while((c = *f++)) {
  3822     0165  2A1F               	goto	l3276
  3823     0166                     l3226:
  3824                           
  3825                           ;doprnt.c: 555: if(c != '%')
  3826     0166  3025               	movlw	37
  3827     0167  063E               	xorwf	sprintf@c,w
  3828     0168  1903               	btfsc	3,2
  3829     0169  296B               	goto	u1941
  3830     016A  296C               	goto	u1940
  3831     016B                     u1941:
  3832     016B  2976               	goto	l3232
  3833     016C                     u1940:
  3834     016C                     l3228:
  3835                           
  3836                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  3837     016C  083D               	movf	sprintf@sp,w
  3838     016D  0084               	movwf	4
  3839     016E  083E               	movf	sprintf@c,w
  3840     016F  1383               	bcf	3,7	;select IRP bank0
  3841     0170  0080               	movwf	0
  3842     0171                     l3230:
  3843     0171  3001               	movlw	1
  3844     0172  00B5               	movwf	??_sprintf
  3845     0173  0835               	movf	??_sprintf,w
  3846     0174  07BD               	addwf	sprintf@sp,f
  3847                           
  3848                           ;doprnt.c: 559: continue;
  3849     0175  2A1F               	goto	l3276
  3850     0176                     l3232:
  3851                           
  3852                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  3853     0176  01B9               	clrf	sprintf@flag
  3854     0177                     l3236:	
  3855                           ;doprnt.c: 661: switch(c = *f++) {
  3856                           
  3857     0177  3001               	movlw	1
  3858     0178  07AE               	addwf	sprintf@f,f
  3859     0179  30FF               	movlw	-1
  3860     017A  072E               	addwf	sprintf@f,w
  3861     017B  0084               	movwf	4
  3862     017C  120A  118A  237C  120A  118A  	fcall	stringdir
  3863     0181  00BE               	movwf	sprintf@c
  3864                           
  3865                           ; Switch size 1, requested type "simple"
  3866                           ; Number of cases is 3, Range of values is 0 to 105
  3867                           ; switch strategies available:
  3868                           ; Name         Instructions Cycles
  3869                           ; simple_byte           10     6 (average)
  3870                           ; jumptable            260     6 (fixed)
  3871                           ;	Chosen strategy is simple_byte
  3872     0182  3A00               	xorlw	0	; case 0
  3873     0183  1903               	skipnz
  3874     0184  2A2F               	goto	l3278
  3875     0185  3A64               	xorlw	100	; case 100
  3876     0186  1903               	skipnz
  3877     0187  298C               	goto	l3238
  3878     0188  3A0D               	xorlw	13	; case 105
  3879     0189  1903               	skipnz
  3880     018A  298C               	goto	l3238
  3881     018B  2A1F               	goto	l3276
  3882     018C                     l3238:
  3883                           
  3884                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  3885     018C  0838               	movf	sprintf@ap,w
  3886     018D  0084               	movwf	4
  3887     018E  1383               	bcf	3,7	;select IRP bank0
  3888     018F  0800               	movf	0,w
  3889     0190  00BB               	movwf	sprintf@val
  3890     0191  0A84               	incf	4,f
  3891     0192  0800               	movf	0,w
  3892     0193  00BC               	movwf	sprintf@val+1
  3893     0194                     l3240:
  3894     0194  3002               	movlw	2
  3895     0195  00B5               	movwf	??_sprintf
  3896     0196  0835               	movf	??_sprintf,w
  3897     0197  07B8               	addwf	sprintf@ap,f
  3898     0198                     l3242:
  3899                           
  3900                           ;doprnt.c: 1287: if((int)val < 0) {
  3901     0198  1FBC               	btfss	sprintf@val+1,7
  3902     0199  299B               	goto	u1951
  3903     019A  299C               	goto	u1950
  3904     019B                     u1951:
  3905     019B  29A5               	goto	l3248
  3906     019C                     u1950:
  3907     019C                     l3244:
  3908                           
  3909                           ;doprnt.c: 1288: flag |= 0x03;
  3910     019C  3003               	movlw	3
  3911     019D  00B5               	movwf	??_sprintf
  3912     019E  0835               	movf	??_sprintf,w
  3913     019F  04B9               	iorwf	sprintf@flag,f
  3914     01A0                     l3246:
  3915                           
  3916                           ;doprnt.c: 1289: val = -val;
  3917     01A0  09BB               	comf	sprintf@val,f
  3918     01A1  09BC               	comf	sprintf@val+1,f
  3919     01A2  0ABB               	incf	sprintf@val,f
  3920     01A3  1903               	skipnz
  3921     01A4  0ABC               	incf	sprintf@val+1,f
  3922     01A5                     l3248:
  3923                           
  3924                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  3925     01A5  01BE               	clrf	sprintf@c
  3926     01A6  0ABE               	incf	sprintf@c,f
  3927     01A7                     l3254:
  3928                           
  3929                           ;doprnt.c: 1332: if(val < dpowers[c])
  3930     01A7  083E               	movf	sprintf@c,w
  3931     01A8  00B5               	movwf	??_sprintf
  3932     01A9  0735               	addwf	??_sprintf,w
  3933     01AA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3934     01AB  0084               	movwf	4
  3935     01AC  120A  118A  237C  120A  118A  	fcall	stringdir
  3936     01B1  00B6               	movwf	??_sprintf+1
  3937     01B2  120A  118A  237C  120A  118A  	fcall	stringdir
  3938     01B7  00B7               	movwf	??_sprintf+2
  3939     01B8  0837               	movf	??_sprintf+2,w
  3940     01B9  023C               	subwf	sprintf@val+1,w
  3941     01BA  1D03               	skipz
  3942     01BB  29BE               	goto	u1965
  3943     01BC  0836               	movf	??_sprintf+1,w
  3944     01BD  023B               	subwf	sprintf@val,w
  3945     01BE                     u1965:
  3946     01BE  1803               	skipnc
  3947     01BF  29C1               	goto	u1961
  3948     01C0  29C2               	goto	u1960
  3949     01C1                     u1961:
  3950     01C1  29C3               	goto	l3258
  3951     01C2                     u1960:
  3952     01C2  29CD               	goto	l3260
  3953     01C3                     l3258:
  3954     01C3  3001               	movlw	1
  3955     01C4  00B5               	movwf	??_sprintf
  3956     01C5  0835               	movf	??_sprintf,w
  3957     01C6  07BE               	addwf	sprintf@c,f
  3958     01C7  3005               	movlw	5
  3959     01C8  063E               	xorwf	sprintf@c,w
  3960     01C9  1D03               	btfss	3,2
  3961     01CA  29CC               	goto	u1971
  3962     01CB  29CD               	goto	u1970
  3963     01CC                     u1971:
  3964     01CC  29A7               	goto	l3254
  3965     01CD                     u1970:
  3966     01CD                     l3260:
  3967                           
  3968                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  3969     01CD  0839               	movf	sprintf@flag,w
  3970     01CE  3903               	andlw	3
  3971     01CF  1903               	btfsc	3,2
  3972     01D0  29D2               	goto	u1981
  3973     01D1  29D3               	goto	u1980
  3974     01D2                     u1981:
  3975     01D2  29DC               	goto	l3266
  3976     01D3                     u1980:
  3977     01D3                     l3262:
  3978                           
  3979                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  3980     01D3  083D               	movf	sprintf@sp,w
  3981     01D4  0084               	movwf	4
  3982     01D5  302D               	movlw	45
  3983     01D6  1383               	bcf	3,7	;select IRP bank0
  3984     01D7  0080               	movwf	0
  3985     01D8                     l3264:
  3986     01D8  3001               	movlw	1
  3987     01D9  00B5               	movwf	??_sprintf
  3988     01DA  0835               	movf	??_sprintf,w
  3989     01DB  07BD               	addwf	sprintf@sp,f
  3990     01DC                     l3266:
  3991                           
  3992                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  3993     01DC  083E               	movf	sprintf@c,w
  3994     01DD  00BA               	movwf	sprintf@prec
  3995                           
  3996                           ;doprnt.c: 1500: while(prec--) {
  3997     01DE  2A16               	goto	l3274
  3998     01DF                     l3268:
  3999                           
  4000                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  4001     01DF  300A               	movlw	10
  4002     01E0  00A8               	movwf	___lwmod@divisor
  4003     01E1  3000               	movlw	0
  4004     01E2  00A9               	movwf	___lwmod@divisor+1
  4005     01E3  083A               	movf	sprintf@prec,w
  4006     01E4  00B5               	movwf	??_sprintf
  4007     01E5  0735               	addwf	??_sprintf,w
  4008     01E6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4009     01E7  0084               	movwf	4
  4010     01E8  120A  118A  237C  120A  118A  	fcall	stringdir
  4011     01ED  00A0               	movwf	___lwdiv@divisor
  4012     01EE  120A  118A  237C  120A  118A  	fcall	stringdir
  4013     01F3  00A1               	movwf	___lwdiv@divisor+1
  4014     01F4  083C               	movf	sprintf@val+1,w
  4015     01F5  00A3               	movwf	___lwdiv@dividend+1
  4016     01F6  083B               	movf	sprintf@val,w
  4017     01F7  00A2               	movwf	___lwdiv@dividend
  4018     01F8  120A  118A  23D0  120A  118A  	fcall	___lwdiv
  4019     01FD  1283               	bcf	3,5	;RP0=0, select bank0
  4020     01FE  1303               	bcf	3,6	;RP1=0, select bank0
  4021     01FF  0821               	movf	?___lwdiv+1,w
  4022     0200  00AB               	movwf	___lwmod@dividend+1
  4023     0201  0820               	movf	?___lwdiv,w
  4024     0202  00AA               	movwf	___lwmod@dividend
  4025     0203  120A  118A  2454  120A  118A  	fcall	___lwmod
  4026     0208  1283               	bcf	3,5	;RP0=0, select bank0
  4027     0209  1303               	bcf	3,6	;RP1=0, select bank0
  4028     020A  0828               	movf	?___lwmod,w
  4029     020B  3E30               	addlw	48
  4030     020C  00BE               	movwf	sprintf@c
  4031     020D                     l3270:
  4032                           
  4033                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  4034     020D  083D               	movf	sprintf@sp,w
  4035     020E  0084               	movwf	4
  4036     020F  083E               	movf	sprintf@c,w
  4037     0210  1383               	bcf	3,7	;select IRP bank0
  4038     0211  0080               	movwf	0
  4039     0212                     l3272:
  4040     0212  3001               	movlw	1
  4041     0213  00B5               	movwf	??_sprintf
  4042     0214  0835               	movf	??_sprintf,w
  4043     0215  07BD               	addwf	sprintf@sp,f
  4044     0216                     l3274:
  4045     0216  30FF               	movlw	255
  4046     0217  00B5               	movwf	??_sprintf
  4047     0218  0835               	movf	??_sprintf,w
  4048     0219  07BA               	addwf	sprintf@prec,f
  4049     021A  0A3A               	incf	sprintf@prec,w
  4050     021B  1D03               	btfss	3,2
  4051     021C  2A1E               	goto	u1991
  4052     021D  2A1F               	goto	u1990
  4053     021E                     u1991:
  4054     021E  29DF               	goto	l3268
  4055     021F                     u1990:
  4056     021F                     l3276:
  4057     021F  3001               	movlw	1
  4058     0220  07AE               	addwf	sprintf@f,f
  4059     0221  30FF               	movlw	-1
  4060     0222  072E               	addwf	sprintf@f,w
  4061     0223  0084               	movwf	4
  4062     0224  120A  118A  237C  120A  118A  	fcall	stringdir
  4063     0229  00BE               	movwf	sprintf@c
  4064     022A  083E               	movf	sprintf@c,w
  4065     022B  1D03               	btfss	3,2
  4066     022C  2A2E               	goto	u2001
  4067     022D  2A2F               	goto	u2000
  4068     022E                     u2001:
  4069     022E  2966               	goto	l3226
  4070     022F                     u2000:
  4071     022F                     l3278:
  4072                           
  4073                           ;doprnt.c: 1564: *sp = 0;
  4074     022F  083D               	movf	sprintf@sp,w
  4075     0230  0084               	movwf	4
  4076     0231  1383               	bcf	3,7	;select IRP bank0
  4077     0232  0180               	clrf	0
  4078     0233                     l802:
  4079     0233  0008               	return
  4080     0234                     __end_of_sprintf:
  4081                           
  4082                           	psect	text17
  4083     0454                     __ptext17:	
  4084 ;; *************** function ___lwmod *****************
  4085 ;; Defined at:
  4086 ;;		line 5 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lwmod.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  divisor         2    8[BANK0 ] unsigned int 
  4089 ;;  dividend        2   10[BANK0 ] unsigned int 
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;  counter         1   13[BANK0 ] unsigned char 
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  2    8[BANK0 ] unsigned int 
  4094 ;; Registers used:
  4095 ;;		wreg, status,2, status,0
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4101 ;;      Params:         0       4       0       0       0
  4102 ;;      Locals:         0       1       0       0       0
  4103 ;;      Temps:          0       1       0       0       0
  4104 ;;      Totals:         0       6       0       0       0
  4105 ;;Total ram usage:        6 bytes
  4106 ;; Hardware stack levels used: 1
  4107 ;; Hardware stack levels required when called: 2
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		_sprintf
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115     0454                     ___lwmod:	
  4116                           ;psect for function ___lwmod
  4117                           
  4118     0454                     l3100:	
  4119                           ;incstack = 0
  4120                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4121                           
  4122     0454  1283               	bcf	3,5	;RP0=0, select bank0
  4123     0455  1303               	bcf	3,6	;RP1=0, select bank0
  4124     0456  0828               	movf	___lwmod@divisor,w
  4125     0457  0429               	iorwf	___lwmod@divisor+1,w
  4126     0458  1903               	btfsc	3,2
  4127     0459  2C5B               	goto	u1811
  4128     045A  2C5C               	goto	u1810
  4129     045B                     u1811:
  4130     045B  2C8B               	goto	l3118
  4131     045C                     u1810:
  4132     045C                     l3102:
  4133     045C  01AD               	clrf	___lwmod@counter
  4134     045D  0AAD               	incf	___lwmod@counter,f
  4135     045E  2C6A               	goto	l3108
  4136     045F                     l3104:
  4137     045F  3001               	movlw	1
  4138     0460                     u1825:
  4139     0460  1003               	clrc
  4140     0461  0DA8               	rlf	___lwmod@divisor,f
  4141     0462  0DA9               	rlf	___lwmod@divisor+1,f
  4142     0463  3EFF               	addlw	-1
  4143     0464  1D03               	skipz
  4144     0465  2C60               	goto	u1825
  4145     0466                     l3106:
  4146     0466  3001               	movlw	1
  4147     0467  00AC               	movwf	??___lwmod
  4148     0468  082C               	movf	??___lwmod,w
  4149     0469  07AD               	addwf	___lwmod@counter,f
  4150     046A                     l3108:
  4151     046A  1FA9               	btfss	___lwmod@divisor+1,7
  4152     046B  2C6D               	goto	u1831
  4153     046C  2C6E               	goto	u1830
  4154     046D                     u1831:
  4155     046D  2C5F               	goto	l3104
  4156     046E                     u1830:
  4157     046E                     l3110:
  4158     046E  0829               	movf	___lwmod@divisor+1,w
  4159     046F  022B               	subwf	___lwmod@dividend+1,w
  4160     0470  1D03               	skipz
  4161     0471  2C74               	goto	u1845
  4162     0472  0828               	movf	___lwmod@divisor,w
  4163     0473  022A               	subwf	___lwmod@dividend,w
  4164     0474                     u1845:
  4165     0474  1C03               	skipc
  4166     0475  2C77               	goto	u1841
  4167     0476  2C78               	goto	u1840
  4168     0477                     u1841:
  4169     0477  2C7E               	goto	l3114
  4170     0478                     u1840:
  4171     0478                     l3112:
  4172     0478  0828               	movf	___lwmod@divisor,w
  4173     0479  02AA               	subwf	___lwmod@dividend,f
  4174     047A  0829               	movf	___lwmod@divisor+1,w
  4175     047B  1C03               	skipc
  4176     047C  03AB               	decf	___lwmod@dividend+1,f
  4177     047D  02AB               	subwf	___lwmod@dividend+1,f
  4178     047E                     l3114:
  4179     047E  3001               	movlw	1
  4180     047F                     u1855:
  4181     047F  1003               	clrc
  4182     0480  0CA9               	rrf	___lwmod@divisor+1,f
  4183     0481  0CA8               	rrf	___lwmod@divisor,f
  4184     0482  3EFF               	addlw	-1
  4185     0483  1D03               	skipz
  4186     0484  2C7F               	goto	u1855
  4187     0485                     l3116:
  4188     0485  3001               	movlw	1
  4189     0486  02AD               	subwf	___lwmod@counter,f
  4190     0487  1D03               	btfss	3,2
  4191     0488  2C8A               	goto	u1861
  4192     0489  2C8B               	goto	u1860
  4193     048A                     u1861:
  4194     048A  2C6E               	goto	l3110
  4195     048B                     u1860:
  4196     048B                     l3118:
  4197     048B  082B               	movf	___lwmod@dividend+1,w
  4198     048C  00A9               	movwf	?___lwmod+1
  4199     048D  082A               	movf	___lwmod@dividend,w
  4200     048E  00A8               	movwf	?___lwmod
  4201     048F                     l1088:
  4202     048F  0008               	return
  4203     0490                     __end_of___lwmod:
  4204                           
  4205                           	psect	text18
  4206     03D0                     __ptext18:	
  4207 ;; *************** function ___lwdiv *****************
  4208 ;; Defined at:
  4209 ;;		line 5 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lwdiv.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;  divisor         2    0[BANK0 ] unsigned int 
  4212 ;;  dividend        2    2[BANK0 ] unsigned int 
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;  quotient        2    6[BANK0 ] unsigned int 
  4215 ;;  counter         1    5[BANK0 ] unsigned char 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  2    0[BANK0 ] unsigned int 
  4218 ;; Registers used:
  4219 ;;		wreg, status,2, status,0
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4225 ;;      Params:         0       4       0       0       0
  4226 ;;      Locals:         0       3       0       0       0
  4227 ;;      Temps:          0       1       0       0       0
  4228 ;;      Totals:         0       8       0       0       0
  4229 ;;Total ram usage:        8 bytes
  4230 ;; Hardware stack levels used: 1
  4231 ;; Hardware stack levels required when called: 2
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_sprintf
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239     03D0                     ___lwdiv:	
  4240                           ;psect for function ___lwdiv
  4241                           
  4242     03D0                     l3074:	
  4243                           ;incstack = 0
  4244                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4245                           
  4246     03D0  1283               	bcf	3,5	;RP0=0, select bank0
  4247     03D1  1303               	bcf	3,6	;RP1=0, select bank0
  4248     03D2  01A6               	clrf	___lwdiv@quotient
  4249     03D3  01A7               	clrf	___lwdiv@quotient+1
  4250     03D4                     l3076:
  4251     03D4  0820               	movf	___lwdiv@divisor,w
  4252     03D5  0421               	iorwf	___lwdiv@divisor+1,w
  4253     03D6  1903               	btfsc	3,2
  4254     03D7  2BD9               	goto	u1741
  4255     03D8  2BDA               	goto	u1740
  4256     03D9                     u1741:
  4257     03D9  2C11               	goto	l3096
  4258     03DA                     u1740:
  4259     03DA                     l3078:
  4260     03DA  01A5               	clrf	___lwdiv@counter
  4261     03DB  0AA5               	incf	___lwdiv@counter,f
  4262     03DC  2BE8               	goto	l3084
  4263     03DD                     l3080:
  4264     03DD  3001               	movlw	1
  4265     03DE                     u1755:
  4266     03DE  1003               	clrc
  4267     03DF  0DA0               	rlf	___lwdiv@divisor,f
  4268     03E0  0DA1               	rlf	___lwdiv@divisor+1,f
  4269     03E1  3EFF               	addlw	-1
  4270     03E2  1D03               	skipz
  4271     03E3  2BDE               	goto	u1755
  4272     03E4                     l3082:
  4273     03E4  3001               	movlw	1
  4274     03E5  00A4               	movwf	??___lwdiv
  4275     03E6  0824               	movf	??___lwdiv,w
  4276     03E7  07A5               	addwf	___lwdiv@counter,f
  4277     03E8                     l3084:
  4278     03E8  1FA1               	btfss	___lwdiv@divisor+1,7
  4279     03E9  2BEB               	goto	u1761
  4280     03EA  2BEC               	goto	u1760
  4281     03EB                     u1761:
  4282     03EB  2BDD               	goto	l3080
  4283     03EC                     u1760:
  4284     03EC                     l3086:
  4285     03EC  3001               	movlw	1
  4286     03ED                     u1775:
  4287     03ED  1003               	clrc
  4288     03EE  0DA6               	rlf	___lwdiv@quotient,f
  4289     03EF  0DA7               	rlf	___lwdiv@quotient+1,f
  4290     03F0  3EFF               	addlw	-1
  4291     03F1  1D03               	skipz
  4292     03F2  2BED               	goto	u1775
  4293     03F3  0821               	movf	___lwdiv@divisor+1,w
  4294     03F4  0223               	subwf	___lwdiv@dividend+1,w
  4295     03F5  1D03               	skipz
  4296     03F6  2BF9               	goto	u1785
  4297     03F7  0820               	movf	___lwdiv@divisor,w
  4298     03F8  0222               	subwf	___lwdiv@dividend,w
  4299     03F9                     u1785:
  4300     03F9  1C03               	skipc
  4301     03FA  2BFC               	goto	u1781
  4302     03FB  2BFD               	goto	u1780
  4303     03FC                     u1781:
  4304     03FC  2C04               	goto	l3092
  4305     03FD                     u1780:
  4306     03FD                     l3088:
  4307     03FD  0820               	movf	___lwdiv@divisor,w
  4308     03FE  02A2               	subwf	___lwdiv@dividend,f
  4309     03FF  0821               	movf	___lwdiv@divisor+1,w
  4310     0400  1C03               	skipc
  4311     0401  03A3               	decf	___lwdiv@dividend+1,f
  4312     0402  02A3               	subwf	___lwdiv@dividend+1,f
  4313     0403                     l3090:
  4314     0403  1426               	bsf	___lwdiv@quotient,0
  4315     0404                     l3092:
  4316     0404  3001               	movlw	1
  4317     0405                     u1795:
  4318     0405  1003               	clrc
  4319     0406  0CA1               	rrf	___lwdiv@divisor+1,f
  4320     0407  0CA0               	rrf	___lwdiv@divisor,f
  4321     0408  3EFF               	addlw	-1
  4322     0409  1D03               	skipz
  4323     040A  2C05               	goto	u1795
  4324     040B                     l3094:
  4325     040B  3001               	movlw	1
  4326     040C  02A5               	subwf	___lwdiv@counter,f
  4327     040D  1D03               	btfss	3,2
  4328     040E  2C10               	goto	u1801
  4329     040F  2C11               	goto	u1800
  4330     0410                     u1801:
  4331     0410  2BEC               	goto	l3086
  4332     0411                     u1800:
  4333     0411                     l3096:
  4334     0411  0827               	movf	___lwdiv@quotient+1,w
  4335     0412  00A1               	movwf	?___lwdiv+1
  4336     0413  0826               	movf	___lwdiv@quotient,w
  4337     0414  00A0               	movwf	?___lwdiv
  4338     0415                     l1078:
  4339     0415  0008               	return
  4340     0416                     __end_of___lwdiv:
  4341                           
  4342                           	psect	text19
  4343     0416                     __ptext19:	
  4344 ;; *************** function _sensorLine_read *****************
  4345 ;; Defined at:
  4346 ;;		line 57 in file "sensor.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;		None
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;  line_reading    2    8[BANK0 ] int 
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  2    3[BANK0 ] int 
  4353 ;; Registers used:
  4354 ;;		wreg, status,2, status,0, pclath, cstack
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4360 ;;      Params:         0       2       0       0       0
  4361 ;;      Locals:         0       2       0       0       0
  4362 ;;      Temps:          0       3       0       0       0
  4363 ;;      Totals:         0       7       0       0       0
  4364 ;;Total ram usage:        7 bytes
  4365 ;; Hardware stack levels used: 1
  4366 ;; Hardware stack levels required when called: 3
  4367 ;; This function calls:
  4368 ;;		_delay_big_us
  4369 ;; This function is called by:
  4370 ;;		_follow_line
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374     0416                     _sensorLine_read:	
  4375                           ;psect for function _sensorLine_read
  4376                           
  4377     0416                     l3196:	
  4378                           ;incstack = 0
  4379                           ; Regs used in _sensorLine_read: [wreg+status,2+status,0+pclath+cstack]
  4380                           
  4381                           
  4382                           ;sensor.c: 60: TRISA &= 0b11100011;
  4383     0416  30E3               	movlw	227
  4384     0417  1283               	bcf	3,5	;RP0=0, select bank0
  4385     0418  1303               	bcf	3,6	;RP1=0, select bank0
  4386     0419  00A5               	movwf	??_sensorLine_read
  4387     041A  0825               	movf	??_sensorLine_read,w
  4388     041B  1683               	bsf	3,5	;RP0=1, select bank1
  4389     041C  1303               	bcf	3,6	;RP1=0, select bank1
  4390     041D  0585               	andwf	5,f	;volatile
  4391                           
  4392                           ;sensor.c: 61: PORTA |= 0b00011100;
  4393     041E  301C               	movlw	28
  4394     041F  1283               	bcf	3,5	;RP0=0, select bank0
  4395     0420  1303               	bcf	3,6	;RP1=0, select bank0
  4396     0421  00A5               	movwf	??_sensorLine_read
  4397     0422  0825               	movf	??_sensorLine_read,w
  4398     0423  0485               	iorwf	5,f	;volatile
  4399     0424                     l3198:
  4400                           
  4401                           ;sensor.c: 63: { delayus_variable=(unsigned char)(100/1); asm("nop"); asm("nop"); } asm(
      +                          "decfsz _delayus_variable,f"); asm("goto $ - 3");;
  4402     0424  3064               	movlw	100
  4403     0425  00F9               	movwf	_delayus_variable
  4404     0426  0000               	nop	;# 
  4405     0427  0000               	nop	;# 
  4406     0428  0BF9               	decfsz	_delayus_variable,f	;# 
  4407     0429  2C13               	goto	($+-3)	;# 
  4408     042A                     l3200:
  4409                           
  4410                           ;sensor.c: 65: TRISA |= 0b00011100;
  4411     042A  301C               	movlw	28
  4412     042B  1283               	bcf	3,5	;RP0=0, select bank0
  4413     042C  1303               	bcf	3,6	;RP1=0, select bank0
  4414     042D  00A5               	movwf	??_sensorLine_read
  4415     042E  0825               	movf	??_sensorLine_read,w
  4416     042F  1683               	bsf	3,5	;RP0=1, select bank1
  4417     0430  1303               	bcf	3,6	;RP1=0, select bank1
  4418     0431  0485               	iorwf	5,f	;volatile
  4419     0432                     l3202:
  4420                           
  4421                           ;sensor.c: 66: delay_big_us(800);
  4422     0432  3020               	movlw	32
  4423     0433  1283               	bcf	3,5	;RP0=0, select bank0
  4424     0434  1303               	bcf	3,6	;RP1=0, select bank0
  4425     0435  00A0               	movwf	delay_big_us@cnt
  4426     0436  3003               	movlw	3
  4427     0437  00A1               	movwf	delay_big_us@cnt+1
  4428     0438  120A  118A  261C  120A  118A  	fcall	_delay_big_us
  4429     043D                     l3204:
  4430                           
  4431                           ;sensor.c: 67: int line_reading = (PORTA & 0b00011100) >> 2;
  4432     043D  1283               	bcf	3,5	;RP0=0, select bank0
  4433     043E  1303               	bcf	3,6	;RP1=0, select bank0
  4434     043F  0805               	movf	5,w	;volatile
  4435     0440  00A5               	movwf	??_sensorLine_read
  4436     0441  3002               	movlw	2
  4437     0442                     u1925:
  4438     0442  1003               	clrc
  4439     0443  0CA5               	rrf	??_sensorLine_read,f
  4440     0444  3EFF               	addlw	-1
  4441     0445  1D03               	skipz
  4442     0446  2C42               	goto	u1925
  4443     0447  0825               	movf	??_sensorLine_read,w
  4444     0448  3907               	andlw	7
  4445     0449  00A6               	movwf	??_sensorLine_read+1
  4446     044A  01A7               	clrf	??_sensorLine_read+2
  4447     044B  0826               	movf	??_sensorLine_read+1,w
  4448     044C  00A8               	movwf	sensorLine_read@line_reading
  4449     044D  0827               	movf	??_sensorLine_read+2,w
  4450     044E  00A9               	movwf	sensorLine_read@line_reading+1
  4451     044F                     l3206:
  4452                           
  4453                           ;sensor.c: 69: return (line_reading);
  4454     044F  0829               	movf	sensorLine_read@line_reading+1,w
  4455     0450  00A4               	movwf	?_sensorLine_read+1
  4456     0451  0828               	movf	sensorLine_read@line_reading,w
  4457     0452  00A3               	movwf	?_sensorLine_read
  4458     0453                     l401:
  4459     0453  0008               	return
  4460     0454                     __end_of_sensorLine_read:
  4461                           
  4462                           	psect	text20
  4463     061C                     __ptext20:	
  4464 ;; *************** function _delay_big_us *****************
  4465 ;; Defined at:
  4466 ;;		line 25 in file "delay.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  cnt             2    0[BANK0 ] unsigned int 
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  i               1    2[BANK0 ] unsigned char 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2, status,0
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4480 ;;      Params:         0       2       0       0       0
  4481 ;;      Locals:         0       1       0       0       0
  4482 ;;      Temps:          0       0       0       0       0
  4483 ;;      Totals:         0       3       0       0       0
  4484 ;;Total ram usage:        3 bytes
  4485 ;; Hardware stack levels used: 1
  4486 ;; Hardware stack levels required when called: 2
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_sensorLine_read
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494     061C                     _delay_big_us:	
  4495                           ;psect for function _delay_big_us
  4496                           
  4497     061C                     l3058:	
  4498                           ;incstack = 0
  4499                           ; Regs used in _delay_big_us: [wreg+status,2+status,0]
  4500                           
  4501                           
  4502                           ;delay.c: 26: unsigned char i;;delay.c: 28: i = (unsigned char)(cnt>>8);
  4503     061C  1283               	bcf	3,5	;RP0=0, select bank0
  4504     061D  1303               	bcf	3,6	;RP1=0, select bank0
  4505     061E  0821               	movf	delay_big_us@cnt+1,w
  4506     061F  00A2               	movwf	delay_big_us@i
  4507                           
  4508                           ;delay.c: 29: while(i>=1) {
  4509     0620  2E2A               	goto	l3064
  4510     0621                     l3060:
  4511                           
  4512                           ;delay.c: 30: i--;
  4513     0621  3001               	movlw	1
  4514     0622  02A2               	subwf	delay_big_us@i,f
  4515     0623                     l3062:
  4516                           
  4517                           ;delay.c: 31: { delayus_variable=(unsigned char)(253/1); asm("nop"); asm("nop"); } asm("
      +                          decfsz _delayus_variable,f"); asm("goto $ - 3");;
  4518     0623  30FD               	movlw	253
  4519     0624  00F9               	movwf	_delayus_variable
  4520     0625  0000               	nop	;# 
  4521     0626  0000               	nop	;# 
  4522     0627  0BF9               	decfsz	_delayus_variable,f	;# 
  4523     0628  2E19               	goto	($+-3)	;# 
  4524     0629  0064               	clrwdt	;# 
  4525     062A                     l3064:
  4526     062A  1283               	bcf	3,5	;RP0=0, select bank0
  4527     062B  1303               	bcf	3,6	;RP1=0, select bank0
  4528     062C  0822               	movf	delay_big_us@i,w
  4529     062D  1D03               	btfss	3,2
  4530     062E  2E30               	goto	u1731
  4531     062F  2E31               	goto	u1730
  4532     0630                     u1731:
  4533     0630  2E21               	goto	l3060
  4534     0631                     u1730:
  4535     0631                     l3066:
  4536                           
  4537                           ;delay.c: 33: };delay.c: 34: { delayus_variable=(unsigned char)((unsigned char)(cnt & 0x
      +                          FF)/1); asm("nop"); asm("nop"); } asm("decfsz _delayus_variable,f"); asm("goto $ - 3");;
  4538     0631  0820               	movf	delay_big_us@cnt,w
  4539     0632  00F9               	movwf	_delayus_variable
  4540     0633  0000               	nop	;# 
  4541     0634  0000               	nop	;# 
  4542     0635  0BF9               	decfsz	_delayus_variable,f	;# 
  4543     0636  2E19               	goto	($+-3)	;# 
  4544     0637                     l182:
  4545     0637  0008               	return
  4546     0638                     __end_of_delay_big_us:
  4547                           
  4548                           	psect	text21
  4549     0586                     __ptext21:	
  4550 ;; *************** function _pwm_set *****************
  4551 ;; Defined at:
  4552 ;;		line 62 in file "pwm.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  channel         2    0[BANK0 ] int 
  4555 ;;  duty_cycle      2    2[BANK0 ] int 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;		None
  4558 ;; Return value:  Size  Location     Type
  4559 ;;                  1    wreg      void 
  4560 ;; Registers used:
  4561 ;;		wreg, status,2, status,0
  4562 ;; Tracked objects:
  4563 ;;		On entry : 0/0
  4564 ;;		On exit  : 0/0
  4565 ;;		Unchanged: 0/0
  4566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4567 ;;      Params:         0       4       0       0       0
  4568 ;;      Locals:         0       0       0       0       0
  4569 ;;      Temps:          0       2       0       0       0
  4570 ;;      Totals:         0       6       0       0       0
  4571 ;;Total ram usage:        6 bytes
  4572 ;; Hardware stack levels used: 1
  4573 ;; Hardware stack levels required when called: 2
  4574 ;; This function calls:
  4575 ;;		Nothing
  4576 ;; This function is called by:
  4577 ;;		_follow_line
  4578 ;;		_main
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582     0586                     _pwm_set:	
  4583                           ;psect for function _pwm_set
  4584                           
  4585     0586                     l3180:	
  4586                           ;incstack = 0
  4587                           ; Regs used in _pwm_set: [wreg+status,2+status,0]
  4588                           
  4589                           
  4590                           ;pwm.c: 63: if(channel == 1){
  4591     0586  1283               	bcf	3,5	;RP0=0, select bank0
  4592     0587  1303               	bcf	3,6	;RP1=0, select bank0
  4593     0588  0320               	decf	pwm_set@channel,w
  4594     0589  0421               	iorwf	pwm_set@channel+1,w
  4595     058A  1D03               	btfss	3,2
  4596     058B  2D8D               	goto	u1901
  4597     058C  2D8E               	goto	u1900
  4598     058D                     u1901:
  4599     058D  2D9B               	goto	l3184
  4600     058E                     u1900:
  4601     058E                     l3182:
  4602                           
  4603                           ;pwm.c: 64: CCPR1L = duty_cycle >> 2;
  4604     058E  0823               	movf	pwm_set@duty_cycle+1,w
  4605     058F  00A5               	movwf	??_pwm_set+1
  4606     0590  0822               	movf	pwm_set@duty_cycle,w
  4607     0591  00A4               	movwf	??_pwm_set
  4608     0592  0D25               	rlf	??_pwm_set+1,w
  4609     0593  0CA5               	rrf	??_pwm_set+1,f
  4610     0594  0CA4               	rrf	??_pwm_set,f
  4611     0595  0D25               	rlf	??_pwm_set+1,w
  4612     0596  0CA5               	rrf	??_pwm_set+1,f
  4613     0597  0CA4               	rrf	??_pwm_set,f
  4614     0598  0824               	movf	??_pwm_set,w
  4615     0599  0095               	movwf	21	;volatile
  4616                           
  4617                           ;pwm.c: 65: }
  4618     059A  2DAE               	goto	l355
  4619     059B                     l3184:
  4620                           
  4621                           ;pwm.c: 66: else if(channel == 2){
  4622     059B  3002               	movlw	2
  4623     059C  0620               	xorwf	pwm_set@channel,w
  4624     059D  0421               	iorwf	pwm_set@channel+1,w
  4625     059E  1D03               	btfss	3,2
  4626     059F  2DA1               	goto	u1911
  4627     05A0  2DA2               	goto	u1910
  4628     05A1                     u1911:
  4629     05A1  2DAE               	goto	l355
  4630     05A2                     u1910:
  4631     05A2                     l3186:
  4632                           
  4633                           ;pwm.c: 67: CCPR2L = duty_cycle >> 2;
  4634     05A2  0823               	movf	pwm_set@duty_cycle+1,w
  4635     05A3  00A5               	movwf	??_pwm_set+1
  4636     05A4  0822               	movf	pwm_set@duty_cycle,w
  4637     05A5  00A4               	movwf	??_pwm_set
  4638     05A6  0D25               	rlf	??_pwm_set+1,w
  4639     05A7  0CA5               	rrf	??_pwm_set+1,f
  4640     05A8  0CA4               	rrf	??_pwm_set,f
  4641     05A9  0D25               	rlf	??_pwm_set+1,w
  4642     05AA  0CA5               	rrf	??_pwm_set+1,f
  4643     05AB  0CA4               	rrf	??_pwm_set,f
  4644     05AC  0824               	movf	??_pwm_set,w
  4645     05AD  009B               	movwf	27	;volatile
  4646     05AE                     l355:
  4647     05AE  0008               	return
  4648     05AF                     __end_of_pwm_set:
  4649                           
  4650                           	psect	text22
  4651     05FC                     __ptext22:	
  4652 ;; *************** function _pwm_direction *****************
  4653 ;; Defined at:
  4654 ;;		line 80 in file "pwm.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  dir             2    0[BANK0 ] int 
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;		None
  4659 ;; Return value:  Size  Location     Type
  4660 ;;                  1    wreg      void 
  4661 ;; Registers used:
  4662 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4668 ;;      Params:         0       2       0       0       0
  4669 ;;      Locals:         0       0       0       0       0
  4670 ;;      Temps:          0       0       0       0       0
  4671 ;;      Totals:         0       2       0       0       0
  4672 ;;Total ram usage:        2 bytes
  4673 ;; Hardware stack levels used: 1
  4674 ;; Hardware stack levels required when called: 2
  4675 ;; This function calls:
  4676 ;;		Nothing
  4677 ;; This function is called by:
  4678 ;;		_follow_line
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681                           
  4682     05FC                     _pwm_direction:	
  4683                           ;psect for function _pwm_direction
  4684                           
  4685     05FC                     l3188:	
  4686                           ;incstack = 0
  4687                           ; Regs used in _pwm_direction: [wreg-fsr0h+status,2+status,0]
  4688                           
  4689                           
  4690                           ;pwm.c: 81: switch (dir) {
  4691     05FC  2E09               	goto	l3190
  4692     05FD                     l359:	
  4693                           ;pwm.c: 82: case 1:
  4694                           
  4695                           
  4696                           ;pwm.c: 83: RA5 = 1;
  4697     05FD  1685               	bsf	5,5	;volatile
  4698                           
  4699                           ;pwm.c: 84: RA6 = 1;
  4700     05FE  1705               	bsf	5,6	;volatile
  4701                           
  4702                           ;pwm.c: 85: break;
  4703     05FF  2E1B               	goto	l364
  4704     0600                     l361:	
  4705                           ;pwm.c: 86: case 2:
  4706                           
  4707                           
  4708                           ;pwm.c: 87: RA5 = 1;
  4709     0600  1685               	bsf	5,5	;volatile
  4710                           
  4711                           ;pwm.c: 88: RA6 = 0;
  4712     0601  1305               	bcf	5,6	;volatile
  4713                           
  4714                           ;pwm.c: 89: break;
  4715     0602  2E1B               	goto	l364
  4716     0603                     l362:	
  4717                           ;pwm.c: 90: case 3:
  4718                           
  4719                           
  4720                           ;pwm.c: 91: RA5 = 0;
  4721     0603  1285               	bcf	5,5	;volatile
  4722                           
  4723                           ;pwm.c: 92: RA6 = 1;
  4724     0604  1705               	bsf	5,6	;volatile
  4725                           
  4726                           ;pwm.c: 93: break;
  4727     0605  2E1B               	goto	l364
  4728     0606                     l363:	
  4729                           ;pwm.c: 94: default:
  4730                           
  4731                           
  4732                           ;pwm.c: 95: RA5 = 0;
  4733     0606  1285               	bcf	5,5	;volatile
  4734                           
  4735                           ;pwm.c: 96: RA6 = 0;
  4736     0607  1305               	bcf	5,6	;volatile
  4737                           
  4738                           ;pwm.c: 97: }
  4739     0608  2E1B               	goto	l364
  4740     0609                     l3190:
  4741                           
  4742                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4743                           ; Switch size 1, requested type "simple"
  4744                           ; Number of cases is 1, Range of values is 0 to 0
  4745                           ; switch strategies available:
  4746                           ; Name         Instructions Cycles
  4747                           ; simple_byte            4     3 (average)
  4748                           ; direct_byte           11     8 (fixed)
  4749                           ; jumptable            260     6 (fixed)
  4750                           ;	Chosen strategy is simple_byte
  4751     0609  1283               	bcf	3,5	;RP0=0, select bank0
  4752     060A  1303               	bcf	3,6	;RP1=0, select bank0
  4753     060B  0821               	movf	pwm_direction@dir+1,w
  4754     060C  3A00               	xorlw	0	; case 0
  4755     060D  1903               	skipnz
  4756     060E  2E10               	goto	l3744
  4757     060F  2E06               	goto	l363
  4758     0610                     l3744:
  4759                           
  4760                           ; Switch size 1, requested type "simple"
  4761                           ; Number of cases is 3, Range of values is 1 to 3
  4762                           ; switch strategies available:
  4763                           ; Name         Instructions Cycles
  4764                           ; simple_byte           10     6 (average)
  4765                           ; direct_byte           20    11 (fixed)
  4766                           ; jumptable            263     9 (fixed)
  4767                           ;	Chosen strategy is simple_byte
  4768     0610  0820               	movf	pwm_direction@dir,w
  4769     0611  3A01               	xorlw	1	; case 1
  4770     0612  1903               	skipnz
  4771     0613  2DFD               	goto	l359
  4772     0614  3A03               	xorlw	3	; case 2
  4773     0615  1903               	skipnz
  4774     0616  2E00               	goto	l361
  4775     0617  3A01               	xorlw	1	; case 3
  4776     0618  1903               	skipnz
  4777     0619  2E03               	goto	l362
  4778     061A  2E06               	goto	l363
  4779     061B                     l364:
  4780     061B  0008               	return
  4781     061C                     __end_of_pwm_direction:
  4782                           
  4783                           	psect	text23
  4784     078A                     __ptext23:	
  4785 ;; *************** function _led_rgb_set_color *****************
  4786 ;; Defined at:
  4787 ;;		line 33 in file "led_rgb.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  led_color       1    wreg     unsigned char 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  led_color       1    1[BANK0 ] unsigned char 
  4792 ;;  command_byte    1    2[BANK0 ] unsigned char 
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  1    wreg      void 
  4795 ;; Registers used:
  4796 ;;		wreg, status,2, status,0, pclath, cstack
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4802 ;;      Params:         0       0       0       0       0
  4803 ;;      Locals:         0       2       0       0       0
  4804 ;;      Temps:          0       0       0       0       0
  4805 ;;      Totals:         0       2       0       0       0
  4806 ;;Total ram usage:        2 bytes
  4807 ;; Hardware stack levels used: 1
  4808 ;; Hardware stack levels required when called: 3
  4809 ;; This function calls:
  4810 ;;		_spi_exchange
  4811 ;; This function is called by:
  4812 ;;		_follow_line
  4813 ;;		_main
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817     078A                     _led_rgb_set_color:	
  4818                           ;psect for function _led_rgb_set_color
  4819                           
  4820                           
  4821                           ;incstack = 0
  4822                           ; Regs used in _led_rgb_set_color: [wreg+status,2+status,0+pclath+cstack]
  4823                           ;led_rgb_set_color@led_color stored from wreg
  4824     078A  1283               	bcf	3,5	;RP0=0, select bank0
  4825     078B  1303               	bcf	3,6	;RP1=0, select bank0
  4826     078C  00A1               	movwf	led_rgb_set_color@led_color
  4827     078D                     l3176:
  4828                           
  4829                           ;led_rgb.c: 34: uint8_t command_byte;;led_rgb.c: 35: command_byte = (1 << 5) + (led_colo
      +                          r & 0b111);
  4830     078D  0821               	movf	led_rgb_set_color@led_color,w
  4831     078E  3907               	andlw	7
  4832     078F  3E20               	addlw	32
  4833     0790  00A2               	movwf	led_rgb_set_color@command_byte
  4834     0791                     l3178:
  4835                           
  4836                           ;led_rgb.c: 37: spi_exchange(command_byte);
  4837     0791  0822               	movf	led_rgb_set_color@command_byte,w
  4838     0792  120A  118A  2756  120A  118A  	fcall	_spi_exchange
  4839     0797                     l306:
  4840     0797  0008               	return
  4841     0798                     __end_of_led_rgb_set_color:
  4842                           
  4843                           	psect	text24
  4844     05AF                     __ptext24:	
  4845 ;; *************** function _lcd_puts *****************
  4846 ;; Defined at:
  4847 ;;		line 95 in file "lcd8x2.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;  s               2    5[BANK0 ] PTR const unsigned char 
  4850 ;;		 -> sVar(9), STR_2(6), STR_1(6), 
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;		None
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      void 
  4855 ;; Registers used:
  4856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4862 ;;      Params:         0       2       0       0       0
  4863 ;;      Locals:         0       0       0       0       0
  4864 ;;      Temps:          0       0       0       0       0
  4865 ;;      Totals:         0       2       0       0       0
  4866 ;;Total ram usage:        2 bytes
  4867 ;; Hardware stack levels used: 1
  4868 ;; Hardware stack levels required when called: 5
  4869 ;; This function calls:
  4870 ;;		_lcd_putchar
  4871 ;; This function is called by:
  4872 ;;		_welcome_message
  4873 ;;		_follow_line
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877     05AF                     _lcd_puts:	
  4878                           ;psect for function _lcd_puts
  4879                           
  4880     05AF                     l3168:	
  4881                           ;incstack = 0
  4882                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4883                           
  4884                           
  4885                           ;lcd8x2.c: 96: while(*s)
  4886     05AF  2DC6               	goto	l3174
  4887     05B0                     l3170:
  4888                           
  4889                           ;lcd8x2.c: 97: lcd_putchar(*s++);
  4890     05B0  0826               	movf	lcd_puts@s+1,w
  4891     05B1  00FF               	movwf	btemp+1
  4892     05B2  0825               	movf	lcd_puts@s,w
  4893     05B3  0084               	movwf	4
  4894     05B4  120A  118A  2372  120A  118A  	fcall	stringtab
  4895     05B9  120A  118A  26FC  120A  118A  	fcall	_lcd_putchar
  4896     05BE                     l3172:
  4897     05BE  3001               	movlw	1
  4898     05BF  1283               	bcf	3,5	;RP0=0, select bank0
  4899     05C0  1303               	bcf	3,6	;RP1=0, select bank0
  4900     05C1  07A5               	addwf	lcd_puts@s,f
  4901     05C2  1803               	skipnc
  4902     05C3  0AA6               	incf	lcd_puts@s+1,f
  4903     05C4  3000               	movlw	0
  4904     05C5  07A6               	addwf	lcd_puts@s+1,f
  4905     05C6                     l3174:
  4906     05C6  1283               	bcf	3,5	;RP0=0, select bank0
  4907     05C7  1303               	bcf	3,6	;RP1=0, select bank0
  4908     05C8  0826               	movf	lcd_puts@s+1,w
  4909     05C9  00FF               	movwf	btemp+1
  4910     05CA  0825               	movf	lcd_puts@s,w
  4911     05CB  0084               	movwf	4
  4912     05CC  120A  118A  2372  120A  118A  	fcall	stringtab
  4913     05D1  3A00               	xorlw	0
  4914     05D2  1D03               	skipz
  4915     05D3  2DD5               	goto	u1891
  4916     05D4  2DD6               	goto	u1890
  4917     05D5                     u1891:
  4918     05D5  2DB0               	goto	l3170
  4919     05D6                     u1890:
  4920     05D6                     l282:
  4921     05D6  0008               	return
  4922     05D7                     __end_of_lcd_puts:
  4923                           
  4924                           	psect	text25
  4925     06FC                     __ptext25:	
  4926 ;; *************** function _lcd_putchar *****************
  4927 ;; Defined at:
  4928 ;;		line 86 in file "lcd8x2.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;  c               1    wreg     unsigned char 
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;  c               1    4[BANK0 ] unsigned char 
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  1    wreg      void 
  4935 ;; Registers used:
  4936 ;;		wreg, status,2, status,0, pclath, cstack
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4942 ;;      Params:         0       0       0       0       0
  4943 ;;      Locals:         0       1       0       0       0
  4944 ;;      Temps:          0       0       0       0       0
  4945 ;;      Totals:         0       1       0       0       0
  4946 ;;Total ram usage:        1 bytes
  4947 ;; Hardware stack levels used: 1
  4948 ;; Hardware stack levels required when called: 4
  4949 ;; This function calls:
  4950 ;;		_spi_send_command
  4951 ;;		_spi_send_data
  4952 ;; This function is called by:
  4953 ;;		_lcd_puts
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957     06FC                     _lcd_putchar:	
  4958                           ;psect for function _lcd_putchar
  4959                           
  4960                           
  4961                           ;incstack = 0
  4962                           ; Regs used in _lcd_putchar: [wreg+status,2+status,0+pclath+cstack]
  4963                           ;lcd_putchar@c stored from wreg
  4964     06FC  1283               	bcf	3,5	;RP0=0, select bank0
  4965     06FD  1303               	bcf	3,6	;RP1=0, select bank0
  4966     06FE  00A4               	movwf	lcd_putchar@c
  4967     06FF                     l3068:
  4968                           
  4969                           ;lcd8x2.c: 87: spi_send_command(18);
  4970     06FF  3012               	movlw	18
  4971     0700  120A  118A  277A  120A  118A  	fcall	_spi_send_command
  4972                           
  4973                           ;lcd8x2.c: 88: spi_send_data(c);
  4974     0705  1283               	bcf	3,5	;RP0=0, select bank0
  4975     0706  1303               	bcf	3,6	;RP1=0, select bank0
  4976     0707  0824               	movf	lcd_putchar@c,w
  4977     0708  120A  118A  27BD  120A  118A  	fcall	_spi_send_data
  4978     070D                     l276:
  4979     070D  0008               	return
  4980     070E                     __end_of_lcd_putchar:
  4981                           
  4982                           	psect	text26
  4983     070E                     __ptext26:	
  4984 ;; *************** function _lcd_goto *****************
  4985 ;; Defined at:
  4986 ;;		line 65 in file "lcd8x2.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  pos             1    wreg     unsigned char 
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;  pos             1    4[BANK0 ] unsigned char 
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1    wreg      void 
  4993 ;; Registers used:
  4994 ;;		wreg, status,2, status,0, pclath, cstack
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5000 ;;      Params:         0       0       0       0       0
  5001 ;;      Locals:         0       1       0       0       0
  5002 ;;      Temps:          0       0       0       0       0
  5003 ;;      Totals:         0       1       0       0       0
  5004 ;;Total ram usage:        1 bytes
  5005 ;; Hardware stack levels used: 1
  5006 ;; Hardware stack levels required when called: 4
  5007 ;; This function calls:
  5008 ;;		_spi_send_command
  5009 ;;		_spi_send_data
  5010 ;; This function is called by:
  5011 ;;		_welcome_message
  5012 ;;		_follow_line
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016     070E                     _lcd_goto:	
  5017                           ;psect for function _lcd_goto
  5018                           
  5019                           
  5020                           ;incstack = 0
  5021                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  5022                           ;lcd_goto@pos stored from wreg
  5023     070E  1283               	bcf	3,5	;RP0=0, select bank0
  5024     070F  1303               	bcf	3,6	;RP1=0, select bank0
  5025     0710  00A4               	movwf	lcd_goto@pos
  5026     0711                     l3166:
  5027                           
  5028                           ;lcd8x2.c: 66: spi_send_command(17);
  5029     0711  3011               	movlw	17
  5030     0712  120A  118A  277A  120A  118A  	fcall	_spi_send_command
  5031                           
  5032                           ;lcd8x2.c: 67: spi_send_data(pos);
  5033     0717  1283               	bcf	3,5	;RP0=0, select bank0
  5034     0718  1303               	bcf	3,6	;RP1=0, select bank0
  5035     0719  0824               	movf	lcd_goto@pos,w
  5036     071A  120A  118A  27BD  120A  118A  	fcall	_spi_send_data
  5037     071F                     l268:
  5038     071F  0008               	return
  5039     0720                     __end_of_lcd_goto:
  5040                           
  5041                           	psect	text27
  5042     07BD                     __ptext27:	
  5043 ;; *************** function _spi_send_data *****************
  5044 ;; Defined at:
  5045 ;;		line 47 in file "lcd8x2.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  data            1    wreg     unsigned char 
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  data            1    1[BANK0 ] unsigned char 
  5050 ;; Return value:  Size  Location     Type
  5051 ;;                  1    wreg      void 
  5052 ;; Registers used:
  5053 ;;		wreg, status,2, status,0, pclath, cstack
  5054 ;; Tracked objects:
  5055 ;;		On entry : 0/0
  5056 ;;		On exit  : 0/0
  5057 ;;		Unchanged: 0/0
  5058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5059 ;;      Params:         0       0       0       0       0
  5060 ;;      Locals:         0       1       0       0       0
  5061 ;;      Temps:          0       0       0       0       0
  5062 ;;      Totals:         0       1       0       0       0
  5063 ;;Total ram usage:        1 bytes
  5064 ;; Hardware stack levels used: 1
  5065 ;; Hardware stack levels required when called: 3
  5066 ;; This function calls:
  5067 ;;		_spi_exchange
  5068 ;; This function is called by:
  5069 ;;		_lcd_goto
  5070 ;;		_lcd_putchar
  5071 ;; This function uses a non-reentrant model
  5072 ;;
  5073                           
  5074     07BD                     _spi_send_data:	
  5075                           ;psect for function _spi_send_data
  5076                           
  5077                           
  5078                           ;incstack = 0
  5079                           ; Regs used in _spi_send_data: [wreg+status,2+status,0+pclath+cstack]
  5080                           ;spi_send_data@data stored from wreg
  5081     07BD  1283               	bcf	3,5	;RP0=0, select bank0
  5082     07BE  1303               	bcf	3,6	;RP1=0, select bank0
  5083     07BF  00A1               	movwf	spi_send_data@data
  5084     07C0                     l3054:
  5085                           
  5086                           ;lcd8x2.c: 48: spi_exchange(data);
  5087     07C0  0821               	movf	spi_send_data@data,w
  5088     07C1  120A  118A  2756  120A  118A  	fcall	_spi_exchange
  5089     07C6                     l262:
  5090     07C6  0008               	return
  5091     07C7                     __end_of_spi_send_data:
  5092                           
  5093                           	psect	text28
  5094     077A                     __ptext28:	
  5095 ;; *************** function _spi_send_command *****************
  5096 ;; Defined at:
  5097 ;;		line 36 in file "lcd8x2.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;  command         1    wreg     unsigned char 
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;  command         1    2[BANK0 ] unsigned char 
  5102 ;;  command_byte    1    3[BANK0 ] unsigned char 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  1    wreg      void 
  5105 ;; Registers used:
  5106 ;;		wreg, status,2, status,0, pclath, cstack
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5112 ;;      Params:         0       0       0       0       0
  5113 ;;      Locals:         0       2       0       0       0
  5114 ;;      Temps:          0       1       0       0       0
  5115 ;;      Totals:         0       3       0       0       0
  5116 ;;Total ram usage:        3 bytes
  5117 ;; Hardware stack levels used: 1
  5118 ;; Hardware stack levels required when called: 3
  5119 ;; This function calls:
  5120 ;;		_spi_exchange
  5121 ;; This function is called by:
  5122 ;;		_lcd_clear
  5123 ;;		_lcd_goto
  5124 ;;		_lcd_show_cursor
  5125 ;;		_lcd_putchar
  5126 ;;		_lcd_set_display_movement
  5127 ;;		_lcd_set_cursor_movement
  5128 ;;		_lcd_get_cursor_position
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132     077A                     _spi_send_command:	
  5133                           ;psect for function _spi_send_command
  5134                           
  5135                           
  5136                           ;incstack = 0
  5137                           ; Regs used in _spi_send_command: [wreg+status,2+status,0+pclath+cstack]
  5138                           ;spi_send_command@command stored from wreg
  5139     077A  1283               	bcf	3,5	;RP0=0, select bank0
  5140     077B  1303               	bcf	3,6	;RP1=0, select bank0
  5141     077C  00A2               	movwf	spi_send_command@command
  5142     077D                     l3048:
  5143                           
  5144                           ;lcd8x2.c: 37: uint8_t command_byte;;lcd8x2.c: 38: command_byte = 2 << 5;
  5145     077D  3040               	movlw	64
  5146     077E  00A3               	movwf	spi_send_command@command_byte
  5147     077F                     l3050:
  5148                           
  5149                           ;lcd8x2.c: 39: command_byte |= command;
  5150     077F  0822               	movf	spi_send_command@command,w
  5151     0780  00A1               	movwf	??_spi_send_command
  5152     0781  0821               	movf	??_spi_send_command,w
  5153     0782  04A3               	iorwf	spi_send_command@command_byte,f
  5154     0783                     l3052:
  5155                           
  5156                           ;lcd8x2.c: 40: spi_exchange(command_byte);
  5157     0783  0823               	movf	spi_send_command@command_byte,w
  5158     0784  120A  118A  2756  120A  118A  	fcall	_spi_exchange
  5159     0789                     l259:
  5160     0789  0008               	return
  5161     078A                     __end_of_spi_send_command:
  5162                           
  5163                           	psect	text29
  5164     052E                     __ptext29:	
  5165 ;; *************** function _duty_cycle_control *****************
  5166 ;; Defined at:
  5167 ;;		line 93 in file "main.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;		None
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;  upper_thresh    2    0        int 
  5172 ;;  nearSensorDa    2   14[BANK0 ] int 
  5173 ;;  dc              2   12[BANK0 ] int 
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  2    8[BANK0 ] int 
  5176 ;; Registers used:
  5177 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5183 ;;      Params:         0       2       0       0       0
  5184 ;;      Locals:         0       4       0       0       0
  5185 ;;      Temps:          0       2       0       0       0
  5186 ;;      Totals:         0       8       0       0       0
  5187 ;;Total ram usage:        8 bytes
  5188 ;; Hardware stack levels used: 1
  5189 ;; Hardware stack levels required when called: 4
  5190 ;; This function calls:
  5191 ;;		_sensorNear_read
  5192 ;; This function is called by:
  5193 ;;		_follow_line
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197     052E                     _duty_cycle_control:	
  5198                           ;psect for function _duty_cycle_control
  5199                           
  5200     052E                     l3210:	
  5201                           ;incstack = 0
  5202                           ; Regs used in _duty_cycle_control: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5203                           
  5204                           
  5205                           ;main.c: 94: int nearSensorData = sensorNear_read();
  5206     052E  120A  118A  2798  120A  118A  	fcall	_sensorNear_read
  5207     0533  1283               	bcf	3,5	;RP0=0, select bank0
  5208     0534  1303               	bcf	3,6	;RP1=0, select bank0
  5209     0535  0827               	movf	?_sensorNear_read+1,w
  5210     0536  00AF               	movwf	duty_cycle_control@nearSensorData+1
  5211     0537  0826               	movf	?_sensorNear_read,w
  5212     0538  00AE               	movwf	duty_cycle_control@nearSensorData
  5213     0539                     l3212:
  5214     0539                     l3214:
  5215                           
  5216                           ;main.c: 96: int dc = 0;
  5217     0539  01AC               	clrf	duty_cycle_control@dc
  5218     053A  01AD               	clrf	duty_cycle_control@dc+1
  5219     053B                     l3216:
  5220                           
  5221                           ;main.c: 97: if(nearSensorData < upper_thresh){
  5222     053B  082F               	movf	duty_cycle_control@nearSensorData+1,w
  5223     053C  3A80               	xorlw	128
  5224     053D  00FF               	movwf	btemp+1
  5225     053E  3081               	movlw	129
  5226     053F  027F               	subwf	btemp+1,w
  5227     0540  1D03               	skipz
  5228     0541  2D44               	goto	u1935
  5229     0542  30E0               	movlw	224
  5230     0543  022E               	subwf	duty_cycle_control@nearSensorData,w
  5231     0544                     u1935:
  5232     0544  1803               	skipnc
  5233     0545  2D47               	goto	u1931
  5234     0546  2D48               	goto	u1930
  5235     0547                     u1931:
  5236     0547  2D56               	goto	l3220
  5237     0548                     u1930:
  5238     0548                     l3218:
  5239                           
  5240                           ;main.c: 98: dc = upper_thresh - nearSensorData;
  5241     0548  30E0               	movlw	224
  5242     0549  1283               	bcf	3,5	;RP0=0, select bank0
  5243     054A  1303               	bcf	3,6	;RP1=0, select bank0
  5244     054B  00AA               	movwf	??_duty_cycle_control
  5245     054C  3001               	movlw	1
  5246     054D  00AB               	movwf	??_duty_cycle_control+1
  5247     054E  082E               	movf	duty_cycle_control@nearSensorData,w
  5248     054F  022A               	subwf	??_duty_cycle_control,w
  5249     0550  00AC               	movwf	duty_cycle_control@dc
  5250     0551  082F               	movf	duty_cycle_control@nearSensorData+1,w
  5251     0552  1C03               	skipc
  5252     0553  0A2F               	incf	duty_cycle_control@nearSensorData+1,w
  5253     0554  022B               	subwf	??_duty_cycle_control+1,w
  5254     0555  00AD               	movwf	duty_cycle_control@dc+1
  5255     0556                     l3220:
  5256                           
  5257                           ;main.c: 99: };main.c: 100: return dc;
  5258     0556  1283               	bcf	3,5	;RP0=0, select bank0
  5259     0557  1303               	bcf	3,6	;RP1=0, select bank0
  5260     0558  082D               	movf	duty_cycle_control@dc+1,w
  5261     0559  00A9               	movwf	?_duty_cycle_control+1
  5262     055A  082C               	movf	duty_cycle_control@dc,w
  5263     055B  00A8               	movwf	?_duty_cycle_control
  5264     055C                     l650:
  5265     055C  0008               	return
  5266     055D                     __end_of_duty_cycle_control:
  5267                           
  5268                           	psect	text30
  5269     0798                     __ptext30:	
  5270 ;; *************** function _sensorNear_read *****************
  5271 ;; Defined at:
  5272 ;;		line 75 in file "sensor.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;		None
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;		None
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  2    6[BANK0 ] int 
  5279 ;; Registers used:
  5280 ;;		wreg, status,2, status,0, pclath, cstack
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5286 ;;      Params:         0       2       0       0       0
  5287 ;;      Locals:         0       0       0       0       0
  5288 ;;      Temps:          0       0       0       0       0
  5289 ;;      Totals:         0       2       0       0       0
  5290 ;;Total ram usage:        2 bytes
  5291 ;; Hardware stack levels used: 1
  5292 ;; Hardware stack levels required when called: 3
  5293 ;; This function calls:
  5294 ;;		_adc_read
  5295 ;; This function is called by:
  5296 ;;		_duty_cycle_control
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300     0798                     _sensorNear_read:	
  5301                           ;psect for function _sensorNear_read
  5302                           
  5303     0798                     l3070:	
  5304                           ;incstack = 0
  5305                           ; Regs used in _sensorNear_read: [wreg+status,2+status,0+pclath+cstack]
  5306                           
  5307                           
  5308                           ;sensor.c: 76: return (adc_read(0));
  5309     0798  3000               	movlw	0
  5310     0799  120A  118A  2490  120A  118A  	fcall	_adc_read
  5311     079E  1283               	bcf	3,5	;RP0=0, select bank0
  5312     079F  1303               	bcf	3,6	;RP1=0, select bank0
  5313     07A0  0821               	movf	?_adc_read+1,w
  5314     07A1  00A7               	movwf	?_sensorNear_read+1
  5315     07A2  0820               	movf	?_adc_read,w
  5316     07A3  00A6               	movwf	?_sensorNear_read
  5317     07A4                     l404:
  5318     07A4  0008               	return
  5319     07A5                     __end_of_sensorNear_read:
  5320                           
  5321                           	psect	text31
  5322     0490                     __ptext31:	
  5323 ;; *************** function _adc_read *****************
  5324 ;; Defined at:
  5325 ;;		line 84 in file "adc.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;  adc_channel     1    wreg     unsigned char 
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;  adc_channel     1    5[BANK0 ] unsigned char 
  5330 ;;  adc_result      2    3[BANK0 ] struct wordtype
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  2    0[BANK0 ] unsigned int 
  5333 ;; Registers used:
  5334 ;;		wreg, status,2, status,0
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5340 ;;      Params:         0       2       0       0       0
  5341 ;;      Locals:         0       3       0       0       0
  5342 ;;      Temps:          0       1       0       0       0
  5343 ;;      Totals:         0       6       0       0       0
  5344 ;;Total ram usage:        6 bytes
  5345 ;; Hardware stack levels used: 1
  5346 ;; Hardware stack levels required when called: 2
  5347 ;; This function calls:
  5348 ;;		Nothing
  5349 ;; This function is called by:
  5350 ;;		_sensorNear_read
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354     0490                     _adc_read:	
  5355                           ;psect for function _adc_read
  5356                           
  5357                           
  5358                           ;incstack = 0
  5359                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  5360                           ;adc_read@adc_channel stored from wreg
  5361     0490  1283               	bcf	3,5	;RP0=0, select bank0
  5362     0491  1303               	bcf	3,6	;RP1=0, select bank0
  5363     0492  00A5               	movwf	adc_read@adc_channel
  5364     0493                     l3020:
  5365                           
  5366                           ;adc.c: 86: union wordtype adc_result;;adc.c: 89: if ((adc_channel > 4 && adc_channel < 
      +                          8) || adc_channel > 13) return (0);
  5367     0493  3005               	movlw	5
  5368     0494  0225               	subwf	adc_read@adc_channel,w
  5369     0495  1C03               	skipc
  5370     0496  2C98               	goto	u1691
  5371     0497  2C99               	goto	u1690
  5372     0498                     u1691:
  5373     0498  2C9F               	goto	l3024
  5374     0499                     u1690:
  5375     0499                     l3022:
  5376     0499  3008               	movlw	8
  5377     049A  0225               	subwf	adc_read@adc_channel,w
  5378     049B  1C03               	skipc
  5379     049C  2C9E               	goto	u1701
  5380     049D  2C9F               	goto	u1700
  5381     049E                     u1701:
  5382     049E  2CA5               	goto	l3026
  5383     049F                     u1700:
  5384     049F                     l3024:
  5385     049F  300E               	movlw	14
  5386     04A0  0225               	subwf	adc_read@adc_channel,w
  5387     04A1  1C03               	skipc
  5388     04A2  2CA4               	goto	u1711
  5389     04A3  2CA5               	goto	u1710
  5390     04A4                     u1711:
  5391     04A4  2CA8               	goto	l3030
  5392     04A5                     u1710:
  5393     04A5                     l3026:
  5394     04A5  01A0               	clrf	?_adc_read
  5395     04A6  01A1               	clrf	?_adc_read+1
  5396     04A7  2CCB               	goto	l83
  5397     04A8                     l3030:
  5398                           
  5399                           ;adc.c: 92: ADCON0bits.CHS = adc_channel;
  5400     04A8  0825               	movf	adc_read@adc_channel,w
  5401     04A9  00A2               	movwf	??_adc_read
  5402     04AA  0DA2               	rlf	??_adc_read,f
  5403     04AB  0DA2               	rlf	??_adc_read,f
  5404     04AC  081F               	movf	31,w	;volatile
  5405     04AD  0622               	xorwf	??_adc_read,w
  5406     04AE  39C3               	andlw	-61
  5407     04AF  0622               	xorwf	??_adc_read,w
  5408     04B0  009F               	movwf	31	;volatile
  5409     04B1                     l3032:
  5410                           
  5411                           ;adc.c: 93: ADON = 1;
  5412     04B1  141F               	bsf	31,0	;volatile
  5413     04B2                     l3034:
  5414                           
  5415                           ;adc.c: 94: ADIF = 0;
  5416     04B2  130C               	bcf	12,6	;volatile
  5417     04B3                     l3036:
  5418                           
  5419                           ;adc.c: 95: ADRESL = 0;
  5420     04B3  1683               	bsf	3,5	;RP0=1, select bank1
  5421     04B4  1303               	bcf	3,6	;RP1=0, select bank1
  5422     04B5  019E               	clrf	30	;volatile
  5423     04B6                     l3038:
  5424                           
  5425                           ;adc.c: 96: ADRESH = 0;
  5426     04B6  1283               	bcf	3,5	;RP0=0, select bank0
  5427     04B7  1303               	bcf	3,6	;RP1=0, select bank0
  5428     04B8  019E               	clrf	30	;volatile
  5429     04B9                     l3040:
  5430                           
  5431                           ;adc.c: 98: GO = 1;
  5432     04B9  149F               	bsf	31,1	;volatile
  5433     04BA                     l84:	
  5434                           ;adc.c: 99: while(!ADIF) continue;
  5435                           
  5436     04BA  1F0C               	btfss	12,6	;volatile
  5437     04BB  2CBD               	goto	u1721
  5438     04BC  2CBE               	goto	u1720
  5439     04BD                     u1721:
  5440     04BD  2CBA               	goto	l84
  5441     04BE                     u1720:
  5442     04BE                     l3042:
  5443                           
  5444                           ;adc.c: 100: adc_result.byte.low = ADRESL;
  5445     04BE  1683               	bsf	3,5	;RP0=1, select bank1
  5446     04BF  1303               	bcf	3,6	;RP1=0, select bank1
  5447     04C0  081E               	movf	30,w	;volatile
  5448     04C1  1283               	bcf	3,5	;RP0=0, select bank0
  5449     04C2  1303               	bcf	3,6	;RP1=0, select bank0
  5450     04C3  00A3               	movwf	adc_read@adc_result
  5451                           
  5452                           ;adc.c: 101: adc_result.byte.high = ADRESH;
  5453     04C4  081E               	movf	30,w	;volatile
  5454     04C5  00A4               	movwf	adc_read@adc_result+1
  5455     04C6                     l3044:
  5456                           
  5457                           ;adc.c: 102: ADON = 0;
  5458     04C6  101F               	bcf	31,0	;volatile
  5459                           
  5460                           ;adc.c: 103: return (adc_result.word);
  5461     04C7  0824               	movf	adc_read@adc_result+1,w
  5462     04C8  00A1               	movwf	?_adc_read+1
  5463     04C9  0823               	movf	adc_read@adc_result,w
  5464     04CA  00A0               	movwf	?_adc_read
  5465     04CB                     l83:
  5466     04CB  0008               	return
  5467     04CC                     __end_of_adc_read:
  5468                           
  5469                           	psect	text32
  5470     0653                     __ptext32:	
  5471 ;; *************** function _delay_s *****************
  5472 ;; Defined at:
  5473 ;;		line 70 in file "delay.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;  cnt             1    wreg     unsigned char 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  cnt             1    2[BANK0 ] unsigned char 
  5478 ;;  i               1    3[BANK0 ] unsigned char 
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  1    wreg      void 
  5481 ;; Registers used:
  5482 ;;		wreg, status,2, status,0, pclath, cstack
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5488 ;;      Params:         0       0       0       0       0
  5489 ;;      Locals:         0       2       0       0       0
  5490 ;;      Temps:          0       0       0       0       0
  5491 ;;      Totals:         0       2       0       0       0
  5492 ;;Total ram usage:        2 bytes
  5493 ;; Hardware stack levels used: 1
  5494 ;; Hardware stack levels required when called: 3
  5495 ;; This function calls:
  5496 ;;		_delay_ms
  5497 ;; This function is called by:
  5498 ;;		_main
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502     0653                     _delay_s:	
  5503                           ;psect for function _delay_s
  5504                           
  5505                           
  5506                           ;incstack = 0
  5507                           ; Regs used in _delay_s: [wreg+status,2+status,0+pclath+cstack]
  5508                           ;delay_s@cnt stored from wreg
  5509     0653  1283               	bcf	3,5	;RP0=0, select bank0
  5510     0654  1303               	bcf	3,6	;RP1=0, select bank0
  5511     0655  00A2               	movwf	delay_s@cnt
  5512     0656                     l206:	
  5513                           ;delay.c: 71: unsigned char i;;delay.c: 72: do {
  5514                           
  5515     0656                     l3322:
  5516                           
  5517                           ;delay.c: 73: i = 4;
  5518     0656  3004               	movlw	4
  5519     0657  00A3               	movwf	delay_s@i
  5520     0658                     l3324:
  5521                           
  5522                           ;delay.c: 75: delay_ms(250);
  5523     0658  30FA               	movlw	250
  5524     0659  120A  118A  266E  120A  118A  	fcall	_delay_ms
  5525     065E  0064               	clrwdt	;# 
  5526     065F                     l3326:
  5527                           
  5528                           ;delay.c: 77: } while(--i);
  5529     065F  3001               	movlw	1
  5530     0660  1283               	bcf	3,5	;RP0=0, select bank0
  5531     0661  1303               	bcf	3,6	;RP1=0, select bank0
  5532     0662  02A3               	subwf	delay_s@i,f
  5533     0663  1D03               	btfss	3,2
  5534     0664  2E66               	goto	u2031
  5535     0665  2E67               	goto	u2030
  5536     0666                     u2031:
  5537     0666  2E58               	goto	l3324
  5538     0667                     u2030:
  5539     0667                     l3328:
  5540                           
  5541                           ;delay.c: 78: } while(--cnt);
  5542     0667  3001               	movlw	1
  5543     0668  02A2               	subwf	delay_s@cnt,f
  5544     0669  1D03               	btfss	3,2
  5545     066A  2E6C               	goto	u2041
  5546     066B  2E6D               	goto	u2040
  5547     066C                     u2041:
  5548     066C  2E56               	goto	l206
  5549     066D                     u2040:
  5550     066D                     l210:
  5551     066D  0008               	return
  5552     066E                     __end_of_delay_s:
  5553                           
  5554                           	psect	text33
  5555     066E                     __ptext33:	
  5556 ;; *************** function _delay_ms *****************
  5557 ;; Defined at:
  5558 ;;		line 37 in file "delay.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  cnt             1    wreg     unsigned char 
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;  cnt             1    0[BANK0 ] unsigned char 
  5563 ;;  i               1    1[BANK0 ] unsigned char 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  1    wreg      void 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5573 ;;      Params:         0       0       0       0       0
  5574 ;;      Locals:         0       2       0       0       0
  5575 ;;      Temps:          0       0       0       0       0
  5576 ;;      Totals:         0       2       0       0       0
  5577 ;;Total ram usage:        2 bytes
  5578 ;; Hardware stack levels used: 1
  5579 ;; Hardware stack levels required when called: 2
  5580 ;; This function calls:
  5581 ;;		Nothing
  5582 ;; This function is called by:
  5583 ;;		_delay_s
  5584 ;;		_sensor_power
  5585 ;;		_welcome_message
  5586 ;;		_compass_get_heading
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590     066E                     _delay_ms:	
  5591                           ;psect for function _delay_ms
  5592                           
  5593                           
  5594                           ;incstack = 0
  5595                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
  5596                           ;delay_ms@cnt stored from wreg
  5597     066E  1283               	bcf	3,5	;RP0=0, select bank0
  5598     066F  1303               	bcf	3,6	;RP1=0, select bank0
  5599     0670  00A0               	movwf	delay_ms@cnt
  5600     0671                     l185:	
  5601                           ;delay.c: 38: unsigned char i;;delay.c: 39: do {
  5602                           
  5603     0671                     l3160:
  5604                           
  5605                           ;delay.c: 40: i = 4;
  5606     0671  3004               	movlw	4
  5607     0672  00A1               	movwf	delay_ms@i
  5608     0673                     l186:	
  5609                           ;delay.c: 41: do {
  5610                           
  5611                           
  5612                           ;delay.c: 42: { delayus_variable=(unsigned char)(250/1); asm("nop"); asm("nop"); } asm("
      +                          decfsz _delayus_variable,f"); asm("goto $ - 3");;
  5613     0673  30FA               	movlw	250
  5614     0674  00F9               	movwf	_delayus_variable
  5615     0675  0000               	nop	;# 
  5616     0676  0000               	nop	;# 
  5617     0677  0BF9               	decfsz	_delayus_variable,f	;# 
  5618     0678  2E6B               	goto	($+-3)	;# 
  5619     0679  0064               	clrwdt	;# 
  5620     067A                     l3162:
  5621                           
  5622                           ;delay.c: 44: } while(--i);
  5623     067A  3001               	movlw	1
  5624     067B  1283               	bcf	3,5	;RP0=0, select bank0
  5625     067C  1303               	bcf	3,6	;RP1=0, select bank0
  5626     067D  02A1               	subwf	delay_ms@i,f
  5627     067E  1D03               	btfss	3,2
  5628     067F  2E81               	goto	u1871
  5629     0680  2E82               	goto	u1870
  5630     0681                     u1871:
  5631     0681  2E73               	goto	l186
  5632     0682                     u1870:
  5633     0682                     l3164:
  5634                           
  5635                           ;delay.c: 45: } while(--cnt);
  5636     0682  3001               	movlw	1
  5637     0683  02A0               	subwf	delay_ms@cnt,f
  5638     0684  1D03               	btfss	3,2
  5639     0685  2E87               	goto	u1881
  5640     0686  2E88               	goto	u1880
  5641     0687                     u1881:
  5642     0687  2E71               	goto	l185
  5643     0688                     u1880:
  5644     0688                     l189:
  5645     0688  0008               	return
  5646     0689                     __end_of_delay_ms:
  5647                           
  5648                           	psect	text34
  5649     06A3                     __ptext34:	
  5650 ;; *************** function _compass_init *****************
  5651 ;; Defined at:
  5652 ;;		line 40 in file "compass.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;		None
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;  command_byte    1    0        unsigned char 
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  1    wreg      void 
  5659 ;; Registers used:
  5660 ;;		wreg, status,2, status,0, pclath, cstack
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5666 ;;      Params:         0       0       0       0       0
  5667 ;;      Locals:         0       0       0       0       0
  5668 ;;      Temps:          0       0       0       0       0
  5669 ;;      Totals:         0       0       0       0       0
  5670 ;;Total ram usage:        0 bytes
  5671 ;; Hardware stack levels used: 1
  5672 ;; Hardware stack levels required when called: 5
  5673 ;; This function calls:
  5674 ;;		_compass_set_datarate
  5675 ;;		_compass_set_operativemode
  5676 ;;		_compass_set_scale
  5677 ;;		_spi_write
  5678 ;; This function is called by:
  5679 ;;		_main
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683     06A3                     _compass_init:	
  5684                           ;psect for function _compass_init
  5685                           
  5686     06A3                     l3282:	
  5687                           ;incstack = 0
  5688                           ; Regs used in _compass_init: [wreg+status,2+status,0+pclath+cstack]
  5689                           
  5690     06A3                     l3284:
  5691                           
  5692                           ;compass.c: 43: spi_write(command_byte);
  5693     06A3  30A1               	movlw	161
  5694     06A4  120A  118A  27C7  120A  118A  	fcall	_spi_write
  5695     06A9                     l3286:
  5696                           
  5697                           ;compass.c: 45: compass_set_datarate(7);
  5698     06A9  3007               	movlw	7
  5699     06AA  120A  118A  2744  120A  118A  	fcall	_compass_set_datarate
  5700     06AF                     l3288:
  5701                           
  5702                           ;compass.c: 46: compass_set_operativemode(3);
  5703     06AF  3003               	movlw	3
  5704     06B0  120A  118A  2732  120A  118A  	fcall	_compass_set_operativemode
  5705     06B5                     l3290:
  5706                           
  5707                           ;compass.c: 47: compass_set_scale(0);
  5708     06B5  3000               	movlw	0
  5709     06B6  120A  118A  2720  120A  118A  	fcall	_compass_set_scale
  5710     06BB                     l120:
  5711     06BB  0008               	return
  5712     06BC                     __end_of_compass_init:
  5713                           
  5714                           	psect	text35
  5715     0720                     __ptext35:	
  5716 ;; *************** function _compass_set_scale *****************
  5717 ;; Defined at:
  5718 ;;		line 155 in file "compass.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  scale           1    wreg     unsigned char 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;  scale           1    2[BANK0 ] unsigned char 
  5723 ;;  command_byte    1    0        unsigned char 
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  1    wreg      void 
  5726 ;; Registers used:
  5727 ;;		wreg, status,2, status,0, pclath, cstack
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5733 ;;      Params:         0       0       0       0       0
  5734 ;;      Locals:         0       1       0       0       0
  5735 ;;      Temps:          0       0       0       0       0
  5736 ;;      Totals:         0       1       0       0       0
  5737 ;;Total ram usage:        1 bytes
  5738 ;; Hardware stack levels used: 1
  5739 ;; Hardware stack levels required when called: 4
  5740 ;; This function calls:
  5741 ;;		_spi_write
  5742 ;; This function is called by:
  5743 ;;		_compass_init
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747     0720                     _compass_set_scale:	
  5748                           ;psect for function _compass_set_scale
  5749                           
  5750                           
  5751                           ;incstack = 0
  5752                           ; Regs used in _compass_set_scale: [wreg+status,2+status,0+pclath+cstack]
  5753                           ;compass_set_scale@scale stored from wreg
  5754     0720  1283               	bcf	3,5	;RP0=0, select bank0
  5755     0721  1303               	bcf	3,6	;RP1=0, select bank0
  5756     0722  00A2               	movwf	compass_set_scale@scale
  5757     0723                     l3152:
  5758     0723                     l3154:
  5759                           
  5760                           ;compass.c: 158: spi_write(command_byte);
  5761     0723  30AA               	movlw	170
  5762     0724  120A  118A  27C7  120A  118A  	fcall	_spi_write
  5763     0729                     l3156:
  5764                           
  5765                           ;compass.c: 159: spi_write(scale);
  5766     0729  1283               	bcf	3,5	;RP0=0, select bank0
  5767     072A  1303               	bcf	3,6	;RP1=0, select bank0
  5768     072B  0822               	movf	compass_set_scale@scale,w
  5769     072C  120A  118A  27C7  120A  118A  	fcall	_spi_write
  5770     0731                     l147:
  5771     0731  0008               	return
  5772     0732                     __end_of_compass_set_scale:
  5773                           
  5774                           	psect	text36
  5775     0732                     __ptext36:	
  5776 ;; *************** function _compass_set_operativemode *****************
  5777 ;; Defined at:
  5778 ;;		line 101 in file "compass.c"
  5779 ;; Parameters:    Size  Location     Type
  5780 ;;  mode            1    wreg     unsigned char 
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;  mode            1    2[BANK0 ] unsigned char 
  5783 ;;  command_byte    1    0        unsigned char 
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  1    wreg      void 
  5786 ;; Registers used:
  5787 ;;		wreg, status,2, status,0, pclath, cstack
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5793 ;;      Params:         0       0       0       0       0
  5794 ;;      Locals:         0       1       0       0       0
  5795 ;;      Temps:          0       0       0       0       0
  5796 ;;      Totals:         0       1       0       0       0
  5797 ;;Total ram usage:        1 bytes
  5798 ;; Hardware stack levels used: 1
  5799 ;; Hardware stack levels required when called: 4
  5800 ;; This function calls:
  5801 ;;		_spi_write
  5802 ;; This function is called by:
  5803 ;;		_compass_init
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807     0732                     _compass_set_operativemode:	
  5808                           ;psect for function _compass_set_operativemode
  5809                           
  5810                           
  5811                           ;incstack = 0
  5812                           ; Regs used in _compass_set_operativemode: [wreg+status,2+status,0+pclath+cstack]
  5813                           ;compass_set_operativemode@mode stored from wreg
  5814     0732  1283               	bcf	3,5	;RP0=0, select bank0
  5815     0733  1303               	bcf	3,6	;RP1=0, select bank0
  5816     0734  00A2               	movwf	compass_set_operativemode@mode
  5817     0735                     l3144:
  5818     0735                     l3146:
  5819                           
  5820                           ;compass.c: 104: spi_write(command_byte);
  5821     0735  30A6               	movlw	166
  5822     0736  120A  118A  27C7  120A  118A  	fcall	_spi_write
  5823     073B                     l3148:
  5824                           
  5825                           ;compass.c: 105: spi_write(mode);
  5826     073B  1283               	bcf	3,5	;RP0=0, select bank0
  5827     073C  1303               	bcf	3,6	;RP1=0, select bank0
  5828     073D  0822               	movf	compass_set_operativemode@mode,w
  5829     073E  120A  118A  27C7  120A  118A  	fcall	_spi_write
  5830     0743                     l135:
  5831     0743  0008               	return
  5832     0744                     __end_of_compass_set_operativemode:
  5833                           
  5834                           	psect	text37
  5835     0744                     __ptext37:	
  5836 ;; *************** function _compass_set_datarate *****************
  5837 ;; Defined at:
  5838 ;;		line 128 in file "compass.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;  mode            1    wreg     unsigned char 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;  mode            1    2[BANK0 ] unsigned char 
  5843 ;;  command_byte    1    0        unsigned char 
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  1    wreg      void 
  5846 ;; Registers used:
  5847 ;;		wreg, status,2, status,0, pclath, cstack
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5853 ;;      Params:         0       0       0       0       0
  5854 ;;      Locals:         0       1       0       0       0
  5855 ;;      Temps:          0       0       0       0       0
  5856 ;;      Totals:         0       1       0       0       0
  5857 ;;Total ram usage:        1 bytes
  5858 ;; Hardware stack levels used: 1
  5859 ;; Hardware stack levels required when called: 4
  5860 ;; This function calls:
  5861 ;;		_spi_write
  5862 ;; This function is called by:
  5863 ;;		_compass_init
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867     0744                     _compass_set_datarate:	
  5868                           ;psect for function _compass_set_datarate
  5869                           
  5870                           
  5871                           ;incstack = 0
  5872                           ; Regs used in _compass_set_datarate: [wreg+status,2+status,0+pclath+cstack]
  5873                           ;compass_set_datarate@mode stored from wreg
  5874     0744  1283               	bcf	3,5	;RP0=0, select bank0
  5875     0745  1303               	bcf	3,6	;RP1=0, select bank0
  5876     0746  00A2               	movwf	compass_set_datarate@mode
  5877     0747                     l3136:
  5878     0747                     l3138:
  5879                           
  5880                           ;compass.c: 131: spi_write(command_byte);
  5881     0747  30A8               	movlw	168
  5882     0748  120A  118A  27C7  120A  118A  	fcall	_spi_write
  5883     074D                     l3140:
  5884                           
  5885                           ;compass.c: 132: spi_write(mode);
  5886     074D  1283               	bcf	3,5	;RP0=0, select bank0
  5887     074E  1303               	bcf	3,6	;RP1=0, select bank0
  5888     074F  0822               	movf	compass_set_datarate@mode,w
  5889     0750  120A  118A  27C7  120A  118A  	fcall	_spi_write
  5890     0755                     l141:
  5891     0755  0008               	return
  5892     0756                     __end_of_compass_set_datarate:
  5893                           
  5894                           	psect	text38
  5895     07C7                     __ptext38:	
  5896 ;; *************** function _spi_write *****************
  5897 ;; Defined at:
  5898 ;;		line 70 in file "spi.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;  data            1    wreg     unsigned char 
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;  data            1    1[BANK0 ] unsigned char 
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  1    wreg      void 
  5905 ;; Registers used:
  5906 ;;		wreg, status,2, status,0, pclath, cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5912 ;;      Params:         0       0       0       0       0
  5913 ;;      Locals:         0       1       0       0       0
  5914 ;;      Temps:          0       0       0       0       0
  5915 ;;      Totals:         0       1       0       0       0
  5916 ;;Total ram usage:        1 bytes
  5917 ;; Hardware stack levels used: 1
  5918 ;; Hardware stack levels required when called: 3
  5919 ;; This function calls:
  5920 ;;		_spi_exchange
  5921 ;; This function is called by:
  5922 ;;		_compass_init
  5923 ;;		_compass_set_operativemode
  5924 ;;		_compass_set_datarate
  5925 ;;		_compass_set_scale
  5926 ;;		_battery_level
  5927 ;;		_compass_get_id
  5928 ;;		_compass_enable
  5929 ;;		_compass_disable
  5930 ;;		_compass_temperature_enable
  5931 ;;		_compass_temperature_disable
  5932 ;;		_compass_set_conversionmode
  5933 ;;		_compass_set_fastdatarate
  5934 ;;		_compass_reset
  5935 ;;		_compass_get_status
  5936 ;;		_compass_get_X
  5937 ;;		_compass_get_Y
  5938 ;;		_compass_get_Z
  5939 ;;		_compass_get_temperature
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943     07C7                     _spi_write:	
  5944                           ;psect for function _spi_write
  5945                           
  5946                           
  5947                           ;incstack = 0
  5948                           ; Regs used in _spi_write: [wreg+status,2+status,0+pclath+cstack]
  5949                           ;spi_write@data stored from wreg
  5950     07C7  1283               	bcf	3,5	;RP0=0, select bank0
  5951     07C8  1303               	bcf	3,6	;RP1=0, select bank0
  5952     07C9  00A1               	movwf	spi_write@data
  5953     07CA                     l3056:
  5954                           
  5955                           ;spi.c: 71: spi_exchange(data);
  5956     07CA  0821               	movf	spi_write@data,w
  5957     07CB  120A  118A  2756  120A  118A  	fcall	_spi_exchange
  5958     07D0                     l557:
  5959     07D0  0008               	return
  5960     07D1                     __end_of_spi_write:
  5961                           
  5962                           	psect	text39
  5963     0756                     __ptext39:	
  5964 ;; *************** function _spi_exchange *****************
  5965 ;; Defined at:
  5966 ;;		line 44 in file "spi.c"
  5967 ;; Parameters:    Size  Location     Type
  5968 ;;  data            1    wreg     unsigned char 
  5969 ;; Auto vars:     Size  Location     Type
  5970 ;;  data            1    0[BANK0 ] unsigned char 
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  1    wreg      unsigned char 
  5973 ;; Registers used:
  5974 ;;		wreg
  5975 ;; Tracked objects:
  5976 ;;		On entry : 0/0
  5977 ;;		On exit  : 0/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5980 ;;      Params:         0       0       0       0       0
  5981 ;;      Locals:         0       1       0       0       0
  5982 ;;      Temps:          0       0       0       0       0
  5983 ;;      Totals:         0       1       0       0       0
  5984 ;;Total ram usage:        1 bytes
  5985 ;; Hardware stack levels used: 1
  5986 ;; Hardware stack levels required when called: 2
  5987 ;; This function calls:
  5988 ;;		Nothing
  5989 ;; This function is called by:
  5990 ;;		_spi_send_command
  5991 ;;		_spi_send_data
  5992 ;;		_led_rgb_set_color
  5993 ;;		_spi_write
  5994 ;;		_lcd_get_cursor_position
  5995 ;;		_led_rgb_set_red_level
  5996 ;;		_led_rgb_set_green_level
  5997 ;;		_led_rgb_set_blue_level
  5998 ;;		_spi_read
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002     0756                     _spi_exchange:	
  6003                           ;psect for function _spi_exchange
  6004                           
  6005                           
  6006                           ;incstack = 0
  6007                           ; Regs used in _spi_exchange: [wreg]
  6008                           ;spi_exchange@data stored from wreg
  6009     0756  1283               	bcf	3,5	;RP0=0, select bank0
  6010     0757  1303               	bcf	3,6	;RP1=0, select bank0
  6011     0758  00A0               	movwf	spi_exchange@data
  6012     0759                     l3012:
  6013                           
  6014                           ;spi.c: 45: WCOL = 0;
  6015     0759  1394               	bcf	20,7	;volatile
  6016                           
  6017                           ;spi.c: 46: RC0 = 0;
  6018     075A  1007               	bcf	7,0	;volatile
  6019     075B                     l3014:
  6020                           
  6021                           ;spi.c: 47: SSPBUF = data;
  6022     075B  0820               	movf	spi_exchange@data,w
  6023     075C  0093               	movwf	19	;volatile
  6024     075D                     l545:	
  6025                           ;spi.c: 48: while(SSPSTATbits.BF == 0);
  6026                           
  6027     075D  1683               	bsf	3,5	;RP0=1, select bank1
  6028     075E  1303               	bcf	3,6	;RP1=0, select bank1
  6029     075F  1C14               	btfss	20,0	;volatile
  6030     0760  2F62               	goto	u1681
  6031     0761  2F63               	goto	u1680
  6032     0762                     u1681:
  6033     0762  2F5D               	goto	l545
  6034     0763                     u1680:
  6035     0763                     l547:
  6036                           
  6037                           ;spi.c: 49: RC0 = 1;
  6038     0763  1283               	bcf	3,5	;RP0=0, select bank0
  6039     0764  1303               	bcf	3,6	;RP1=0, select bank0
  6040     0765  1407               	bsf	7,0	;volatile
  6041     0766                     l3016:
  6042                           
  6043                           ;spi.c: 50: return SSPBUF;
  6044     0766  0813               	movf	19,w	;volatile
  6045     0767                     l548:
  6046     0767  0008               	return
  6047     0768                     __end_of_spi_exchange:
  6048                           
  6049                           	psect	text40
  6050     07F1                     __ptext40:	
  6051 ;; *************** function _battery_init *****************
  6052 ;; Defined at:
  6053 ;;		line 20 in file "battery.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;		None
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;		None
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  1    wreg      void 
  6060 ;; Registers used:
  6061 ;;		None
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6067 ;;      Params:         0       0       0       0       0
  6068 ;;      Locals:         0       0       0       0       0
  6069 ;;      Temps:          0       0       0       0       0
  6070 ;;      Totals:         0       0       0       0       0
  6071 ;;Total ram usage:        0 bytes
  6072 ;; Hardware stack levels used: 1
  6073 ;; Hardware stack levels required when called: 2
  6074 ;; This function calls:
  6075 ;;		Nothing
  6076 ;; This function is called by:
  6077 ;;		_main
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080                           
  6081     07F1                     _battery_init:	
  6082                           ;psect for function _battery_init
  6083                           
  6084     07F1                     l93:	
  6085                           ;incstack = 0
  6086                           ; Regs used in _battery_init: []
  6087                           
  6088     07F1  0008               	return
  6089     07F2                     __end_of_battery_init:
  6090                           
  6091                           	psect	text41
  6092     04FE                     __ptext41:	
  6093 ;; *************** function _isr *****************
  6094 ;; Defined at:
  6095 ;;		line 68 in file "main.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;		None
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;  portB           1    5[COMMON] unsigned char 
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  1    wreg      void 
  6102 ;; Registers used:
  6103 ;;		wreg, status,2, status,0, pclath, cstack
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6109 ;;      Params:         0       0       0       0       0
  6110 ;;      Locals:         1       0       0       0       0
  6111 ;;      Temps:          2       0       0       0       0
  6112 ;;      Totals:         3       0       0       0       0
  6113 ;;Total ram usage:        3 bytes
  6114 ;; Hardware stack levels used: 1
  6115 ;; Hardware stack levels required when called: 1
  6116 ;; This function calls:
  6117 ;;		_key_debounce
  6118 ;;		_key_read
  6119 ;; This function is called by:
  6120 ;;		Interrupt level 1
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124     04FE                     _isr:	
  6125                           ;psect for function _isr
  6126                           
  6127     04FE                     i1l2920:
  6128                           
  6129                           ;main.c: 74: if (TMR0IE && TMR0IF) {
  6130     04FE  1E8B               	btfss	11,5	;volatile
  6131     04FF  2D01               	goto	u160_21
  6132     0500  2D02               	goto	u160_20
  6133     0501                     u160_21:
  6134     0501  2D14               	goto	i1l2930
  6135     0502                     u160_20:
  6136     0502                     i1l2922:
  6137     0502  1D0B               	btfss	11,2	;volatile
  6138     0503  2D05               	goto	u161_21
  6139     0504  2D06               	goto	u161_20
  6140     0505                     u161_21:
  6141     0505  2D14               	goto	i1l2930
  6142     0506                     u161_20:
  6143     0506                     i1l2924:
  6144                           
  6145                           ;main.c: 75: key_debounce(2);
  6146     0506  3002               	movlw	2
  6147     0507  00F0               	movwf	key_debounce@cycles
  6148     0508  3000               	movlw	0
  6149     0509  00F1               	movwf	key_debounce@cycles+1
  6150     050A  120A  118A  2768  120A  118A  	fcall	_key_debounce
  6151     050F                     i1l2926:
  6152                           
  6153                           ;main.c: 77: TMR0 = 0xff - 98;
  6154     050F  309D               	movlw	157
  6155     0510  1283               	bcf	3,5	;RP0=0, select bank0
  6156     0511  1303               	bcf	3,6	;RP1=0, select bank0
  6157     0512  0081               	movwf	1	;volatile
  6158     0513                     i1l2928:
  6159                           
  6160                           ;main.c: 78: T0IF = 0;
  6161     0513  110B               	bcf	11,2	;volatile
  6162     0514                     i1l2930:
  6163                           
  6164                           ;main.c: 79: };main.c: 81: if (RBIE && RBIF) {
  6165     0514  1D8B               	btfss	11,3	;volatile
  6166     0515  2D17               	goto	u162_21
  6167     0516  2D18               	goto	u162_20
  6168     0517                     u162_21:
  6169     0517  2D27               	goto	i1l646
  6170     0518                     u162_20:
  6171     0518                     i1l2932:
  6172     0518  1C0B               	btfss	11,0	;volatile
  6173     0519  2D1B               	goto	u163_21
  6174     051A  2D1C               	goto	u163_20
  6175     051B                     u163_21:
  6176     051B  2D27               	goto	i1l646
  6177     051C                     u163_20:
  6178     051C                     i1l2934:
  6179                           
  6180                           ;main.c: 82: char portB = PORTB;
  6181     051C  1283               	bcf	3,5	;RP0=0, select bank0
  6182     051D  1303               	bcf	3,6	;RP1=0, select bank0
  6183     051E  0806               	movf	6,w	;volatile
  6184     051F  00F5               	movwf	isr@portB
  6185     0520                     i1l2936:
  6186                           
  6187                           ;main.c: 83: key_read(portB);
  6188     0520  0875               	movf	isr@portB,w
  6189     0521  120A  118A  24CC  120A  118A  	fcall	_key_read
  6190     0526                     i1l2938:
  6191                           
  6192                           ;main.c: 84: RBIF = 0;
  6193     0526  100B               	bcf	11,0	;volatile
  6194     0527                     i1l646:
  6195     0527  0874               	movf	??_isr+1,w
  6196     0528  008A               	movwf	10
  6197     0529  0E73               	swapf	??_isr,w
  6198     052A  0083               	movwf	3
  6199     052B  0EFE               	swapf	btemp,f
  6200     052C  0E7E               	swapf	btemp,w
  6201     052D  0009               	retfie
  6202     052E                     __end_of_isr:
  6203                           
  6204                           	psect	intentry
  6205     0004                     __pintentry:	
  6206                           ;incstack = 0
  6207                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  6208                           
  6209     0004                     interrupt_function:
  6210     007E                     saved_w	set	btemp
  6211     0004  00FE               	movwf	btemp
  6212     0005  0E03               	swapf	3,w
  6213     0006  00F3               	movwf	??_isr
  6214     0007  080A               	movf	10,w
  6215     0008  00F4               	movwf	??_isr+1
  6216     0009  120A  118A  2CFE   	ljmp	_isr
  6217                           
  6218                           	psect	text42
  6219     04CC                     __ptext42:	
  6220 ;; *************** function _key_read *****************
  6221 ;; Defined at:
  6222 ;;		line 58 in file "key.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;  port            1    wreg     unsigned char 
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;  port            1    1[COMMON] unsigned char 
  6227 ;;  key             1    2[COMMON] unsigned char 
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  1    wreg      void 
  6230 ;; Registers used:
  6231 ;;		wreg, status,2, status,0
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6237 ;;      Params:         0       0       0       0       0
  6238 ;;      Locals:         2       0       0       0       0
  6239 ;;      Temps:          1       0       0       0       0
  6240 ;;      Totals:         3       0       0       0       0
  6241 ;;Total ram usage:        3 bytes
  6242 ;; Hardware stack levels used: 1
  6243 ;; This function calls:
  6244 ;;		Nothing
  6245 ;; This function is called by:
  6246 ;;		_isr
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250     04CC                     _key_read:	
  6251                           ;psect for function _key_read
  6252                           
  6253                           
  6254                           ;incstack = 0
  6255                           ; Regs used in _key_read: [wreg+status,2+status,0]
  6256                           ;key_read@port stored from wreg
  6257     04CC  00F1               	movwf	key_read@port
  6258     04CD                     i1l1664:
  6259                           
  6260                           ;key.c: 59: static char key_old = 1;;key.c: 62: char key = (port & 0b01000000) >> 6;
  6261     04CD  0871               	movf	key_read@port,w
  6262     04CE  00F0               	movwf	??_key_read
  6263     04CF  3006               	movlw	6
  6264     04D0                     u39_25:
  6265     04D0  1003               	clrc
  6266     04D1  0CF0               	rrf	??_key_read,f
  6267     04D2  3EFF               	addlw	-1
  6268     04D3  1D03               	skipz
  6269     04D4  2CD0               	goto	u39_25
  6270     04D5  0870               	movf	??_key_read,w
  6271     04D6  3901               	andlw	1
  6272     04D7  00F2               	movwf	key_read@key
  6273                           
  6274                           ;key.c: 63: if (key == 0 && key_old == 1) {
  6275     04D8  0872               	movf	key_read@key,w
  6276     04D9  1D03               	btfss	3,2
  6277     04DA  2CDC               	goto	u40_21
  6278     04DB  2CDD               	goto	u40_20
  6279     04DC                     u40_21:
  6280     04DC  2CED               	goto	i1l1678
  6281     04DD                     u40_20:
  6282     04DD                     i1l1666:
  6283     04DD  037B               	decf	key_read@key_old,w
  6284     04DE  1D03               	btfss	3,2
  6285     04DF  2CE1               	goto	u41_21
  6286     04E0  2CE2               	goto	u41_20
  6287     04E1                     u41_21:
  6288     04E1  2CED               	goto	i1l1678
  6289     04E2                     u41_20:
  6290     04E2                     i1l1668:
  6291                           
  6292                           ;key.c: 64: if (!keyStateChanged) {
  6293     04E2  0877               	movf	_keyStateChanged,w	;volatile
  6294     04E3  1D03               	btfss	3,2
  6295     04E4  2CE6               	goto	u42_21
  6296     04E5  2CE7               	goto	u42_20
  6297     04E6                     u42_21:
  6298     04E6  2CED               	goto	i1l1678
  6299     04E7                     u42_20:
  6300     04E7                     i1l1670:
  6301                           
  6302                           ;key.c: 65: keyPressed = 1;
  6303     04E7  147A               	bsf	_keyPressed/(0+8),_keyPressed& (0+7)	;volatile
  6304     04E8                     i1l1672:
  6305                           
  6306                           ;key.c: 66: keyStateChanged = 1;
  6307     04E8  3001               	movlw	1
  6308     04E9  00F7               	movwf	_keyStateChanged	;volatile
  6309     04EA                     i1l1674:
  6310                           
  6311                           ;key.c: 67: debounce = 0;
  6312     04EA  01F8               	clrf	_debounce	;volatile
  6313     04EB                     i1l1676:
  6314                           
  6315                           ;key.c: 68: key_old = key;
  6316     04EB  0872               	movf	key_read@key,w
  6317     04EC  00FB               	movwf	key_read@key_old
  6318     04ED                     i1l1678:
  6319                           
  6320                           ;key.c: 69: };key.c: 70: };key.c: 71: if (key == 1 && key_old == 0) {
  6321     04ED  0372               	decf	key_read@key,w
  6322     04EE  1D03               	btfss	3,2
  6323     04EF  2CF1               	goto	u43_21
  6324     04F0  2CF2               	goto	u43_20
  6325     04F1                     u43_21:
  6326     04F1  2CFD               	goto	i1l241
  6327     04F2                     u43_20:
  6328     04F2                     i1l1680:
  6329     04F2  087B               	movf	key_read@key_old,w
  6330     04F3  1D03               	btfss	3,2
  6331     04F4  2CF6               	goto	u44_21
  6332     04F5  2CF7               	goto	u44_20
  6333     04F6                     u44_21:
  6334     04F6  2CFD               	goto	i1l241
  6335     04F7                     u44_20:
  6336     04F7                     i1l1682:
  6337                           
  6338                           ;key.c: 72: keyPressed = 0;
  6339     04F7  107A               	bcf	_keyPressed/(0+8),_keyPressed& (0+7)	;volatile
  6340     04F8                     i1l1684:
  6341                           
  6342                           ;key.c: 73: keyStateChanged = 1;
  6343     04F8  3001               	movlw	1
  6344     04F9  00F7               	movwf	_keyStateChanged	;volatile
  6345     04FA                     i1l1686:
  6346                           
  6347                           ;key.c: 74: debounce = 0;
  6348     04FA  01F8               	clrf	_debounce	;volatile
  6349     04FB                     i1l1688:
  6350                           
  6351                           ;key.c: 75: key_old = key;
  6352     04FB  0872               	movf	key_read@key,w
  6353     04FC  00FB               	movwf	key_read@key_old
  6354     04FD                     i1l241:
  6355     04FD  0008               	return
  6356     04FE                     __end_of_key_read:
  6357                           
  6358                           	psect	text43
  6359     0768                     __ptext43:	
  6360 ;; *************** function _key_debounce *****************
  6361 ;; Defined at:
  6362 ;;		line 45 in file "key.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;  cycles          2    0[COMMON] int 
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;		None
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  1    wreg      void 
  6369 ;; Registers used:
  6370 ;;		wreg, status,2, status,0
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6376 ;;      Params:         2       0       0       0       0
  6377 ;;      Locals:         0       0       0       0       0
  6378 ;;      Temps:          1       0       0       0       0
  6379 ;;      Totals:         3       0       0       0       0
  6380 ;;Total ram usage:        3 bytes
  6381 ;; Hardware stack levels used: 1
  6382 ;; This function calls:
  6383 ;;		Nothing
  6384 ;; This function is called by:
  6385 ;;		_isr
  6386 ;; This function uses a non-reentrant model
  6387 ;;
  6388                           
  6389     0768                     _key_debounce:	
  6390                           ;psect for function _key_debounce
  6391                           
  6392     0768                     i1l2576:	
  6393                           ;incstack = 0
  6394                           ; Regs used in _key_debounce: [wreg+status,2+status,0]
  6395                           
  6396                           
  6397                           ;key.c: 46: if (++debounce >= cycles) {
  6398     0768  3001               	movlw	1
  6399     0769  00F2               	movwf	??_key_debounce
  6400     076A  0872               	movf	??_key_debounce,w
  6401     076B  07F8               	addwf	_debounce,f	;volatile
  6402     076C  0871               	movf	key_debounce@cycles+1,w
  6403     076D  3A80               	xorlw	128
  6404     076E  3C80               	sublw	128
  6405     076F  1D03               	skipz
  6406     0770  2F73               	goto	u137_25
  6407     0771  0870               	movf	key_debounce@cycles,w
  6408     0772  0278               	subwf	_debounce,w	;volatile
  6409     0773                     u137_25:
  6410     0773  1C03               	skipc
  6411     0774  2F76               	goto	u137_21
  6412     0775  2F77               	goto	u137_20
  6413     0776                     u137_21:
  6414     0776  2F79               	goto	i1l233
  6415     0777                     u137_20:
  6416     0777                     i1l2578:
  6417                           
  6418                           ;key.c: 47: debounce = 0;
  6419     0777  01F8               	clrf	_debounce	;volatile
  6420                           
  6421                           ;key.c: 48: keyStateChanged = 0;
  6422     0778  01F7               	clrf	_keyStateChanged	;volatile
  6423     0779                     i1l233:
  6424     0779  0008               	return
  6425     077A                     __end_of_key_debounce:
  6426     007E                     btemp	set	126	;btemp
  6427     007E                     wtemp0	set	126
  6428                           
  6429                           	psect	idloc
  6430                           
  6431                           ;Config register IDLOC0 @ 0x2000
  6432                           ;	unspecified, using default values
  6433     2000                     	org	8192
  6434     2000  3FFF               	dw	16383
  6435                           
  6436                           ;Config register IDLOC1 @ 0x2001
  6437                           ;	unspecified, using default values
  6438     2001                     	org	8193
  6439     2001  3FFF               	dw	16383
  6440                           
  6441                           ;Config register IDLOC2 @ 0x2002
  6442                           ;	unspecified, using default values
  6443     2002                     	org	8194
  6444     2002  3FFF               	dw	16383
  6445                           
  6446                           ;Config register IDLOC3 @ 0x2003
  6447                           ;	unspecified, using default values
  6448     2003                     	org	8195
  6449     2003  3FFF               	dw	16383
  6450                           
  6451                           	psect	config
  6452                           
  6453                           ;Config register CONFIG1 @ 0x2007
  6454                           ;	Oscillator Selection bits
  6455                           ;	FOSC = EC, EC: I/O function on RA6/OSC2/CLKOUT pin, CLKIN on RA7/OSC1/CLKIN
  6456                           ;	Watchdog Timer Enable bit
  6457                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6458                           ;	Power-up Timer Enable bit
  6459                           ;	PWRTE = ON, PWRT enabled
  6460                           ;	RE3/MCLR pin function select bit
  6461                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  6462                           ;	Code Protection bit
  6463                           ;	CP = 0x1, unprogrammed default
  6464                           ;	Data Code Protection bit
  6465                           ;	CPD = OFF, Data memory code protection is disabled
  6466                           ;	Brown Out Reset Selection bits
  6467                           ;	BOREN = ON, BOR enabled
  6468                           ;	Internal External Switchover bit
  6469                           ;	IESO = ON, Internal/External Switchover mode is enabled
  6470                           ;	Fail-Safe Clock Monitor Enabled bit
  6471                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6472                           ;	Low Voltage Programming Enable bit
  6473                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6474                           ;	In-Circuit Debugger Mode bit
  6475                           ;	DEBUG = 0x1, unprogrammed default
  6476     2007                     	org	8199
  6477     2007  2FE3               	dw	12259
  6478                           
  6479                           ;Config register CONFIG2 @ 0x2008
  6480                           ;	Brown-out Reset Selection bit
  6481                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6482                           ;	Flash Program Memory Self Write Enable bits
  6483                           ;	WRT = OFF, Write protection off
  6484     2008                     	org	8200
  6485     2008  3FFF               	dw	16383

Data Sizes:
    Strings     24
    Constant    54
    Data        1
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     43      59
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_3(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> sVar(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 9
		 -> sVar(BANK0[9]), STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_key_debounce
    _isr->_key_read

Critical Paths under _main in BANK0

    _main->_follow_line
    _welcome_message->_lcd_puts
    _sensor_power->_delay_ms
    _sensor_init->_adc_init
    _lcd_show_cursor->_spi_send_command
    _lcd_clear->_spi_send_command
    _follow_line->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _sensorLine_read->_delay_big_us
    _led_rgb_set_color->_spi_exchange
    _lcd_puts->_lcd_putchar
    _lcd_putchar->_spi_send_command
    _lcd_goto->_spi_send_command
    _spi_send_data->_spi_exchange
    _spi_send_command->_spi_exchange
    _duty_cycle_control->_sensorNear_read
    _sensorNear_read->_adc_read
    _delay_s->_delay_ms
    _compass_init->_compass_set_datarate
    _compass_init->_compass_set_operativemode
    _compass_init->_compass_set_scale
    _compass_set_scale->_spi_write
    _compass_set_operativemode->_spi_write
    _compass_set_datarate->_spi_write
    _spi_write->_spi_exchange

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    7509
                                             42 BANK0      1     1      0
                       _battery_init
                       _compass_init
                            _delay_s
                        _follow_line
                           _key_init
                        _key_pressed
                          _lcd_clear
                           _lcd_init
                    _lcd_show_cursor
                       _led_rgb_init
                  _led_rgb_set_color
                           _pwm_init
                            _pwm_set
                        _sensor_init
                       _sensor_power
                        _serial_init
                           _spi_init
                            _t0_init
                    _welcome_message
 ---------------------------------------------------------------------------------
 (1) _welcome_message                                      0     0      0     784
                           _delay_ms
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _t0_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sensor_power                                         1     1      0      96
                                              2 BANK0      1     1      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _sensor_init                                          1     1      0      62
                                              2 BANK0      1     1      0
                           _adc_init
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_rgb_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_show_cursor                                      2     0      2     220
                                              4 BANK0      2     0      2
                   _spi_send_command
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0      99
                   _spi_send_command
 ---------------------------------------------------------------------------------
 (1) _key_pressed                                          1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _key_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _follow_line                                         11    11      0    4627
                                             31 BANK0     11    11      0
                 _duty_cycle_control
                           _lcd_goto
                           _lcd_puts
                  _led_rgb_set_color
                      _pwm_direction
                            _pwm_set
                    _sensorLine_read
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    18      7    1655
                                             14 BANK0     17    10      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _sensorLine_read                                      7     5      2     223
                                              3 BANK0      7     5      2
                       _delay_big_us
 ---------------------------------------------------------------------------------
 (3) _delay_big_us                                         3     1      2     189
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _pwm_set                                              6     2      4     844
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _pwm_direction                                        2     0      2     391
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _led_rgb_set_color                                    2     2      0      96
                                              1 BANK0      2     2      0
                       _spi_exchange
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             2     0      2     527
                                              5 BANK0      2     0      2
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (3) _lcd_putchar                                          1     1      0     192
                                              4 BANK0      1     1      0
                   _spi_send_command
                      _spi_send_data
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             1     1      0     192
                                              4 BANK0      1     1      0
                   _spi_send_command
                      _spi_send_data
 ---------------------------------------------------------------------------------
 (4) _spi_send_data                                        1     1      0      62
                                              1 BANK0      1     1      0
                       _spi_exchange
 ---------------------------------------------------------------------------------
 (4) _spi_send_command                                     3     3      0      99
                                              1 BANK0      3     3      0
                       _spi_exchange
 ---------------------------------------------------------------------------------
 (2) _duty_cycle_control                                  10     8      2     362
                                              8 BANK0      8     6      2
                    _sensorNear_read
 ---------------------------------------------------------------------------------
 (3) _sensorNear_read                                      2     0      2     195
                                              6 BANK0      2     0      2
                           _adc_read
 ---------------------------------------------------------------------------------
 (4) _adc_read                                             6     4      2     195
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              2     2      0     130
                                              2 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     2      0      65
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _compass_init                                         1     1      0     477
               _compass_set_datarate
          _compass_set_operativemode
                  _compass_set_scale
                          _spi_write
 ---------------------------------------------------------------------------------
 (2) _compass_set_scale                                    2     2      0     127
                                              2 BANK0      1     1      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (2) _compass_set_operativemode                            2     2      0     127
                                              2 BANK0      1     1      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (2) _compass_set_datarate                                 2     2      0     127
                                              2 BANK0      1     1      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (2) _spi_write                                            1     1      0      62
                                              1 BANK0      1     1      0
                       _spi_exchange
 ---------------------------------------------------------------------------------
 (5) _spi_exchange                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _battery_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  3     3      0     196
                                              3 COMMON     3     3      0
                       _key_debounce
                           _key_read
 ---------------------------------------------------------------------------------
 (7) _key_read                                             3     3      0      75
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (7) _key_debounce                                         3     1      2      98
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _battery_init
   _compass_init
     _compass_set_datarate
       _spi_write
         _spi_exchange
     _compass_set_operativemode
       _spi_write
     _compass_set_scale
       _spi_write
     _spi_write
   _delay_s
     _delay_ms
   _follow_line
     _duty_cycle_control
       _sensorNear_read
         _adc_read
     _lcd_goto
       _spi_send_command
         _spi_exchange
       _spi_send_data
         _spi_exchange
     _lcd_puts
       _lcd_putchar
         _spi_send_command
         _spi_send_data
     _led_rgb_set_color
       _spi_exchange
     _pwm_direction
     _pwm_set
     _sensorLine_read
       _delay_big_us
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _key_init
   _key_pressed
   _lcd_clear
     _spi_send_command
   _lcd_init
   _lcd_show_cursor
     _spi_send_command
   _led_rgb_init
   _led_rgb_set_color
   _pwm_init
   _pwm_set
   _sensor_init
     _adc_init
   _sensor_power
     _delay_ms
   _serial_init
   _spi_init
   _t0_init
   _welcome_message
     _delay_ms
     _lcd_goto
     _lcd_puts

 _isr (ROOT)
   _key_debounce
   _key_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2B      3B       5       73.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      47      12        0.0%
ABS                  0      0      47       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Jun 27 22:38:49 2023

                                pc 0002                     ?_spi_send_data 0070  
                     ?_lcd_putchar 0070                        _SSPSTATbits 0094  
                               l70 031A                                 l62 02E9  
                               l71 0321                                 l72 0328  
                               l64 02F0                                 l73 032F  
                               l65 02F7                                 l66 02FE  
                               l83 04CB                                 l75 0371  
                               l67 0305                                 l84 04BA  
                               l68 030C                                 l93 07F1  
                               l69 0313                                 _GO 00F9  
                               fsr 0004                                l120 06BB  
                              l210 066D                                l141 0755  
                              l206 0656                                l135 0743  
                              l303 07F0                                l401 0453  
                              l306 0797                                l147 0731  
                              l404 07A4                                l229 07E0  
                              l245 07BC                                l262 07C6  
                              l182 0637                                l256 07E7  
                              l185 0671                                l361 0600  
                              l265 07EE                                l273 06E9  
                              l186 0673                                l282 05D6  
                              l362 0603                                l346 05F3  
                              l259 0789                                l363 0606  
                              l355 05AE                                l443 06D3  
                              l268 071F                                l276 070D  
                              l364 061B                                l348 05F7  
                              l189 0688                                l349 05FB  
                              l542 0652                                l359 05FD  
                              l545 075D                                l393 06FA  
                              l650 055C                                l802 0233  
                              l547 0763                                l395 06FB  
                              l548 0767                                l636 07B0  
                              l557 07D0                                l398 06A2  
                              l639 0585                                l680 015F  
                              l666 0141                                l687 02AE  
                              _CKE 04A6                                _CKP 00A4  
                              _GIE 005F                                _RA1 0029  
                              _RB0 0030                                _RC0 0038  
                              _RA5 002D                                _RA6 002E  
                              _PR2 0092                                _RX9 00C6  
                              _SMP 04A7                                _TX9 04C6  
                              _isr 04FE                                fsr0 0004  
                              indf 0000                        lcd_goto@pos 0024  
                    ?_compass_init 0070                      ?_led_rgb_init 0070  
                             l3012 0759                               l3020 0493  
                             l3100 0454                               l3014 075B  
                             l3030 04A8                               l3022 0499  
                             l1078 0415                               l3110 046E  
                             l3102 045C                               l3016 0766  
                             l3040 04B9                               l3032 04B1  
                             l3024 049F                               l3200 042A  
                             l1088 048F                               l3112 0478  
                             l3104 045F                               l3042 04BE  
                             l3034 04B2                               l3026 04A5  
                             l3210 052E                               l3050 077F  
                             l3202 0432                               l3114 047E  
                             l3106 0466                               l3130 0368  
                             l3122 02E8                               l3140 074D  
                             l3044 04C6                               l3036 04B3  
                             l3220 0556                               l3212 0539  
                             l3052 0783                               l3060 0621  
                             l3204 043D                               l3116 0485  
                             l3108 046A                               l3132 036B  
                             l3038 04B6                               l3070 0798  
                             l3214 0539                               l3054 07C0  
                             l3062 0623                               l3206 044F  
                             l3118 048B                               l3230 0171  
                             l3134 036E                               l3126 0336  
                             l3056 07CA                               l3136 0747  
                             l3144 0735                               l3152 0723  
                             l3160 0671                               l3216 053B  
                             l3048 077D                               l3064 062A  
                             l3080 03DD                               l3240 0194  
                             l3232 0176                               l3224 0163  
                             l3128 0359                               l3400 06C2  
                             l3138 0747                               l3146 0735  
                             l3154 0723                               l3162 067A  
                             l3322 0656                               l3218 0548  
                             l3170 05B0                               l3066 0631  
                             l3058 061C                               l3090 0403  
                             l3082 03E4                               l3074 03D0  
                             l3242 0198                               l3226 0166  
                             l3330 07D9                               l3410 06CB  
                             l3402 06C5                               l3148 073B  
                             l3156 0729                               l3164 0682  
                             l3324 0658                               l3068 06FF  
                             l3172 05BE                               l3180 0586  
                             l3092 0404                               l3084 03E8  
                             l3076 03D4                               l3260 01CD  
                             l3244 019C                               l3236 0177  
                             l3228 016C                               l3500 0134  
                             l3332 07B1                               l3412 06CC  
                             l3404 06C6                               l3420 064B  
                             l3326 065F                               l3166 0711  
                             l3174 05C6                               l3190 0609  
                             l3182 058E                               l3094 040B  
                             l3086 03EC                               l3078 03DA  
                             l3270 020D                               l3262 01D3  
                             l3254 01A7                               l3246 01A0  
                             l3238 018C                               l3502 013A  
                             l3334 07B4                               l3342 07E1  
                             l3350 06E3                               l3414 06CF  
                             l3406 06C7                               l3422 0651  
                             l3430 07AF                               l3328 0667  
                             l3168 05AF                               l3176 078D  
                             l3184 059B                               l3088 03FD  
                             l3096 0411                               l3272 0212  
                             l3264 01D8                               l3248 01A5  
                             l3504 0141                               l3336 07B8  
                             l3344 07E8                               l3360 05E5  
                             l3352 05D7                               l3416 06D2  
                             l3408 06CA                               l3424 07A5  
                             l3440 057A                               l3432 055D  
                             l3290 06B5                               l3282 06A3  
                             l3178 0791                               l3186 05A2  
                             l3274 0216                               l3266 01DC  
                             l3258 01C3                               l3506 0150  
                             l3450 0063                               l3442 0027  
                             l3338 07BB                               l3346 06D4  
                             l3370 05EE                               l3362 05E6  
                             l3354 05DB                               l3418 0638  
                             l3426 07A9                               l3434 0563  
                             l3284 06A3                               l3188 05FC  
                             l3196 0416                               l3268 01DF  
                             l3276 021F                               l3460 0094  
                             l3452 006E                               l3444 0030  
                             l3348 06DC                               l3372 05EF  
                             l3364 05E8                               l3356 05DD  
                             l3380 06F2                               l3428 07AB  
                             l3436 056E                               l3700 0272  
                             l3286 06A9                               l3198 0424  
                             l3278 022F                               l3470 00B5  
                             l3462 009A                               l3454 0076  
                             l3446 003B                               l3374 05F0  
                             l3366 05EC                               l3358 05E1  
                             l3390 0699                               l3382 06F3  
                             l3438 0574                               l3710 0291  
                             l3702 0278                               l3288 06AF  
                             l3480 00DE                               l3472 00C4  
                             l3456 007E                               l3464 00A1  
                             l3448 005D                               l3376 05F2  
                             l3368 05ED                               l3392 069C  
                             l3384 0689                               l3720 02B2  
                             l3712 0299                               l3704 027D  
                             l3490 0109                               l3482 00E4  
                             l3474 00CB                               l3466 00A7  
                             l3458 008D                               l3386 0692  
                             l3378 06ED                               l3394 06BC  
                             l3722 02BF                               l3714 029E  
                             l3706 0287                               l3484 00ED  
                             l3492 0110                               l3476 00D1  
                             l3468 00AC                               l3388 0698  
                             l3396 06C0                               l3716 02A4  
                             l3708 028C                               l3494 0115  
                             l3486 00FC                               l3478 00D8  
                             l3398 06C1                               l3718 02A8  
                             l3744 0610                               l3496 011E  
                             l3488 0103                               l3680 0243  
                             l3672 0234                               l3498 012D  
                             l3690 025C                               l3682 0248  
                             l3674 0234                               l3692 0261  
                             l3684 024D                               l3676 0239  
                             l3694 0266                               l3686 0252  
                             l3678 023E                               l3696 026B  
                             l3688 0257                               l3698 026C  
                             _ADIE 0466                               _ADIF 0066  
                             ?_isr 0070                               _ADON 00F8  
                             _ANS0 0C40                               STR_1 03C4  
                             _ANS1 0C41                               STR_2 03CA  
                             _ANS2 0C42                               STR_3 03B8  
                             _ANS3 0C43                               _ANS4 0C44  
                             _ANS8 0C48                               _ANS9 0C49  
                             _BRGH 04C2                               _T0IE 005D  
                             _CREN 00C4                               _T0IF 005A  
                             _FERR 00C2                               u2000 022F  
                             u2001 022E                               u2100 008D  
                             u2101 008C                               u2030 0667  
                             u2110 00A7                               u2031 0666  
                             u2111 00A6                               u2040 066D  
                             u2120 00AC                               u2041 066C  
                             u2121 00AB                               u2105 0089  
                             u2130 00C4                               u2050 07B8  
                             u2131 00C3                               u2051 07B7  
                             u2140 00DE                               u2060 06DC  
                             u2300 02BF                               u2141 00DD  
                             u2061 06DB                               u2301 02BE  
                             u2150 00E4                               u2070 05F7  
                             u2151 00E3                               u2135 00C0  
                             u2071 05F6                               u2160 00FC  
                             u2080 06F2                               u2161 00FB  
                             u2081 06F1                               u2305 02BB  
                             u2170 0115                               u2090 0076  
                             u2171 0114                               u2091 0075  
                             u1700 049F                               u2180 012D  
                             u1701 049E                               u2181 012C  
                             u2165 00F8                               u1710 04A5  
                             u2270 029E                               u1711 04A4  
                             u2271 029D                               u1720 04BE  
                             u1800 0411                               u2280 02A8  
                             u1721 04BD                               u1801 0410  
                             u2185 0129                               u2281 02A7  
                             u1730 0631                               u1810 045C  
                             u2290 02B2                               u1731 0630  
                             u1811 045B                               u2291 02B1  
                             u1900 058E                               u1740 03DA  
                             u1901 058D                               u1741 03D9  
                             u1910 05A2                               u1830 046E  
                             u1911 05A1                               u1831 046D  
                             u1680 0763                               u1760 03EC  
                             u1840 0478                               u1681 0762  
                             u1761 03EB                               u1841 0477  
                             u1825 0460                               u1690 0499  
                             u1930 0548                               u1691 0498  
                             u1931 0547                               u1755 03DE  
                             u1780 03FD                               u1860 048B  
                             u1940 016C                               u1925 0442  
                             u1781 03FC                               u1861 048A  
                             u1845 0474                               u1941 016B  
                             u1870 0682                               u1950 019C  
                             u1871 0681                               u1935 0544  
                             u1775 03ED                               u1855 047F  
                             u1951 019B                               u1880 0688  
                             u1960 01C2                               u1881 0687  
                             u1785 03F9                               u1961 01C1  
                             u1890 05D6                               u1970 01CD  
                             u1891 05D5                               u1795 0405  
                             u1971 01CC                               u1980 01D3  
                             u1981 01D2                               u1965 01BE  
                             u1990 021F                               u1991 021E  
                             _RBIE 005B                               _RBIF 0058  
                             _RCIE 0465                               _RCIF 0065  
                             _OERR 00C1                               _TMR0 0001  
                             _WCOL 00A7                               _SPEN 00C7  
                             _SREN 00C5                               _TXIE 0464  
                             _TXEN 04C5                               _TXIF 0064  
                             _SYNC 04C4                  _compass_set_scale 0720  
                             _sVar 0052                               _main 0234  
                             btemp 007E                 ?_compass_set_scale 0070  
                sensor_power@state 0022  __end_of_compass_set_operativemode 0744  
                             start 000C                     ?_pwm_direction 0020  
                     ?_follow_line 0070                ??_compass_set_scale 0022  
                            ??_isr 0073               __end_of_delay_big_us 0638  
     spi_send_command@command_byte 0023               __end_of_battery_init 07F2  
                ?_spi_send_command 0070                    __end_of_t0_init 07B1  
                            _DC2B0 00EC                              _DC2B1 00ED  
                            ?_main 0070                              _ANS10 0C4A  
                            _ANS11 0C4B                              _ANS12 0C4C  
                            _ANS13 0C4D                              _ANSEL 0188  
                            _IOCB6 04B6                 ??_spi_send_command 0021  
                  __end_of___lwdiv 0416                              i1l233 0779  
                            i1l241 04FD                    __end_of___lwmod 0490  
                            i1l646 0527                              _RCREG 001A  
                            u40_20 04DD                              u40_21 04DC  
                            u41_20 04E2                              u41_21 04E1  
                            u42_20 04E7                              u42_21 04E6  
                            _SPBRG 0099                              u43_20 04F2  
                            u43_21 04F1                              _PORTA 0005  
                            _PORTB 0006                              u44_20 04F7  
                            u44_21 04F6                              u39_25 04D0  
                            _TRISA 0085                              _SSPEN 00A5  
                            _WPUB6 04AE                              _TXREG 0019  
                   ??_compass_init 0023                       ?_key_pressed 0070  
                  __end_of_delay_s 066E                     ??_led_rgb_init 0020  
                _led_rgb_set_color 078A                              _nRBPU 040F  
                            _Xcorr 004D                              _Ycorr 004F  
                  __end_of_dpowers 038C                              _dummy 0076  
               ?_led_rgb_set_color 0070          __end_of_compass_set_scale 0732  
                     lcd_putchar@c 0024               duty_cycle_control@dc 002C  
                   __pbitbssCOMMON 03D0                              pclath 000A  
                  __end_of_pwm_set 05AF                   ?_lcd_show_cursor 0024  
                            status 0003                              wtemp0 007E  
                  __end_of_sprintf 0234                ??_led_rgb_set_color 0021  
                  delay_big_us@cnt 0020                    __initialization 000F  
                  ??_spi_send_data 0021               follow_line@led_color 0048  
                     __end_of_main 02E5                      ?_key_debounce 0070  
                           ??_main 004A          __end_of_led_rgb_set_color 0798  
                           _ADRESH 001E                             _ADRESL 009E  
                           _CCPR1L 0015                             _CCPR2L 001B  
                 __end_of_adc_init 0372                   __end_of_adc_read 04CC  
                 pwm_direction@dir 0020                             i1l1670 04E7  
                           i1l1680 04F2                             i1l1672 04E8  
                           i1l1664 04CD                             i1l1682 04F7  
                           i1l1674 04EA                             i1l1666 04DD  
                           i1l1684 04F8                             i1l1676 04EB  
                           i1l1668 04E2                             i1l1686 04FA  
                           i1l1678 04ED                             i1l2576 0768  
                           i1l1688 04FB                             i1l2920 04FE  
                           i1l2578 0777                             i1l2922 0502  
                           i1l2930 0514                             i1l2932 0518  
                           i1l2924 0506                             i1l2934 051C  
                           i1l2926 050F                             i1l2936 0520  
                           i1l2928 0513                             i1l2938 0526  
                           u160_20 0502                             u160_21 0501  
                           u137_20 0777                             u161_20 0506  
                           u137_21 0776                             u161_21 0505  
                           u137_25 0773                             u162_20 0518  
                           u162_21 0517                             u163_20 051C  
                           u163_21 051B           compass_set_datarate@mode 0022  
                           _TMR0IE 005D                             _TMR0IF 005A  
                           _TMR2IF 0061                             _TMR2ON 0092  
                           _TRISA0 0428                             _TRISA1 0429  
                           _TRISA2 042A                             _TRISB0 0430  
                           _TRISA3 042B                             _TRISB1 0431  
                           _TRISB2 0432                             _TRISC0 0438  
                           _TRISA5 042D                             _TRISC1 0439  
                           _TRISB4 0434                             _TRISC2 043A  
                           _TRISB5 0435                             _TRISC3 043B  
                           _TRISB6 0436                             _TRISC4 043C  
                           _TRISC5 043D                             _SSPBUF 0013  
                  ??_pwm_direction 0022                   __end_of_delay_ms 0689  
                     ?_serial_init 0070                   __end_of_lcd_init 07E8  
                 __end_of_lcd_goto 0720                          ??_t0_init 0020  
                 __end_of_lcd_puts 05D7       __end_of_compass_set_datarate 0756  
                      key_read@key 0072                          ??___lwdiv 0024  
                        ??___lwmod 002C                   __end_of_key_init 07E1  
                 __end_of_key_read 04FE                     ??_key_debounce 0072  
                        ??_delay_s 0022                       ?_sensor_init 0070  
                     __pdataCOMMON 007B                    _sensorNear_read 0798  
                           saved_w 007E                   __end_of_spi_init 0653  
                 __end_of_pwm_init 05FC                    _sensorLine_read 0416  
                        ??_pwm_set 0024                          ??_sprintf 0035  
          __end_of__initialization 0023                      spi_write@data 0021  
                lcd_show_cursor@on 0024               __end_of_compass_init 06BC  
             __end_of_led_rgb_init 07F1                     __pcstackCOMMON 0070  
                 key_pressed@state 0020                     _OPTION_REGbits 0081  
          spi_send_command@command 0022                    key_read@key_old 007B  
                       __pbssBANK0 004B                       _delay_big_us 061C  
                     _battery_init 07F1              follow_line@duty_cycle 0046  
                       __pmaintext 0234                         __pintentry 0004  
    led_rgb_set_color@command_byte 0022            __end_of_sensorNear_read 07A5  
                        ?_adc_init 0070                          ?_adc_read 0020  
          __end_of_sensorLine_read 0454                          ?_delay_ms 0070  
                        ?_lcd_init 0070                          ?_lcd_goto 0070  
                        ?_lcd_puts 0025               _compass_set_datarate 0744  
                       __stringtab 0372               __end_of_key_debounce 077A  
                        ?_key_init 0070                          ?_key_read 0070  
                       _keyPressed 03D0         ?_compass_set_operativemode 0070  
                __end_of_lcd_clear 07EF                            _t0_init 07A5  
                        ?_spi_init 0070                         _lineSensor 0051  
                        ?_pwm_init 0070                            ___lwdiv 03D0  
                          ___lwmod 0454                       key_read@port 0071  
                          _delay_s 0653                         ??_adc_init 0020  
                       ??_adc_read 0022                            __ptext1 055D  
                          __ptext2 07A5                            __ptext3 0638  
                          __ptext4 06BC                            __ptext5 06EA  
                          __ptext6 0689                            __ptext7 02E5  
                          __ptext8 05D7                            __ptext9 07F0  
                          _dpowers 0382                          _T2CONbits 0012  
                          _n_press 004B                         ??_delay_ms 0020  
                          _pwm_set 0586                            _sprintf 0160  
                          clrloop0 07D2                         delay_s@cnt 0022  
            ?_compass_set_datarate 0070                         ??_lcd_init 0020  
                       ??_lcd_goto 0024                         ??_lcd_puts 0027  
             end_of_initialization 0023                  ??_welcome_message 0027  
                    ?_sensor_power 0070                         ??_key_init 0020  
                       ??_key_read 0070                  __end_of_spi_write 07D1  
                       ??_spi_init 0020                         ??_pwm_init 0020  
            __end_of_spi_send_data 07C7             compass_set_scale@scale 0022  
                 ?_sensorNear_read 0026                   ?_sensorLine_read 0023  
                    ?_spi_exchange 0070                       _compass_init 06A3  
                     _led_rgb_init 07F0                     ??_sensor_power 0022  
                      _CCP1CONbits 0017                        _CCP2CONbits 001D  
       __end_of_duty_cycle_control 055D              __end_of_pwm_direction 061C  
                    delay_big_us@i 0022                      ??_lcd_putchar 0024  
                    __pidataCOMMON 07EF                     ??_spi_exchange 0020  
                 _delayus_variable 0079                start_initialization 000F  
           ??_compass_set_datarate 0022                        __end_of_isr 052E  
                 _spi_send_command 077A                  spi_send_data@data 0021  
                    ??_follow_line 003F                  pwm_set@duty_cycle 0022  
                     _key_debounce 0768                  ??_lcd_show_cursor 0026  
              __end_of_lcd_putchar 070E                      ??_key_pressed 0020  
                      __pbssCOMMON 0076                          ___latbits 0002  
                    __pcstackBANK0 0020                        sprintf@flag 0039  
                      sprintf@prec 003A                   ___lwdiv@dividend 0022  
      ??_compass_set_operativemode 0022                           ?_t0_init 0070  
                         ?___lwdiv 0020                           ?___lwmod 0028  
                        _lcd_clear 07E8               __end_of_sensor_power 06FC  
                         ?_delay_s 0070                __end_of_follow_line 0160  
                        __pstrings 0372                     pwm_set@channel 0020  
                  _welcome_message 055D                adc_init@adc_channel 0021  
                 ___lwdiv@quotient 0026                           ?_pwm_set 0020  
                         ?_sprintf 002E                __end_of_key_pressed 07BD  
                interrupt_function 0004                          delay_ms@i 0021  
                        clear_ram0 07D1               __end_of_spi_exchange 0768  
                    ??_serial_init 0020                        _lcd_putchar 06FC  
                       ?_lcd_clear 0070                          _spi_write 07C7  
                       _ADCON0bits 001F                        __stringbase 0381  
                       _ADCON1bits 009F                      ??_sensor_init 0022  
                        main@keyIn 004A                          lcd_puts@s 0025  
        _compass_set_operativemode 0732                __end_ofatan@coeff_a 03A4  
              __end_ofatan@coeff_b 03B8         led_rgb_set_color@led_color 0021  
                  _keyStateChanged 0077                        _follow_line 0027  
          __end_of_welcome_message 0586           __end_of_spi_send_command 078A  
                       ?_spi_write 0070                __end_of_serial_init 06D4  
               _duty_cycle_control 052E                 __end_of__stringtab 0382  
                         _adc_init 02E5                           _adc_read 0490  
                       sprintf@val 003B                        _key_pressed 07B1  
                         _debounce 0078                           _delay_ms 066E  
                  ___lwdiv@divisor 0020                ?_duty_cycle_control 0028  
                  ___lwdiv@counter 0025                           __ptext10 06D4  
                         __ptext11 07E1                           __ptext20 061C  
                         __ptext12 07E8                           __ptext21 0586  
                         __ptext13 07B1                           __ptext30 0798  
                         __ptext22 05FC                           __ptext14 07D9  
                         __ptext31 0490                           __ptext23 078A  
                         __ptext15 0027                           __ptext40 07F1  
                         __ptext32 0653                           __ptext24 05AF  
                         __ptext16 0160                           __ptext41 04FE  
                         __ptext33 066E                           __ptext25 06FC  
                         __ptext17 0454                           __ptext42 04CC  
                         __ptext34 06A3                           __ptext26 070E  
                         __ptext18 03D0                           __ptext43 0768  
                         __ptext35 0720                           __ptext27 07BD  
                         __ptext19 0416                           __ptext36 0732  
                         __ptext28 077A                           __ptext37 0744  
                         __ptext29 052E                           __ptext38 07C7  
                         __ptext39 0756                __end_of_sensor_init 06A3  
                         _lcd_init 07E1                           _lcd_goto 070E  
                         _lcd_puts 05AF                      ?_delay_big_us 0020  
                    ?_battery_init 0070                           _key_init 07D9  
                         _key_read 04CC                           delay_s@i 0023  
                 spi_exchange@data 0020               ??_duty_cycle_control 002A  
                  _lcd_show_cursor 06D4                           _spi_init 0638  
                         _pwm_init 05D7                        ??_lcd_clear 0024  
                      atan@coeff_a 038C                        atan@coeff_b 03A4  
                      delay_ms@cnt 0020                           isr@portB 0075  
 duty_cycle_control@nearSensorData 002E                     ??_delay_big_us 0022  
                   ??_battery_init 0020                           intlevel1 0000  
                        sprintf@ap 0038                          sprintf@sp 003D  
                     _sensor_power 06EA                   ___lwmod@dividend 002A  
    compass_set_operativemode@mode 0022                          stringcode 037C  
                      _serial_init 06BC        sensorLine_read@line_reading 0028  
                 ?_welcome_message 0070                 key_debounce@cycles 0070  
                    _spi_send_data 07BD                        ??_spi_write 0021  
                         sprintf@c 003E                           sprintf@f 002E  
                      _sensor_init 0689                       _spi_exchange 0756  
                  ___lwmod@divisor 0028                    ___lwmod@counter 002D  
                         stringdir 037C                           stringtab 0372  
              adc_read@adc_channel 0025            __end_of_lcd_show_cursor 06EA  
                ??_sensorNear_read 0028                         _SSPCONbits 0014  
                ??_sensorLine_read 0025                 adc_read@adc_result 0023  
                    _pwm_direction 05FC  
