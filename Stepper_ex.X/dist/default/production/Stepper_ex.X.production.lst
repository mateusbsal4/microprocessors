

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jul  3 18:04:53 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2,noexec
     5                           	psect	text0,local,class=CODE,merge=1,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F886 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     008F                     	;# 
    97     0090                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0095                     	;# 
   105     0096                     	;# 
   106     0097                     	;# 
   107     0098                     	;# 
   108     0099                     	;# 
   109     009A                     	;# 
   110     009B                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     0105                     	;# 
   116     0107                     	;# 
   117     0108                     	;# 
   118     0109                     	;# 
   119     010C                     	;# 
   120     010C                     	;# 
   121     010D                     	;# 
   122     010E                     	;# 
   123     010F                     	;# 
   124     0185                     	;# 
   125     0187                     	;# 
   126     0188                     	;# 
   127     0189                     	;# 
   128     018C                     	;# 
   129     018D                     	;# 
   130                           
   131                           	psect	eeprom_data
   132     0000  0001 0003 0002 0006 0004 000C 0008 0009 	db	1,3,2,6,4,12,8,9	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0009                     	;# 
   142     000A                     	;# 
   143     000B                     	;# 
   144     000C                     	;# 
   145     000D                     	;# 
   146     000E                     	;# 
   147     000E                     	;# 
   148     000F                     	;# 
   149     0010                     	;# 
   150     0011                     	;# 
   151     0012                     	;# 
   152     0013                     	;# 
   153     0014                     	;# 
   154     0015                     	;# 
   155     0015                     	;# 
   156     0016                     	;# 
   157     0017                     	;# 
   158     0018                     	;# 
   159     0019                     	;# 
   160     001A                     	;# 
   161     001B                     	;# 
   162     001B                     	;# 
   163     001C                     	;# 
   164     001D                     	;# 
   165     001E                     	;# 
   166     001F                     	;# 
   167     0081                     	;# 
   168     0085                     	;# 
   169     0086                     	;# 
   170     0087                     	;# 
   171     0089                     	;# 
   172     008C                     	;# 
   173     008D                     	;# 
   174     008E                     	;# 
   175     008F                     	;# 
   176     0090                     	;# 
   177     0091                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0094                     	;# 
   183     0095                     	;# 
   184     0096                     	;# 
   185     0097                     	;# 
   186     0098                     	;# 
   187     0099                     	;# 
   188     009A                     	;# 
   189     009B                     	;# 
   190     009C                     	;# 
   191     009D                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     0105                     	;# 
   195     0107                     	;# 
   196     0108                     	;# 
   197     0109                     	;# 
   198     010C                     	;# 
   199     010C                     	;# 
   200     010D                     	;# 
   201     010E                     	;# 
   202     010F                     	;# 
   203     0185                     	;# 
   204     0187                     	;# 
   205     0188                     	;# 
   206     0189                     	;# 
   207     018C                     	;# 
   208     018D                     	;# 
   209     0000                     	;# 
   210     0001                     	;# 
   211     0002                     	;# 
   212     0003                     	;# 
   213     0004                     	;# 
   214     0005                     	;# 
   215     0006                     	;# 
   216     0007                     	;# 
   217     0009                     	;# 
   218     000A                     	;# 
   219     000B                     	;# 
   220     000C                     	;# 
   221     000D                     	;# 
   222     000E                     	;# 
   223     000E                     	;# 
   224     000F                     	;# 
   225     0010                     	;# 
   226     0011                     	;# 
   227     0012                     	;# 
   228     0013                     	;# 
   229     0014                     	;# 
   230     0015                     	;# 
   231     0015                     	;# 
   232     0016                     	;# 
   233     0017                     	;# 
   234     0018                     	;# 
   235     0019                     	;# 
   236     001A                     	;# 
   237     001B                     	;# 
   238     001B                     	;# 
   239     001C                     	;# 
   240     001D                     	;# 
   241     001E                     	;# 
   242     001F                     	;# 
   243     0081                     	;# 
   244     0085                     	;# 
   245     0086                     	;# 
   246     0087                     	;# 
   247     0089                     	;# 
   248     008C                     	;# 
   249     008D                     	;# 
   250     008E                     	;# 
   251     008F                     	;# 
   252     0090                     	;# 
   253     0091                     	;# 
   254     0092                     	;# 
   255     0093                     	;# 
   256     0093                     	;# 
   257     0093                     	;# 
   258     0094                     	;# 
   259     0095                     	;# 
   260     0096                     	;# 
   261     0097                     	;# 
   262     0098                     	;# 
   263     0099                     	;# 
   264     009A                     	;# 
   265     009B                     	;# 
   266     009C                     	;# 
   267     009D                     	;# 
   268     009E                     	;# 
   269     009F                     	;# 
   270     0105                     	;# 
   271     0107                     	;# 
   272     0108                     	;# 
   273     0109                     	;# 
   274     010C                     	;# 
   275     010C                     	;# 
   276     010D                     	;# 
   277     010E                     	;# 
   278     010F                     	;# 
   279     0185                     	;# 
   280     0187                     	;# 
   281     0188                     	;# 
   282     0189                     	;# 
   283     018C                     	;# 
   284     018D                     	;# 
   285     0000                     	;# 
   286     0001                     	;# 
   287     0002                     	;# 
   288     0003                     	;# 
   289     0004                     	;# 
   290     0005                     	;# 
   291     0006                     	;# 
   292     0007                     	;# 
   293     0009                     	;# 
   294     000A                     	;# 
   295     000B                     	;# 
   296     000C                     	;# 
   297     000D                     	;# 
   298     000E                     	;# 
   299     000E                     	;# 
   300     000F                     	;# 
   301     0010                     	;# 
   302     0011                     	;# 
   303     0012                     	;# 
   304     0013                     	;# 
   305     0014                     	;# 
   306     0015                     	;# 
   307     0015                     	;# 
   308     0016                     	;# 
   309     0017                     	;# 
   310     0018                     	;# 
   311     0019                     	;# 
   312     001A                     	;# 
   313     001B                     	;# 
   314     001B                     	;# 
   315     001C                     	;# 
   316     001D                     	;# 
   317     001E                     	;# 
   318     001F                     	;# 
   319     0081                     	;# 
   320     0085                     	;# 
   321     0086                     	;# 
   322     0087                     	;# 
   323     0089                     	;# 
   324     008C                     	;# 
   325     008D                     	;# 
   326     008E                     	;# 
   327     008F                     	;# 
   328     0090                     	;# 
   329     0091                     	;# 
   330     0092                     	;# 
   331     0093                     	;# 
   332     0093                     	;# 
   333     0093                     	;# 
   334     0094                     	;# 
   335     0095                     	;# 
   336     0096                     	;# 
   337     0097                     	;# 
   338     0098                     	;# 
   339     0099                     	;# 
   340     009A                     	;# 
   341     009B                     	;# 
   342     009C                     	;# 
   343     009D                     	;# 
   344     009E                     	;# 
   345     009F                     	;# 
   346     0105                     	;# 
   347     0107                     	;# 
   348     0108                     	;# 
   349     0109                     	;# 
   350     010C                     	;# 
   351     010C                     	;# 
   352     010D                     	;# 
   353     010E                     	;# 
   354     010F                     	;# 
   355     0185                     	;# 
   356     0187                     	;# 
   357     0188                     	;# 
   358     0189                     	;# 
   359     018C                     	;# 
   360     018D                     	;# 
   361                           
   362                           	psect	text0
   363     0000                     __ptext0:
   364     0006                     _portBnibbles	set	6
   365     0006                     _PORTB	set	6
   366     005F                     _GIE	set	95
   367     0086                     _TRISB	set	134
   368     010C                     _EEDATA	set	268
   369     010D                     _EEADR	set	269
   370     018C                     _EECON1	set	396
   371     018C                     _EECON1bits	set	396
   372     0189                     _ANSELH	set	393
   373                           
   374                           	psect	cinit
   375     07F7                     start_initialization:	
   376                           ; #config settings
   377                           
   378     07F7                     __initialization:
   379                           
   380                           ; Clear objects allocated to COMMON
   381     07F7  01FD               	clrf	__pbssCOMMON& (0+127)
   382                           
   383                           ; Clear objects allocated to BANK0
   384     07F8  1283               	bcf	3,5	;RP0=0, select bank0
   385     07F9  1303               	bcf	3,6	;RP1=0, select bank0
   386     07FA  01A0               	clrf	__pbssBANK0& (0+127)
   387     07FB  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   388     07FC                     end_of_initialization:	
   389                           ;End of C runtime variable initialization code
   390                           
   391     07FC                     __end_of__initialization:
   392     07FC  0183               	clrf	3
   393     07FD  120A  118A  2F5C   	ljmp	_main	;jump to C main() function
   394                           
   395                           	psect	bssCOMMON
   396     007D                     __pbssCOMMON:
   397     007D                     _delayus_variable:
   398     007D                     	ds	1
   399                           
   400                           	psect	bssBANK0
   401     0020                     __pbssBANK0:
   402     0020                     stepper@i:
   403     0020                     	ds	2
   404                           
   405                           	psect	cstackCOMMON
   406     0070                     __pcstackCOMMON:
   407     0070                     ?_eeprom_read:
   408     0070                     ??_eeprom_read:	
   409                           ; 1 bytes @ 0x0
   410                           
   411     0070                     ?_delay_ms:	
   412                           ; 1 bytes @ 0x0
   413                           
   414     0070                     ??_delay_ms:	
   415                           ; 1 bytes @ 0x0
   416                           
   417     0070                     ?_stepper_init:	
   418                           ; 1 bytes @ 0x0
   419                           
   420     0070                     ??_stepper_init:	
   421                           ; 1 bytes @ 0x0
   422                           
   423     0070                     ?_main:	
   424                           ; 1 bytes @ 0x0
   425                           
   426     0070                     delay_ms@cnt:	
   427                           ; 1 bytes @ 0x0
   428                           
   429                           
   430                           ; 1 bytes @ 0x0
   431     0070                     	ds	1
   432     0071                     delay_ms@i:
   433     0071                     eeprom_read@addr:	
   434                           ; 1 bytes @ 0x1
   435                           
   436                           
   437                           ; 1 bytes @ 0x1
   438     0071                     	ds	1
   439     0072                     ?_stepper:
   440     0072                     stepper@steps:	
   441                           ; 1 bytes @ 0x2
   442                           
   443                           
   444                           ; 2 bytes @ 0x2
   445     0072                     	ds	2
   446     0074                     stepper@step_time:
   447                           
   448                           ; 2 bytes @ 0x4
   449     0074                     	ds	2
   450     0076                     ??_stepper:
   451                           
   452                           ; 1 bytes @ 0x6
   453     0076                     	ds	1
   454     0077                     _stepper$49:
   455                           
   456                           ; 2 bytes @ 0x7
   457     0077                     	ds	2
   458     0079                     _stepper$50:
   459                           
   460                           ; 2 bytes @ 0x9
   461     0079                     	ds	2
   462     007B                     stepper@j:
   463                           
   464                           ; 2 bytes @ 0xB
   465     007B                     	ds	2
   466     007D                     ??_main:
   467                           
   468                           	psect	maintext
   469     075C                     __pmaintext:	
   470                           ; 1 bytes @ 0xD
   471 ;;
   472 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   473 ;;
   474 ;; *************** function _main *****************
   475 ;; Defined at:
   476 ;;		line 127 in file "main.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : B00/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   490 ;;      Params:         0       0       0       0       0
   491 ;;      Locals:         0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0
   493 ;;      Totals:         0       0       0       0       0
   494 ;;Total ram usage:        0 bytes
   495 ;; Hardware stack levels required when called: 2
   496 ;; This function calls:
   497 ;;		_stepper
   498 ;;		_stepper_init
   499 ;; This function is called by:
   500 ;;		Startup code after reset
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504     075C                     _main:	
   505                           ;psect for function _main
   506                           
   507     075C                     l815:	
   508                           ;incstack = 0
   509                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   510                           
   511                           
   512                           ;main.c: 128: stepper_init();
   513     075C  120A  118A  271B  120A  118A  	fcall	_stepper_init
   514     0761                     l817:
   515                           
   516                           ;main.c: 129: GIE = 1;
   517     0761  178B               	bsf	11,7	;volatile
   518     0762                     l819:
   519                           
   520                           ;main.c: 132: stepper(-10, 30);
   521     0762  30F6               	movlw	246
   522     0763  00F2               	movwf	stepper@steps
   523     0764  30FF               	movlw	255
   524     0765  00F3               	movwf	stepper@steps+1
   525     0766  301E               	movlw	30
   526     0767  00F4               	movwf	stepper@step_time
   527     0768  3000               	movlw	0
   528     0769  00F5               	movwf	stepper@step_time+1
   529     076A  120A  118A  2773  120A  118A  	fcall	_stepper
   530     076F  2F62               	goto	l819
   531     0770  120A  118A  2800   	ljmp	start
   532     0773                     __end_of_main:
   533                           
   534                           	psect	text1
   535     071B                     __ptext1:	
   536 ;; *************** function _stepper_init *****************
   537 ;; Defined at:
   538 ;;		line 57 in file "main.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, status,2, status,0
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   552 ;;      Params:         0       0       0       0       0
   553 ;;      Locals:         0       0       0       0       0
   554 ;;      Temps:          1       0       0       0       0
   555 ;;      Totals:         1       0       0       0       0
   556 ;;Total ram usage:        1 bytes
   557 ;; Hardware stack levels used: 1
   558 ;; This function calls:
   559 ;;		Nothing
   560 ;; This function is called by:
   561 ;;		_main
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565     071B                     _stepper_init:	
   566                           ;psect for function _stepper_init
   567                           
   568     071B                     l703:	
   569                           ;incstack = 0
   570                           ; Regs used in _stepper_init: [wreg+status,2+status,0]
   571                           
   572                           
   573                           ;main.c: 63: TRISB &= 0b11000011;
   574     071B  30C3               	movlw	195
   575     071C  00F0               	movwf	??_stepper_init
   576     071D  0870               	movf	??_stepper_init,w
   577     071E  1683               	bsf	3,5	;RP0=1, select bank1
   578     071F  1303               	bcf	3,6	;RP1=0, select bank1
   579     0720  0586               	andwf	6,f	;volatile
   580                           
   581                           ;main.c: 64: ANSELH &= 0b010100;
   582     0721  3014               	movlw	20
   583     0722  00F0               	movwf	??_stepper_init
   584     0723  0870               	movf	??_stepper_init,w
   585     0724  1683               	bsf	3,5	;RP0=1, select bank3
   586     0725  1703               	bsf	3,6	;RP1=1, select bank3
   587     0726  0589               	andwf	9,f	;volatile
   588                           
   589                           ;main.c: 65: PORTB &= 0b11000011;
   590     0727  30C3               	movlw	195
   591     0728  00F0               	movwf	??_stepper_init
   592     0729  0870               	movf	??_stepper_init,w
   593     072A  1283               	bcf	3,5	;RP0=0, select bank0
   594     072B  1303               	bcf	3,6	;RP1=0, select bank0
   595     072C  0586               	andwf	6,f	;volatile
   596     072D                     l17:
   597     072D  0008               	return
   598     072E                     __end_of_stepper_init:
   599                           
   600                           	psect	text2
   601     0773                     __ptext2:	
   602 ;; *************** function _stepper *****************
   603 ;; Defined at:
   604 ;;		line 91 in file "main.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;  steps           2    2[COMMON] int 
   607 ;;  step_time       2    4[COMMON] unsigned int 
   608 ;; Auto vars:     Size  Location     Type
   609 ;;  j               2   11[COMMON] int 
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         4       0       0       0       0
   620 ;;      Locals:         6       0       0       0       0
   621 ;;      Temps:          1       0       0       0       0
   622 ;;      Totals:        11       0       0       0       0
   623 ;;Total ram usage:       11 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; Hardware stack levels required when called: 1
   626 ;; This function calls:
   627 ;;		_delay_ms
   628 ;;		_eeprom_read
   629 ;; This function is called by:
   630 ;;		_main
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634     0773                     _stepper:	
   635                           ;psect for function _stepper
   636                           
   637     0773                     l783:	
   638                           ;incstack = 0
   639                           ; Regs used in _stepper: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   640                           
   641                           
   642                           ;main.c: 92: static int i = 0;;main.c: 94: while(steps != 0){
   643     0773  2FF0               	goto	l813
   644     0774                     l23:
   645                           
   646                           ;main.c: 95: portBnibbles.middle = eeprom_read(steps>=0?i++:i--);
   647     0774  1FF3               	btfss	stepper@steps+1,7
   648     0775  2F77               	goto	u201
   649     0776  2F78               	goto	u200
   650     0777                     u201:
   651     0777  2F85               	goto	l787
   652     0778                     u200:
   653     0778                     l785:
   654     0778  1283               	bcf	3,5	;RP0=0, select bank0
   655     0779  1303               	bcf	3,6	;RP1=0, select bank0
   656     077A  0821               	movf	stepper@i+1,w
   657     077B  00F8               	movwf	_stepper$49+1
   658     077C  0820               	movf	stepper@i,w
   659     077D  00F7               	movwf	_stepper$49
   660     077E  30FF               	movlw	255
   661     077F  07A0               	addwf	stepper@i,f
   662     0780  1803               	skipnc
   663     0781  0AA1               	incf	stepper@i+1,f
   664     0782  30FF               	movlw	255
   665     0783  07A1               	addwf	stepper@i+1,f
   666     0784  2F91               	goto	l789
   667     0785                     l787:
   668     0785  1283               	bcf	3,5	;RP0=0, select bank0
   669     0786  1303               	bcf	3,6	;RP1=0, select bank0
   670     0787  0821               	movf	stepper@i+1,w
   671     0788  00F8               	movwf	_stepper$49+1
   672     0789  0820               	movf	stepper@i,w
   673     078A  00F7               	movwf	_stepper$49
   674     078B  3001               	movlw	1
   675     078C  07A0               	addwf	stepper@i,f
   676     078D  1803               	skipnc
   677     078E  0AA1               	incf	stepper@i+1,f
   678     078F  3000               	movlw	0
   679     0790  07A1               	addwf	stepper@i+1,f
   680     0791                     l789:
   681     0791  0877               	movf	_stepper$49,w
   682     0792  120A  118A  2745  120A  118A  	fcall	_eeprom_read
   683     0797  00F6               	movwf	??_stepper
   684     0798  0DF6               	rlf	??_stepper,f
   685     0799  0DF6               	rlf	??_stepper,f
   686     079A  1283               	bcf	3,5	;RP0=0, select bank0
   687     079B  1303               	bcf	3,6	;RP1=0, select bank0
   688     079C  0806               	movf	6,w
   689     079D  0676               	xorwf	??_stepper,w
   690     079E  39C3               	andlw	-61
   691     079F  0676               	xorwf	??_stepper,w
   692     07A0  0086               	movwf	6
   693     07A1                     l791:
   694                           
   695                           ;main.c: 96: steps += (steps>=0)?(-1:1);
   696     07A1  1FF3               	btfss	stepper@steps+1,7
   697     07A2  2FA4               	goto	u211
   698     07A3  2FA5               	goto	u210
   699     07A4                     u211:
   700     07A4  2FAC               	goto	l795
   701     07A5                     u210:
   702     07A5                     l793:
   703     07A5  3001               	movlw	1
   704     07A6  07F2               	addwf	stepper@steps,f
   705     07A7  1803               	skipnc
   706     07A8  0AF3               	incf	stepper@steps+1,f
   707     07A9  3000               	movlw	0
   708     07AA  07F3               	addwf	stepper@steps+1,f
   709     07AB  2FB2               	goto	l797
   710     07AC                     l795:
   711     07AC  30FF               	movlw	255
   712     07AD  07F2               	addwf	stepper@steps,f
   713     07AE  1803               	skipnc
   714     07AF  0AF3               	incf	stepper@steps+1,f
   715     07B0  30FF               	movlw	255
   716     07B1  07F3               	addwf	stepper@steps+1,f
   717     07B2                     l797:
   718                           
   719                           ;main.c: 97: i = (i>7)?(0:( i<0 ? 7:i));
   720     07B2  0821               	movf	stepper@i+1,w
   721     07B3  3A80               	xorlw	128
   722     07B4  00FF               	movwf	btemp+1
   723     07B5  3080               	movlw	128
   724     07B6  027F               	subwf	btemp+1,w
   725     07B7  1D03               	skipz
   726     07B8  2FBB               	goto	u225
   727     07B9  3008               	movlw	8
   728     07BA  0220               	subwf	stepper@i,w
   729     07BB                     u225:
   730     07BB  1803               	skipnc
   731     07BC  2FBE               	goto	u221
   732     07BD  2FBF               	goto	u220
   733     07BE                     u221:
   734     07BE  2FD3               	goto	l805
   735     07BF                     u220:
   736     07BF                     l799:
   737     07BF  1283               	bcf	3,5	;RP0=0, select bank0
   738     07C0  1303               	bcf	3,6	;RP1=0, select bank0
   739     07C1  1BA1               	btfsc	stepper@i+1,7
   740     07C2  2FC4               	goto	u231
   741     07C3  2FC5               	goto	u230
   742     07C4                     u231:
   743     07C4  2FCA               	goto	l803
   744     07C5                     u230:
   745     07C5                     l801:
   746     07C5  0821               	movf	stepper@i+1,w
   747     07C6  00FA               	movwf	_stepper$50+1
   748     07C7  0820               	movf	stepper@i,w
   749     07C8  00F9               	movwf	_stepper$50
   750     07C9  2FCE               	goto	l39
   751     07CA                     l803:
   752     07CA  3007               	movlw	7
   753     07CB  00F9               	movwf	_stepper$50
   754     07CC  3000               	movlw	0
   755     07CD  00FA               	movwf	_stepper$50+1
   756     07CE                     l39:
   757     07CE  087A               	movf	_stepper$50+1,w
   758     07CF  00A1               	movwf	stepper@i+1
   759     07D0  0879               	movf	_stepper$50,w
   760     07D1  00A0               	movwf	stepper@i
   761     07D2  2FD7               	goto	l35
   762     07D3                     l805:
   763     07D3  1283               	bcf	3,5	;RP0=0, select bank0
   764     07D4  1303               	bcf	3,6	;RP1=0, select bank0
   765     07D5  01A0               	clrf	stepper@i
   766     07D6  01A1               	clrf	stepper@i+1
   767     07D7                     l35:
   768                           
   769                           ;main.c: 98: for(int j = 0; j<step_time; j++){
   770     07D7  01FB               	clrf	stepper@j
   771     07D8  01FC               	clrf	stepper@j+1
   772     07D9  2FE6               	goto	l811
   773     07DA                     l807:
   774                           
   775                           ;main.c: 99: delay_ms(1);
   776     07DA  3001               	movlw	1
   777     07DB  120A  118A  272E  120A  118A  	fcall	_delay_ms
   778     07E0                     l809:
   779     07E0  3001               	movlw	1
   780     07E1  07FB               	addwf	stepper@j,f
   781     07E2  1803               	skipnc
   782     07E3  0AFC               	incf	stepper@j+1,f
   783     07E4  3000               	movlw	0
   784     07E5  07FC               	addwf	stepper@j+1,f
   785     07E6                     l811:
   786     07E6  0875               	movf	stepper@step_time+1,w
   787     07E7  027C               	subwf	stepper@j+1,w
   788     07E8  1D03               	skipz
   789     07E9  2FEC               	goto	u245
   790     07EA  0874               	movf	stepper@step_time,w
   791     07EB  027B               	subwf	stepper@j,w
   792     07EC                     u245:
   793     07EC  1C03               	skipc
   794     07ED  2FEF               	goto	u241
   795     07EE  2FF0               	goto	u240
   796     07EF                     u241:
   797     07EF  2FDA               	goto	l807
   798     07F0                     u240:
   799     07F0                     l813:
   800     07F0  0872               	movf	stepper@steps,w
   801     07F1  0473               	iorwf	stepper@steps+1,w
   802     07F2  1D03               	btfss	3,2
   803     07F3  2FF5               	goto	u251
   804     07F4  2FF6               	goto	u250
   805     07F5                     u251:
   806     07F5  2F74               	goto	l23
   807     07F6                     u250:
   808     07F6                     l44:
   809     07F6  0008               	return
   810     07F7                     __end_of_stepper:
   811                           
   812                           	psect	text3
   813     0745                     __ptext3:	
   814 ;; *************** function _eeprom_read *****************
   815 ;; Defined at:
   816 ;;		line 6 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/pic/__eeread.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;  addr            1    wreg     unsigned char 
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  addr            1    1[COMMON] unsigned char 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      unsigned char 
   823 ;; Registers used:
   824 ;;		wreg, status,2, status,0
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   830 ;;      Params:         0       0       0       0       0
   831 ;;      Locals:         1       0       0       0       0
   832 ;;      Temps:          1       0       0       0       0
   833 ;;      Totals:         2       0       0       0       0
   834 ;;Total ram usage:        2 bytes
   835 ;; Hardware stack levels used: 1
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		_stepper
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843     0745                     _eeprom_read:	
   844                           ;psect for function _eeprom_read
   845                           
   846                           
   847                           ;incstack = 0
   848                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
   849                           ;eeprom_read@addr stored from wreg
   850     0745  00F1               	movwf	eeprom_read@addr
   851     0746                     l181:	
   852                           ;__eeread.c: 8: do
   853                           
   854     0746  0064               	clrwdt	;# 
   855                           
   856                           ;__eeread.c: 12: while(EECON1bits.WR);
   857     0747  1683               	bsf	3,5	;RP0=1, select bank3
   858     0748  1703               	bsf	3,6	;RP1=1, select bank3
   859     0749  188C               	btfsc	12,1	;volsfr
   860     074A  2F4C               	goto	u171
   861     074B  2F4D               	goto	u170
   862     074C                     u171:
   863     074C  2F46               	goto	l181
   864     074D                     u170:
   865     074D                     l773:
   866                           
   867                           ;__eeread.c: 18: return ( EEADR = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
   868     074D  0871               	movf	eeprom_read@addr,w
   869     074E  1283               	bcf	3,5	;RP0=0, select bank2
   870     074F  1703               	bsf	3,6	;RP1=1, select bank2
   871     0750  008D               	movwf	13	;volatile
   872     0751  303F               	movlw	63
   873     0752  00F0               	movwf	??_eeprom_read
   874     0753  0870               	movf	??_eeprom_read,w
   875     0754  1683               	bsf	3,5	;RP0=1, select bank3
   876     0755  1703               	bsf	3,6	;RP1=1, select bank3
   877     0756  058C               	andwf	12,f	;volsfr
   878     0757  140C               	bsf	12,0	;volsfr
   879     0758  1283               	bcf	3,5	;RP0=0, select bank2
   880     0759  1703               	bsf	3,6	;RP1=1, select bank2
   881     075A  080C               	movf	12,w	;volatile
   882     075B                     l183:
   883     075B  0008               	return
   884     075C                     __end_of_eeprom_read:
   885                           
   886                           	psect	text4
   887     072E                     __ptext4:	
   888 ;; *************** function _delay_ms *****************
   889 ;; Defined at:
   890 ;;		line 37 in file "../projeto-aula.X/delay.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  cnt             1    wreg     unsigned char 
   893 ;; Auto vars:     Size  Location     Type
   894 ;;  cnt             1    0[COMMON] unsigned char 
   895 ;;  i               1    1[COMMON] unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   905 ;;      Params:         0       0       0       0       0
   906 ;;      Locals:         2       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0
   908 ;;      Totals:         2       0       0       0       0
   909 ;;Total ram usage:        2 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; This function calls:
   912 ;;		Nothing
   913 ;; This function is called by:
   914 ;;		_stepper
   915 ;;		_delay_s
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919     072E                     _delay_ms:	
   920                           ;psect for function _delay_ms
   921                           
   922                           
   923                           ;incstack = 0
   924                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
   925                           ;delay_ms@cnt stored from wreg
   926     072E  00F0               	movwf	delay_ms@cnt
   927     072F                     l63:	
   928                           ;delay.c: 38: unsigned char i;;delay.c: 39: do {
   929                           
   930     072F                     l777:
   931                           
   932                           ;delay.c: 40: i = 4;
   933     072F  3004               	movlw	4
   934     0730  00F1               	movwf	delay_ms@i
   935     0731                     l64:	
   936                           ;delay.c: 41: do {
   937                           
   938                           
   939                           ;delay.c: 42: { delayus_variable=(unsigned char)(250/1); asm("nop"); asm("nop"); } asm("
      +                          decfsz _delayus_variable,f"); asm("goto $ - 3");;
   940     0731  30FA               	movlw	250
   941     0732  00FD               	movwf	_delayus_variable
   942     0733  0000               	nop	;# 
   943     0734  0000               	nop	;# 
   944     0735  0BFD               	decfsz	_delayus_variable,f	;# 
   945     0736  2F2B               	goto	($+-3)	;# 
   946     0737  0064               	clrwdt	;# 
   947     0738                     l779:
   948                           
   949                           ;delay.c: 44: } while(--i);
   950     0738  3001               	movlw	1
   951     0739  02F1               	subwf	delay_ms@i,f
   952     073A  1D03               	btfss	3,2
   953     073B  2F3D               	goto	u181
   954     073C  2F3E               	goto	u180
   955     073D                     u181:
   956     073D  2F31               	goto	l64
   957     073E                     u180:
   958     073E                     l781:
   959                           
   960                           ;delay.c: 45: } while(--cnt);
   961     073E  3001               	movlw	1
   962     073F  02F0               	subwf	delay_ms@cnt,f
   963     0740  1D03               	btfss	3,2
   964     0741  2F43               	goto	u191
   965     0742  2F44               	goto	u190
   966     0743                     u191:
   967     0743  2F2F               	goto	l63
   968     0744                     u190:
   969     0744                     l67:
   970     0744  0008               	return
   971     0745                     __end_of_delay_ms:
   972     007E                     btemp	set	126	;btemp
   973     007E                     wtemp0	set	126
   974                           
   975                           	psect	idloc
   976                           
   977                           ;Config register IDLOC0 @ 0x2000
   978                           ;	unspecified, using default values
   979     2000                     	org	8192
   980     2000  3FFF               	dw	16383
   981                           
   982                           ;Config register IDLOC1 @ 0x2001
   983                           ;	unspecified, using default values
   984     2001                     	org	8193
   985     2001  3FFF               	dw	16383
   986                           
   987                           ;Config register IDLOC2 @ 0x2002
   988                           ;	unspecified, using default values
   989     2002                     	org	8194
   990     2002  3FFF               	dw	16383
   991                           
   992                           ;Config register IDLOC3 @ 0x2003
   993                           ;	unspecified, using default values
   994     2003                     	org	8195
   995     2003  3FFF               	dw	16383
   996                           
   997                           	psect	config
   998                           
   999                           ;Config register CONFIG1 @ 0x2007
  1000                           ;	Oscillator Selection bits
  1001                           ;	FOSC = EC, EC: I/O function on RA6/OSC2/CLKOUT pin, CLKIN on RA7/OSC1/CLKIN
  1002                           ;	Watchdog Timer Enable bit
  1003                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1004                           ;	Power-up Timer Enable bit
  1005                           ;	PWRTE = OFF, PWRT disabled
  1006                           ;	RE3/MCLR pin function select bit
  1007                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1008                           ;	Code Protection bit
  1009                           ;	CP = OFF, Program memory code protection is disabled
  1010                           ;	Data Code Protection bit
  1011                           ;	CPD = OFF, Data memory code protection is disabled
  1012                           ;	Brown Out Reset Selection bits
  1013                           ;	BOREN = ON, BOR enabled
  1014                           ;	Internal External Switchover bit
  1015                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1016                           ;	Fail-Safe Clock Monitor Enabled bit
  1017                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1018                           ;	Low Voltage Programming Enable bit
  1019                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1020                           ;	In-Circuit Debugger Mode bit
  1021                           ;	DEBUG = 0x1, unprogrammed default
  1022     2007                     	org	8199
  1023     2007  2FF3               	dw	12275
  1024                           
  1025                           ;Config register CONFIG2 @ 0x2008
  1026                           ;	Brown-out Reset Selection bit
  1027                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1028                           ;	Flash Program Memory Self Write Enable bits
  1029                           ;	WRT = OFF, Write protection off
  1030     2008                     	org	8200
  1031     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      0       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_stepper
    _stepper->_delay_ms
    _stepper->_eeprom_read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     381
                            _stepper
                       _stepper_init
 ---------------------------------------------------------------------------------
 (1) _stepper_init                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _stepper                                             11     7      4     381
                                              2 COMMON    11     7      4
                           _delay_ms
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     2      0      45
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _stepper
     _delay_ms
     _eeprom_read
   _stepper_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jul  3 18:04:53 2023

                     l23 0774                       l17 072D                       l35 07D7  
                     l44 07F6                       l63 072F                       l39 07CE  
                     l64 0731                       l67 0744                      l181 0746  
                    l183 075B                      l703 071B                      l801 07C5  
                    l811 07E6                      l803 07CA                      l805 07D3  
                    l813 07F0                      l807 07DA                      l815 075C  
                    l809 07E0                      l817 0761                      l819 0762  
                    l781 073E                      l773 074D                      l791 07A1  
                    l783 0773                      l777 072F                      l793 07A5  
                    l785 0778                      l779 0738                      l795 07AC  
                    l787 0785                      l797 07B2                      l789 0791  
                    l799 07BF                      _GIE 005F                      u200 0778  
                    u201 0777                      u210 07A5                      u211 07A4  
                    u220 07BF                      u221 07BE                      u230 07C5  
                    u231 07C4                      u240 07F0                      u241 07EF  
                    u225 07BB                      u170 074D                      u250 07F6  
                    u171 074C                      u251 07F5                      u180 073E  
                    u181 073D                      u245 07EC                      u190 0744  
                    u191 0743                     _main 075C                     btemp 007E  
                   start 0000             _stepper_init 071B                    ?_main 0070  
                  _EEADR 010D                    _PORTB 0006                    _TRISB 0086  
                  status 0003          __end_of_stepper 07F7                    wtemp0 007E  
        __initialization 07F7             __end_of_main 0773                   ??_main 007D  
                 _EEDATA 010C                   _EECON1 018C                   _ANSELH 0189  
       __end_of_delay_ms 0745                ??_stepper 0076  __end_of__initialization 07FC  
        eeprom_read@addr 0071           __pcstackCOMMON 0070             stepper@steps 0072  
             __pbssBANK0 0020               __pmaintext 075C                ?_delay_ms 0070  
       stepper@step_time 0074                  __ptext0 0000                  __ptext1 071B  
                __ptext2 0773                  __ptext3 0745                  __ptext4 072E  
             ??_delay_ms 0070                  _stepper 0773     end_of_initialization 07FC  
             _stepper$50 0079               _stepper$49 0077            ??_eeprom_read 0070  
       _delayus_variable 007D      start_initialization 07F7      __end_of_eeprom_read 075C  
          ?_stepper_init 0070              __pbssCOMMON 007D                ___latbits 0002  
         ??_stepper_init 0070                 ?_stepper 0072                delay_ms@i 0071  
            _eeprom_read 0745               _EECON1bits 018C                 _delay_ms 072E  
   __end_of_stepper_init 072E              delay_ms@cnt 0070             _portBnibbles 0006  
               stepper@i 0020                 stepper@j 007B             ?_eeprom_read 0070  
